<?php
/**
 * ItemV2
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Webcom\Amazon\Rest\ShippingApiV2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Amazon Shipping API
 *
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * The version of the OpenAPI document: v2
 * Contact: swa-api-core@amazon.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Webcom\Amazon\Rest\ShippingApiV2\Model;

use \Webcom\Amazon\Rest\ModelInterface;
use \ArrayAccess;
use \Webcom\Amazon\Rest\ObjectSerializer;

/**
 * ItemV2 Class Doc Comment
 *
 * @category Class
 * @description An item in a package.
 * @package  Webcom\Amazon\Rest\ShippingApiV2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class ItemV2 implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Item';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'itemValue' => '\Webcom\Amazon\Rest\ShippingApiV2\Model\CurrencyV2',
        'description' => 'string',
        'itemIdentifier' => 'string',
        'quantity' => 'int',
        'weight' => '\Webcom\Amazon\Rest\ShippingApiV2\Model\WeightV2',
        'liquidVolume' => '\Webcom\Amazon\Rest\ShippingApiV2\Model\LiquidVolumeV2',
        'isHazmat' => 'bool',
        'dangerousGoodsDetails' => '\Webcom\Amazon\Rest\ShippingApiV2\Model\DangerousGoodsDetailsV2',
        'productType' => 'string',
        'invoiceDetails' => '\Webcom\Amazon\Rest\ShippingApiV2\Model\InvoiceDetailsV2',
        'serialNumbers' => 'string[]',
        'directFulfillmentItemIdentifiers' => '\Webcom\Amazon\Rest\ShippingApiV2\Model\DirectFulfillmentItemIdentifiersV2'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'itemValue' => null,
        'description' => null,
        'itemIdentifier' => null,
        'quantity' => null,
        'weight' => null,
        'liquidVolume' => null,
        'isHazmat' => null,
        'dangerousGoodsDetails' => null,
        'productType' => null,
        'invoiceDetails' => null,
        'serialNumbers' => null,
        'directFulfillmentItemIdentifiers' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'itemValue' => 'itemValue',
        'description' => 'description',
        'itemIdentifier' => 'itemIdentifier',
        'quantity' => 'quantity',
        'weight' => 'weight',
        'liquidVolume' => 'liquidVolume',
        'isHazmat' => 'isHazmat',
        'dangerousGoodsDetails' => 'dangerousGoodsDetails',
        'productType' => 'productType',
        'invoiceDetails' => 'invoiceDetails',
        'serialNumbers' => 'serialNumbers',
        'directFulfillmentItemIdentifiers' => 'directFulfillmentItemIdentifiers'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'itemValue' => 'setItemValue',
        'description' => 'setDescription',
        'itemIdentifier' => 'setItemIdentifier',
        'quantity' => 'setQuantity',
        'weight' => 'setWeight',
        'liquidVolume' => 'setLiquidVolume',
        'isHazmat' => 'setIsHazmat',
        'dangerousGoodsDetails' => 'setDangerousGoodsDetails',
        'productType' => 'setProductType',
        'invoiceDetails' => 'setInvoiceDetails',
        'serialNumbers' => 'setSerialNumbers',
        'directFulfillmentItemIdentifiers' => 'setDirectFulfillmentItemIdentifiers'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'itemValue' => 'getItemValue',
        'description' => 'getDescription',
        'itemIdentifier' => 'getItemIdentifier',
        'quantity' => 'getQuantity',
        'weight' => 'getWeight',
        'liquidVolume' => 'getLiquidVolume',
        'isHazmat' => 'getIsHazmat',
        'dangerousGoodsDetails' => 'getDangerousGoodsDetails',
        'productType' => 'getProductType',
        'invoiceDetails' => 'getInvoiceDetails',
        'serialNumbers' => 'getSerialNumbers',
        'directFulfillmentItemIdentifiers' => 'getDirectFulfillmentItemIdentifiers'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['itemValue'] = $data['itemValue'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['itemIdentifier'] = $data['itemIdentifier'] ?? null;
        $this->container['quantity'] = $data['quantity'] ?? null;
        $this->container['weight'] = $data['weight'] ?? null;
        $this->container['liquidVolume'] = $data['liquidVolume'] ?? null;
        $this->container['isHazmat'] = $data['isHazmat'] ?? null;
        $this->container['dangerousGoodsDetails'] = $data['dangerousGoodsDetails'] ?? null;
        $this->container['productType'] = $data['productType'] ?? null;
        $this->container['invoiceDetails'] = $data['invoiceDetails'] ?? null;
        $this->container['serialNumbers'] = $data['serialNumbers'] ?? null;
        $this->container['directFulfillmentItemIdentifiers'] = $data['directFulfillmentItemIdentifiers'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['quantity'] === null) {
            $invalidProperties[] = "'quantity' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets itemValue
     *
     * @return \Webcom\Amazon\Rest\ShippingApiV2\Model\CurrencyV2|null
     */
    public function getItemValue()
    {
        return $this->container['itemValue'];
    }

    /**
     * Sets itemValue
     *
     * @param \Webcom\Amazon\Rest\ShippingApiV2\Model\CurrencyV2|null $itemValue itemValue
     *
     * @return self
     */
    public function setItemValue($itemValue)
    {
        $this->container['itemValue'] = $itemValue;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description The product description of the item.
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets itemIdentifier
     *
     * @return string|null
     */
    public function getItemIdentifier()
    {
        return $this->container['itemIdentifier'];
    }

    /**
     * Sets itemIdentifier
     *
     * @param string|null $itemIdentifier A unique identifier for an item provided by the client.
     *
     * @return self
     */
    public function setItemIdentifier($itemIdentifier)
    {
        $this->container['itemIdentifier'] = $itemIdentifier;

        return $this;
    }

    /**
     * Gets quantity
     *
     * @return int
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     *
     * @param int $quantity The number of units. This value is required.
     *
     * @return self
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets weight
     *
     * @return \Webcom\Amazon\Rest\ShippingApiV2\Model\WeightV2|null
     */
    public function getWeight()
    {
        return $this->container['weight'];
    }

    /**
     * Sets weight
     *
     * @param \Webcom\Amazon\Rest\ShippingApiV2\Model\WeightV2|null $weight weight
     *
     * @return self
     */
    public function setWeight($weight)
    {
        $this->container['weight'] = $weight;

        return $this;
    }

    /**
     * Gets liquidVolume
     *
     * @return \Webcom\Amazon\Rest\ShippingApiV2\Model\LiquidVolumeV2|null
     */
    public function getLiquidVolume()
    {
        return $this->container['liquidVolume'];
    }

    /**
     * Sets liquidVolume
     *
     * @param \Webcom\Amazon\Rest\ShippingApiV2\Model\LiquidVolumeV2|null $liquidVolume liquidVolume
     *
     * @return self
     */
    public function setLiquidVolume($liquidVolume)
    {
        $this->container['liquidVolume'] = $liquidVolume;

        return $this;
    }

    /**
     * Gets isHazmat
     *
     * @return bool|null
     */
    public function getIsHazmat()
    {
        return $this->container['isHazmat'];
    }

    /**
     * Sets isHazmat
     *
     * @param bool|null $isHazmat When true, the item qualifies as hazardous materials (hazmat). Defaults to false.
     *
     * @return self
     */
    public function setIsHazmat($isHazmat)
    {
        $this->container['isHazmat'] = $isHazmat;

        return $this;
    }

    /**
     * Gets dangerousGoodsDetails
     *
     * @return \Webcom\Amazon\Rest\ShippingApiV2\Model\DangerousGoodsDetailsV2|null
     */
    public function getDangerousGoodsDetails()
    {
        return $this->container['dangerousGoodsDetails'];
    }

    /**
     * Sets dangerousGoodsDetails
     *
     * @param \Webcom\Amazon\Rest\ShippingApiV2\Model\DangerousGoodsDetailsV2|null $dangerousGoodsDetails dangerousGoodsDetails
     *
     * @return self
     */
    public function setDangerousGoodsDetails($dangerousGoodsDetails)
    {
        $this->container['dangerousGoodsDetails'] = $dangerousGoodsDetails;

        return $this;
    }

    /**
     * Gets productType
     *
     * @return string|null
     */
    public function getProductType()
    {
        return $this->container['productType'];
    }

    /**
     * Sets productType
     *
     * @param string|null $productType The product type of the item.
     *
     * @return self
     */
    public function setProductType($productType)
    {
        $this->container['productType'] = $productType;

        return $this;
    }

    /**
     * Gets invoiceDetails
     *
     * @return \Webcom\Amazon\Rest\ShippingApiV2\Model\InvoiceDetailsV2|null
     */
    public function getInvoiceDetails()
    {
        return $this->container['invoiceDetails'];
    }

    /**
     * Sets invoiceDetails
     *
     * @param \Webcom\Amazon\Rest\ShippingApiV2\Model\InvoiceDetailsV2|null $invoiceDetails invoiceDetails
     *
     * @return self
     */
    public function setInvoiceDetails($invoiceDetails)
    {
        $this->container['invoiceDetails'] = $invoiceDetails;

        return $this;
    }

    /**
     * Gets serialNumbers
     *
     * @return string[]|null
     */
    public function getSerialNumbers()
    {
        return $this->container['serialNumbers'];
    }

    /**
     * Sets serialNumbers
     *
     * @param string[]|null $serialNumbers A list of unique serial numbers in an Amazon package that can be used to guarantee non-fraudulent items. The number of serial numbers in the list must be less than or equal to the quantity of items being shipped. Only applicable when channel source is Amazon.
     *
     * @return self
     */
    public function setSerialNumbers($serialNumbers)
    {
        $this->container['serialNumbers'] = $serialNumbers;

        return $this;
    }

    /**
     * Gets directFulfillmentItemIdentifiers
     *
     * @return \Webcom\Amazon\Rest\ShippingApiV2\Model\DirectFulfillmentItemIdentifiersV2|null
     */
    public function getDirectFulfillmentItemIdentifiers()
    {
        return $this->container['directFulfillmentItemIdentifiers'];
    }

    /**
     * Sets directFulfillmentItemIdentifiers
     *
     * @param \Webcom\Amazon\Rest\ShippingApiV2\Model\DirectFulfillmentItemIdentifiersV2|null $directFulfillmentItemIdentifiers directFulfillmentItemIdentifiers
     *
     * @return self
     */
    public function setDirectFulfillmentItemIdentifiers($directFulfillmentItemIdentifiers)
    {
        $this->container['directFulfillmentItemIdentifiers'] = $directFulfillmentItemIdentifiers;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


