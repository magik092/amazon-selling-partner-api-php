<?php
/**
 * AccessPointV2
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Webcom\Amazon\Rest\ShippingApiV2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Amazon Shipping API
 *
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * The version of the OpenAPI document: v2
 * Contact: swa-api-core@amazon.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Webcom\Amazon\Rest\ShippingApiV2\Model;

use \Webcom\Amazon\Rest\ModelInterface;
use \ArrayAccess;
use \Webcom\Amazon\Rest\ObjectSerializer;

/**
 * AccessPointV2 Class Doc Comment
 *
 * @category Class
 * @description Access point details
 * @package  Webcom\Amazon\Rest\ShippingApiV2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class AccessPointV2 implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AccessPoint';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'accessPointId' => 'string',
        'name' => 'string',
        'timezone' => 'string',
        'type' => '\Webcom\Amazon\Rest\ShippingApiV2\Model\AccessPointTypeV2',
        'accessibilityAttributes' => '\Webcom\Amazon\Rest\ShippingApiV2\Model\AccessibilityAttributesV2',
        'address' => '\Webcom\Amazon\Rest\ShippingApiV2\Model\AddressV2',
        'exceptionOperatingHours' => '\Webcom\Amazon\Rest\ShippingApiV2\Model\ExceptionOperatingHoursV2[]',
        'assistanceType' => 'string',
        'score' => 'string',
        'standardOperatingHours' => 'map[string,\Webcom\Amazon\Rest\ShippingApiV2\Model\OperatingHoursV2]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'accessPointId' => null,
        'name' => null,
        'timezone' => null,
        'type' => null,
        'accessibilityAttributes' => null,
        'address' => null,
        'exceptionOperatingHours' => null,
        'assistanceType' => null,
        'score' => null,
        'standardOperatingHours' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'accessPointId' => 'accessPointId',
        'name' => 'name',
        'timezone' => 'timezone',
        'type' => 'type',
        'accessibilityAttributes' => 'accessibilityAttributes',
        'address' => 'address',
        'exceptionOperatingHours' => 'exceptionOperatingHours',
        'assistanceType' => 'assistanceType',
        'score' => 'score',
        'standardOperatingHours' => 'standardOperatingHours'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'accessPointId' => 'setAccessPointId',
        'name' => 'setName',
        'timezone' => 'setTimezone',
        'type' => 'setType',
        'accessibilityAttributes' => 'setAccessibilityAttributes',
        'address' => 'setAddress',
        'exceptionOperatingHours' => 'setExceptionOperatingHours',
        'assistanceType' => 'setAssistanceType',
        'score' => 'setScore',
        'standardOperatingHours' => 'setStandardOperatingHours'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'accessPointId' => 'getAccessPointId',
        'name' => 'getName',
        'timezone' => 'getTimezone',
        'type' => 'getType',
        'accessibilityAttributes' => 'getAccessibilityAttributes',
        'address' => 'getAddress',
        'exceptionOperatingHours' => 'getExceptionOperatingHours',
        'assistanceType' => 'getAssistanceType',
        'score' => 'getScore',
        'standardOperatingHours' => 'getStandardOperatingHours'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    const ASSISTANCE_TYPE_STAFF_ASSISTED = 'STAFF_ASSISTED';
    const ASSISTANCE_TYPE_SELF_ASSISTED = 'SELF_ASSISTED';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getAssistanceTypeAllowableValues()
    {
        return [
            self::ASSISTANCE_TYPE_STAFF_ASSISTED,
            self::ASSISTANCE_TYPE_SELF_ASSISTED,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['accessPointId'] = $data['accessPointId'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['timezone'] = $data['timezone'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
        $this->container['accessibilityAttributes'] = $data['accessibilityAttributes'] ?? null;
        $this->container['address'] = $data['address'] ?? null;
        $this->container['exceptionOperatingHours'] = $data['exceptionOperatingHours'] ?? null;
        $this->container['assistanceType'] = $data['assistanceType'] ?? null;
        $this->container['score'] = $data['score'] ?? null;
        $this->container['standardOperatingHours'] = $data['standardOperatingHours'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getAssistanceTypeAllowableValues();
        if (!is_null($this->container['assistanceType']) && !in_array($this->container['assistanceType'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'assistanceType', must be one of '%s'",
                $this->container['assistanceType'],
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets accessPointId
     *
     * @return string|null
     */
    public function getAccessPointId()
    {
        return $this->container['accessPointId'];
    }

    /**
     * Sets accessPointId
     *
     * @param string|null $accessPointId Unique identifier for the access point
     *
     * @return self
     */
    public function setAccessPointId($accessPointId)
    {
        $this->container['accessPointId'] = $accessPointId;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name Name of entity (store/hub etc) where this access point is located
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets timezone
     *
     * @return string|null
     */
    public function getTimezone()
    {
        return $this->container['timezone'];
    }

    /**
     * Sets timezone
     *
     * @param string|null $timezone Timezone of access point
     *
     * @return self
     */
    public function setTimezone($timezone)
    {
        $this->container['timezone'] = $timezone;

        return $this;
    }

    /**
     * Gets type
     *
     * @return \Webcom\Amazon\Rest\ShippingApiV2\Model\AccessPointTypeV2|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param \Webcom\Amazon\Rest\ShippingApiV2\Model\AccessPointTypeV2|null $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets accessibilityAttributes
     *
     * @return \Webcom\Amazon\Rest\ShippingApiV2\Model\AccessibilityAttributesV2|null
     */
    public function getAccessibilityAttributes()
    {
        return $this->container['accessibilityAttributes'];
    }

    /**
     * Sets accessibilityAttributes
     *
     * @param \Webcom\Amazon\Rest\ShippingApiV2\Model\AccessibilityAttributesV2|null $accessibilityAttributes accessibilityAttributes
     *
     * @return self
     */
    public function setAccessibilityAttributes($accessibilityAttributes)
    {
        $this->container['accessibilityAttributes'] = $accessibilityAttributes;

        return $this;
    }

    /**
     * Gets address
     *
     * @return \Webcom\Amazon\Rest\ShippingApiV2\Model\AddressV2|null
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param \Webcom\Amazon\Rest\ShippingApiV2\Model\AddressV2|null $address address
     *
     * @return self
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets exceptionOperatingHours
     *
     * @return \Webcom\Amazon\Rest\ShippingApiV2\Model\ExceptionOperatingHoursV2[]|null
     */
    public function getExceptionOperatingHours()
    {
        return $this->container['exceptionOperatingHours'];
    }

    /**
     * Sets exceptionOperatingHours
     *
     * @param \Webcom\Amazon\Rest\ShippingApiV2\Model\ExceptionOperatingHoursV2[]|null $exceptionOperatingHours exceptionOperatingHours
     *
     * @return self
     */
    public function setExceptionOperatingHours($exceptionOperatingHours)
    {
        $this->container['exceptionOperatingHours'] = $exceptionOperatingHours;

        return $this;
    }

    /**
     * Gets assistanceType
     *
     * @return string|null
     */
    public function getAssistanceType()
    {
        return $this->container['assistanceType'];
    }

    /**
     * Sets assistanceType
     *
     * @param string|null $assistanceType assistanceType
     *
     * @return self
     */
    public function setAssistanceType($assistanceType)
    {
        $allowedValues = $this->getAssistanceTypeAllowableValues();
        if (!is_null($assistanceType) && !in_array($assistanceType, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'assistanceType', must be one of '%s'",
                    $assistanceType,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['assistanceType'] = $assistanceType;

        return $this;
    }

    /**
     * Gets score
     *
     * @return string|null
     */
    public function getScore()
    {
        return $this->container['score'];
    }

    /**
     * Sets score
     *
     * @param string|null $score The score of access point, based on proximity to postal code and sorting preference. This can be used to sort access point results on shipper's end.
     *
     * @return self
     */
    public function setScore($score)
    {
        $this->container['score'] = $score;

        return $this;
    }

    /**
     * Gets standardOperatingHours
     *
     * @return map[string,\Webcom\Amazon\Rest\ShippingApiV2\Model\OperatingHoursV2]|null
     */
    public function getStandardOperatingHours()
    {
        return $this->container['standardOperatingHours'];
    }

    /**
     * Sets standardOperatingHours
     *
     * @param map[string,\Webcom\Amazon\Rest\ShippingApiV2\Model\OperatingHoursV2]|null $standardOperatingHours Map of day of the week to operating hours of that day
     *
     * @return self
     */
    public function setStandardOperatingHours($standardOperatingHours)
    {
        $this->container['standardOperatingHours'] = $standardOperatingHours;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


