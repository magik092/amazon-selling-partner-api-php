<?php
/**
 * RateV2
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Webcom\Amazon\Rest\ShippingApiV2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Amazon Shipping API
 *
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * The version of the OpenAPI document: v2
 * Contact: swa-api-core@amazon.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Webcom\Amazon\Rest\ShippingApiV2\Model;

use \Webcom\Amazon\Rest\ModelInterface;
use \ArrayAccess;
use \Webcom\Amazon\Rest\ObjectSerializer;

/**
 * RateV2 Class Doc Comment
 *
 * @category Class
 * @description The details of a shipping service offering.
 * @package  Webcom\Amazon\Rest\ShippingApiV2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class RateV2 implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Rate';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'rateId' => 'string',
        'carrierId' => 'string',
        'carrierName' => 'string',
        'serviceId' => 'string',
        'serviceName' => 'string',
        'billedWeight' => '\Webcom\Amazon\Rest\ShippingApiV2\Model\WeightV2',
        'totalCharge' => '\Webcom\Amazon\Rest\ShippingApiV2\Model\CurrencyV2',
        'promise' => '\Webcom\Amazon\Rest\ShippingApiV2\Model\PromiseV2',
        'supportedDocumentSpecifications' => '\Webcom\Amazon\Rest\ShippingApiV2\Model\SupportedDocumentSpecificationV2[]',
        'availableValueAddedServiceGroups' => '\Webcom\Amazon\Rest\ShippingApiV2\Model\AvailableValueAddedServiceGroupV2[]',
        'requiresAdditionalInputs' => 'bool',
        'rateItemList' => '\Webcom\Amazon\Rest\ShippingApiV2\Model\RateItemV2[]',
        'paymentType' => '\Webcom\Amazon\Rest\ShippingApiV2\Model\PaymentTypeV2',
        'benefits' => '\Webcom\Amazon\Rest\ShippingApiV2\Model\BenefitsV2'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'rateId' => null,
        'carrierId' => null,
        'carrierName' => null,
        'serviceId' => null,
        'serviceName' => null,
        'billedWeight' => null,
        'totalCharge' => null,
        'promise' => null,
        'supportedDocumentSpecifications' => null,
        'availableValueAddedServiceGroups' => null,
        'requiresAdditionalInputs' => null,
        'rateItemList' => null,
        'paymentType' => null,
        'benefits' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'rateId' => 'rateId',
        'carrierId' => 'carrierId',
        'carrierName' => 'carrierName',
        'serviceId' => 'serviceId',
        'serviceName' => 'serviceName',
        'billedWeight' => 'billedWeight',
        'totalCharge' => 'totalCharge',
        'promise' => 'promise',
        'supportedDocumentSpecifications' => 'supportedDocumentSpecifications',
        'availableValueAddedServiceGroups' => 'availableValueAddedServiceGroups',
        'requiresAdditionalInputs' => 'requiresAdditionalInputs',
        'rateItemList' => 'rateItemList',
        'paymentType' => 'paymentType',
        'benefits' => 'benefits'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'rateId' => 'setRateId',
        'carrierId' => 'setCarrierId',
        'carrierName' => 'setCarrierName',
        'serviceId' => 'setServiceId',
        'serviceName' => 'setServiceName',
        'billedWeight' => 'setBilledWeight',
        'totalCharge' => 'setTotalCharge',
        'promise' => 'setPromise',
        'supportedDocumentSpecifications' => 'setSupportedDocumentSpecifications',
        'availableValueAddedServiceGroups' => 'setAvailableValueAddedServiceGroups',
        'requiresAdditionalInputs' => 'setRequiresAdditionalInputs',
        'rateItemList' => 'setRateItemList',
        'paymentType' => 'setPaymentType',
        'benefits' => 'setBenefits'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'rateId' => 'getRateId',
        'carrierId' => 'getCarrierId',
        'carrierName' => 'getCarrierName',
        'serviceId' => 'getServiceId',
        'serviceName' => 'getServiceName',
        'billedWeight' => 'getBilledWeight',
        'totalCharge' => 'getTotalCharge',
        'promise' => 'getPromise',
        'supportedDocumentSpecifications' => 'getSupportedDocumentSpecifications',
        'availableValueAddedServiceGroups' => 'getAvailableValueAddedServiceGroups',
        'requiresAdditionalInputs' => 'getRequiresAdditionalInputs',
        'rateItemList' => 'getRateItemList',
        'paymentType' => 'getPaymentType',
        'benefits' => 'getBenefits'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['rateId'] = $data['rateId'] ?? null;
        $this->container['carrierId'] = $data['carrierId'] ?? null;
        $this->container['carrierName'] = $data['carrierName'] ?? null;
        $this->container['serviceId'] = $data['serviceId'] ?? null;
        $this->container['serviceName'] = $data['serviceName'] ?? null;
        $this->container['billedWeight'] = $data['billedWeight'] ?? null;
        $this->container['totalCharge'] = $data['totalCharge'] ?? null;
        $this->container['promise'] = $data['promise'] ?? null;
        $this->container['supportedDocumentSpecifications'] = $data['supportedDocumentSpecifications'] ?? null;
        $this->container['availableValueAddedServiceGroups'] = $data['availableValueAddedServiceGroups'] ?? null;
        $this->container['requiresAdditionalInputs'] = $data['requiresAdditionalInputs'] ?? null;
        $this->container['rateItemList'] = $data['rateItemList'] ?? null;
        $this->container['paymentType'] = $data['paymentType'] ?? null;
        $this->container['benefits'] = $data['benefits'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['rateId'] === null) {
            $invalidProperties[] = "'rateId' can't be null";
        }
        if ($this->container['carrierId'] === null) {
            $invalidProperties[] = "'carrierId' can't be null";
        }
        if ($this->container['carrierName'] === null) {
            $invalidProperties[] = "'carrierName' can't be null";
        }
        if ($this->container['serviceId'] === null) {
            $invalidProperties[] = "'serviceId' can't be null";
        }
        if ($this->container['serviceName'] === null) {
            $invalidProperties[] = "'serviceName' can't be null";
        }
        if ($this->container['totalCharge'] === null) {
            $invalidProperties[] = "'totalCharge' can't be null";
        }
        if ($this->container['promise'] === null) {
            $invalidProperties[] = "'promise' can't be null";
        }
        if ($this->container['supportedDocumentSpecifications'] === null) {
            $invalidProperties[] = "'supportedDocumentSpecifications' can't be null";
        }
        if ($this->container['requiresAdditionalInputs'] === null) {
            $invalidProperties[] = "'requiresAdditionalInputs' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets rateId
     *
     * @return string
     */
    public function getRateId()
    {
        return $this->container['rateId'];
    }

    /**
     * Sets rateId
     *
     * @param string $rateId An identifier for the rate (shipment offering) provided by a shipping service provider.
     *
     * @return self
     */
    public function setRateId($rateId)
    {
        $this->container['rateId'] = $rateId;

        return $this;
    }

    /**
     * Gets carrierId
     *
     * @return string
     */
    public function getCarrierId()
    {
        return $this->container['carrierId'];
    }

    /**
     * Sets carrierId
     *
     * @param string $carrierId The carrier identifier for the offering, provided by the carrier.
     *
     * @return self
     */
    public function setCarrierId($carrierId)
    {
        $this->container['carrierId'] = $carrierId;

        return $this;
    }

    /**
     * Gets carrierName
     *
     * @return string
     */
    public function getCarrierName()
    {
        return $this->container['carrierName'];
    }

    /**
     * Sets carrierName
     *
     * @param string $carrierName The carrier name for the offering.
     *
     * @return self
     */
    public function setCarrierName($carrierName)
    {
        $this->container['carrierName'] = $carrierName;

        return $this;
    }

    /**
     * Gets serviceId
     *
     * @return string
     */
    public function getServiceId()
    {
        return $this->container['serviceId'];
    }

    /**
     * Sets serviceId
     *
     * @param string $serviceId An identifier for the shipping service.
     *
     * @return self
     */
    public function setServiceId($serviceId)
    {
        $this->container['serviceId'] = $serviceId;

        return $this;
    }

    /**
     * Gets serviceName
     *
     * @return string
     */
    public function getServiceName()
    {
        return $this->container['serviceName'];
    }

    /**
     * Sets serviceName
     *
     * @param string $serviceName The name of the shipping service.
     *
     * @return self
     */
    public function setServiceName($serviceName)
    {
        $this->container['serviceName'] = $serviceName;

        return $this;
    }

    /**
     * Gets billedWeight
     *
     * @return \Webcom\Amazon\Rest\ShippingApiV2\Model\WeightV2|null
     */
    public function getBilledWeight()
    {
        return $this->container['billedWeight'];
    }

    /**
     * Sets billedWeight
     *
     * @param \Webcom\Amazon\Rest\ShippingApiV2\Model\WeightV2|null $billedWeight billedWeight
     *
     * @return self
     */
    public function setBilledWeight($billedWeight)
    {
        $this->container['billedWeight'] = $billedWeight;

        return $this;
    }

    /**
     * Gets totalCharge
     *
     * @return \Webcom\Amazon\Rest\ShippingApiV2\Model\CurrencyV2
     */
    public function getTotalCharge()
    {
        return $this->container['totalCharge'];
    }

    /**
     * Sets totalCharge
     *
     * @param \Webcom\Amazon\Rest\ShippingApiV2\Model\CurrencyV2 $totalCharge totalCharge
     *
     * @return self
     */
    public function setTotalCharge($totalCharge)
    {
        $this->container['totalCharge'] = $totalCharge;

        return $this;
    }

    /**
     * Gets promise
     *
     * @return \Webcom\Amazon\Rest\ShippingApiV2\Model\PromiseV2
     */
    public function getPromise()
    {
        return $this->container['promise'];
    }

    /**
     * Sets promise
     *
     * @param \Webcom\Amazon\Rest\ShippingApiV2\Model\PromiseV2 $promise promise
     *
     * @return self
     */
    public function setPromise($promise)
    {
        $this->container['promise'] = $promise;

        return $this;
    }

    /**
     * Gets supportedDocumentSpecifications
     *
     * @return \Webcom\Amazon\Rest\ShippingApiV2\Model\SupportedDocumentSpecificationV2[]
     */
    public function getSupportedDocumentSpecifications()
    {
        return $this->container['supportedDocumentSpecifications'];
    }

    /**
     * Sets supportedDocumentSpecifications
     *
     * @param \Webcom\Amazon\Rest\ShippingApiV2\Model\SupportedDocumentSpecificationV2[] $supportedDocumentSpecifications A list of the document specifications supported for a shipment service offering.
     *
     * @return self
     */
    public function setSupportedDocumentSpecifications($supportedDocumentSpecifications)
    {
        $this->container['supportedDocumentSpecifications'] = $supportedDocumentSpecifications;

        return $this;
    }

    /**
     * Gets availableValueAddedServiceGroups
     *
     * @return \Webcom\Amazon\Rest\ShippingApiV2\Model\AvailableValueAddedServiceGroupV2[]|null
     */
    public function getAvailableValueAddedServiceGroups()
    {
        return $this->container['availableValueAddedServiceGroups'];
    }

    /**
     * Sets availableValueAddedServiceGroups
     *
     * @param \Webcom\Amazon\Rest\ShippingApiV2\Model\AvailableValueAddedServiceGroupV2[]|null $availableValueAddedServiceGroups A list of value-added services available for a shipping service offering.
     *
     * @return self
     */
    public function setAvailableValueAddedServiceGroups($availableValueAddedServiceGroups)
    {
        $this->container['availableValueAddedServiceGroups'] = $availableValueAddedServiceGroups;

        return $this;
    }

    /**
     * Gets requiresAdditionalInputs
     *
     * @return bool
     */
    public function getRequiresAdditionalInputs()
    {
        return $this->container['requiresAdditionalInputs'];
    }

    /**
     * Sets requiresAdditionalInputs
     *
     * @param bool $requiresAdditionalInputs When true, indicates that additional inputs are required to purchase this shipment service. You must then call the getAdditionalInputs operation to return the JSON schema to use when providing the additional inputs to the purchaseShipment operation.
     *
     * @return self
     */
    public function setRequiresAdditionalInputs($requiresAdditionalInputs)
    {
        $this->container['requiresAdditionalInputs'] = $requiresAdditionalInputs;

        return $this;
    }

    /**
     * Gets rateItemList
     *
     * @return \Webcom\Amazon\Rest\ShippingApiV2\Model\RateItemV2[]|null
     */
    public function getRateItemList()
    {
        return $this->container['rateItemList'];
    }

    /**
     * Sets rateItemList
     *
     * @param \Webcom\Amazon\Rest\ShippingApiV2\Model\RateItemV2[]|null $rateItemList A list of RateItem
     *
     * @return self
     */
    public function setRateItemList($rateItemList)
    {
        $this->container['rateItemList'] = $rateItemList;

        return $this;
    }

    /**
     * Gets paymentType
     *
     * @return \Webcom\Amazon\Rest\ShippingApiV2\Model\PaymentTypeV2|null
     */
    public function getPaymentType()
    {
        return $this->container['paymentType'];
    }

    /**
     * Sets paymentType
     *
     * @param \Webcom\Amazon\Rest\ShippingApiV2\Model\PaymentTypeV2|null $paymentType paymentType
     *
     * @return self
     */
    public function setPaymentType($paymentType)
    {
        $this->container['paymentType'] = $paymentType;

        return $this;
    }

    /**
     * Gets benefits
     *
     * @return \Webcom\Amazon\Rest\ShippingApiV2\Model\BenefitsV2|null
     */
    public function getBenefits()
    {
        return $this->container['benefits'];
    }

    /**
     * Sets benefits
     *
     * @param \Webcom\Amazon\Rest\ShippingApiV2\Model\BenefitsV2|null $benefits benefits
     *
     * @return self
     */
    public function setBenefits($benefits)
    {
        $this->container['benefits'] = $benefits;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


