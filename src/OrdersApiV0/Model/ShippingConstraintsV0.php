<?php
/**
 * ShippingConstraintsV0
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Webcom\Amazon\Rest\OrdersApiV0
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner API for Orders
 *
 * Use the Orders Selling Partner API to programmatically retrieve order information. With this API, you can develop fast, flexible, and custom applications to manage order synchronization, perform order research, and create demand-based decision support tools.   _Note:_ For the JP, AU, and SG marketplaces, the Orders API supports orders from 2016 onward. For all other marketplaces, the Orders API supports orders for the last two years (orders older than this don't show up in the response).
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Webcom\Amazon\Rest\OrdersApiV0\Model;

use \Webcom\Amazon\Rest\ModelInterface;
use \ArrayAccess;
use \Webcom\Amazon\Rest\ObjectSerializer;

/**
 * ShippingConstraintsV0 Class Doc Comment
 *
 * @category Class
 * @description Delivery constraints applicable to this order.
 * @package  Webcom\Amazon\Rest\OrdersApiV0
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class ShippingConstraintsV0 implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ShippingConstraints';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'palletDelivery' => '\Webcom\Amazon\Rest\OrdersApiV0\Model\ConstraintTypeV0',
        'signatureConfirmation' => '\Webcom\Amazon\Rest\OrdersApiV0\Model\ConstraintTypeV0',
        'recipientIdentityVerification' => '\Webcom\Amazon\Rest\OrdersApiV0\Model\ConstraintTypeV0',
        'recipientAgeVerification' => '\Webcom\Amazon\Rest\OrdersApiV0\Model\ConstraintTypeV0'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'palletDelivery' => null,
        'signatureConfirmation' => null,
        'recipientIdentityVerification' => null,
        'recipientAgeVerification' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'palletDelivery' => 'PalletDelivery',
        'signatureConfirmation' => 'SignatureConfirmation',
        'recipientIdentityVerification' => 'RecipientIdentityVerification',
        'recipientAgeVerification' => 'RecipientAgeVerification'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'palletDelivery' => 'setPalletDelivery',
        'signatureConfirmation' => 'setSignatureConfirmation',
        'recipientIdentityVerification' => 'setRecipientIdentityVerification',
        'recipientAgeVerification' => 'setRecipientAgeVerification'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'palletDelivery' => 'getPalletDelivery',
        'signatureConfirmation' => 'getSignatureConfirmation',
        'recipientIdentityVerification' => 'getRecipientIdentityVerification',
        'recipientAgeVerification' => 'getRecipientAgeVerification'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['palletDelivery'] = $data['palletDelivery'] ?? null;
        $this->container['signatureConfirmation'] = $data['signatureConfirmation'] ?? null;
        $this->container['recipientIdentityVerification'] = $data['recipientIdentityVerification'] ?? null;
        $this->container['recipientAgeVerification'] = $data['recipientAgeVerification'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets palletDelivery
     *
     * @return \Webcom\Amazon\Rest\OrdersApiV0\Model\ConstraintTypeV0|null
     */
    public function getPalletDelivery()
    {
        return $this->container['palletDelivery'];
    }

    /**
     * Sets palletDelivery
     *
     * @param \Webcom\Amazon\Rest\OrdersApiV0\Model\ConstraintTypeV0|null $palletDelivery palletDelivery
     *
     * @return self
     */
    public function setPalletDelivery($palletDelivery)
    {
        $this->container['palletDelivery'] = $palletDelivery;

        return $this;
    }

    /**
     * Gets signatureConfirmation
     *
     * @return \Webcom\Amazon\Rest\OrdersApiV0\Model\ConstraintTypeV0|null
     */
    public function getSignatureConfirmation()
    {
        return $this->container['signatureConfirmation'];
    }

    /**
     * Sets signatureConfirmation
     *
     * @param \Webcom\Amazon\Rest\OrdersApiV0\Model\ConstraintTypeV0|null $signatureConfirmation signatureConfirmation
     *
     * @return self
     */
    public function setSignatureConfirmation($signatureConfirmation)
    {
        $this->container['signatureConfirmation'] = $signatureConfirmation;

        return $this;
    }

    /**
     * Gets recipientIdentityVerification
     *
     * @return \Webcom\Amazon\Rest\OrdersApiV0\Model\ConstraintTypeV0|null
     */
    public function getRecipientIdentityVerification()
    {
        return $this->container['recipientIdentityVerification'];
    }

    /**
     * Sets recipientIdentityVerification
     *
     * @param \Webcom\Amazon\Rest\OrdersApiV0\Model\ConstraintTypeV0|null $recipientIdentityVerification recipientIdentityVerification
     *
     * @return self
     */
    public function setRecipientIdentityVerification($recipientIdentityVerification)
    {
        $this->container['recipientIdentityVerification'] = $recipientIdentityVerification;

        return $this;
    }

    /**
     * Gets recipientAgeVerification
     *
     * @return \Webcom\Amazon\Rest\OrdersApiV0\Model\ConstraintTypeV0|null
     */
    public function getRecipientAgeVerification()
    {
        return $this->container['recipientAgeVerification'];
    }

    /**
     * Sets recipientAgeVerification
     *
     * @param \Webcom\Amazon\Rest\OrdersApiV0\Model\ConstraintTypeV0|null $recipientAgeVerification recipientAgeVerification
     *
     * @return self
     */
    public function setRecipientAgeVerification($recipientAgeVerification)
    {
        $this->container['recipientAgeVerification'] = $recipientAgeVerification;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


