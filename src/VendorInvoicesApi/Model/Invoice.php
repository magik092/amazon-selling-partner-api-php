<?php
/**
 * Invoice
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Webcom\Amazon\Rest\VendorInvoicesApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner API for Retail Procurement Payments
 *
 * The Selling Partner API for Retail Procurement Payments provides programmatic access to vendors payments data.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Webcom\Amazon\Rest\VendorInvoicesApi\Model;

use Webcom\Amazon\Rest\ModelInterface;
use \ArrayAccess;
use \Webcom\Amazon\Rest\ObjectSerializer;

/**
 * Invoice Class Doc Comment
 *
 * @category Class
 * @package  Webcom\Amazon\Rest\VendorInvoicesApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class Invoice implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Invoice';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'invoiceType' => 'string',
        'id' => 'string',
        'referenceNumber' => 'string',
        'date' => '\DateTime',
        'remitToParty' => '\Webcom\Amazon\Rest\VendorInvoicesApi\Model\PartyIdentification',
        'shipToParty' => '\Webcom\Amazon\Rest\VendorInvoicesApi\Model\PartyIdentification',
        'shipFromParty' => '\Webcom\Amazon\Rest\VendorInvoicesApi\Model\PartyIdentification',
        'billToParty' => '\Webcom\Amazon\Rest\VendorInvoicesApi\Model\PartyIdentification',
        'paymentTerms' => '\Webcom\Amazon\Rest\VendorInvoicesApi\Model\PaymentTerms',
        'invoiceTotal' => '\Webcom\Amazon\Rest\VendorInvoicesApi\Model\Money',
        'taxDetails' => '\Webcom\Amazon\Rest\VendorInvoicesApi\Model\TaxDetails[]',
        'additionalDetails' => '\Webcom\Amazon\Rest\VendorInvoicesApi\Model\AdditionalDetails[]',
        'chargeDetails' => '\Webcom\Amazon\Rest\VendorInvoicesApi\Model\ChargeDetails[]',
        'allowanceDetails' => '\Webcom\Amazon\Rest\VendorInvoicesApi\Model\AllowanceDetails[]',
        'items' => '\Webcom\Amazon\Rest\VendorInvoicesApi\Model\InvoiceItem[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'invoiceType' => null,
        'id' => null,
        'referenceNumber' => null,
        'date' => 'date-time',
        'remitToParty' => null,
        'shipToParty' => null,
        'shipFromParty' => null,
        'billToParty' => null,
        'paymentTerms' => null,
        'invoiceTotal' => null,
        'taxDetails' => null,
        'additionalDetails' => null,
        'chargeDetails' => null,
        'allowanceDetails' => null,
        'items' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'invoiceType' => 'invoiceType',
        'id' => 'id',
        'referenceNumber' => 'referenceNumber',
        'date' => 'date',
        'remitToParty' => 'remitToParty',
        'shipToParty' => 'shipToParty',
        'shipFromParty' => 'shipFromParty',
        'billToParty' => 'billToParty',
        'paymentTerms' => 'paymentTerms',
        'invoiceTotal' => 'invoiceTotal',
        'taxDetails' => 'taxDetails',
        'additionalDetails' => 'additionalDetails',
        'chargeDetails' => 'chargeDetails',
        'allowanceDetails' => 'allowanceDetails',
        'items' => 'items'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'invoiceType' => 'setInvoiceType',
        'id' => 'setId',
        'referenceNumber' => 'setReferenceNumber',
        'date' => 'setDate',
        'remitToParty' => 'setRemitToParty',
        'shipToParty' => 'setShipToParty',
        'shipFromParty' => 'setShipFromParty',
        'billToParty' => 'setBillToParty',
        'paymentTerms' => 'setPaymentTerms',
        'invoiceTotal' => 'setInvoiceTotal',
        'taxDetails' => 'setTaxDetails',
        'additionalDetails' => 'setAdditionalDetails',
        'chargeDetails' => 'setChargeDetails',
        'allowanceDetails' => 'setAllowanceDetails',
        'items' => 'setItems'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'invoiceType' => 'getInvoiceType',
        'id' => 'getId',
        'referenceNumber' => 'getReferenceNumber',
        'date' => 'getDate',
        'remitToParty' => 'getRemitToParty',
        'shipToParty' => 'getShipToParty',
        'shipFromParty' => 'getShipFromParty',
        'billToParty' => 'getBillToParty',
        'paymentTerms' => 'getPaymentTerms',
        'invoiceTotal' => 'getInvoiceTotal',
        'taxDetails' => 'getTaxDetails',
        'additionalDetails' => 'getAdditionalDetails',
        'chargeDetails' => 'getChargeDetails',
        'allowanceDetails' => 'getAllowanceDetails',
        'items' => 'getItems'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    const INVOICE_TYPE_INVOICE = 'Invoice';
    const INVOICE_TYPE_CREDIT_NOTE = 'CreditNote';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getInvoiceTypeAllowableValues()
    {
        return [
            self::INVOICE_TYPE_INVOICE,
            self::INVOICE_TYPE_CREDIT_NOTE,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['invoiceType'] = $data['invoiceType'] ?? null;
        $this->container['id'] = $data['id'] ?? null;
        $this->container['referenceNumber'] = $data['referenceNumber'] ?? null;
        $this->container['date'] = $data['date'] ?? null;
        $this->container['remitToParty'] = $data['remitToParty'] ?? null;
        $this->container['shipToParty'] = $data['shipToParty'] ?? null;
        $this->container['shipFromParty'] = $data['shipFromParty'] ?? null;
        $this->container['billToParty'] = $data['billToParty'] ?? null;
        $this->container['paymentTerms'] = $data['paymentTerms'] ?? null;
        $this->container['invoiceTotal'] = $data['invoiceTotal'] ?? null;
        $this->container['taxDetails'] = $data['taxDetails'] ?? null;
        $this->container['additionalDetails'] = $data['additionalDetails'] ?? null;
        $this->container['chargeDetails'] = $data['chargeDetails'] ?? null;
        $this->container['allowanceDetails'] = $data['allowanceDetails'] ?? null;
        $this->container['items'] = $data['items'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['invoiceType'] === null) {
            $invalidProperties[] = "'invoiceType' can't be null";
        }
        $allowedValues = $this->getInvoiceTypeAllowableValues();
        if (!is_null($this->container['invoiceType']) && !in_array($this->container['invoiceType'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'invoiceType', must be one of '%s'",
                $this->container['invoiceType'],
                implode("', '", $allowedValues)
            );
        }

        if ($this->container['id'] === null) {
            $invalidProperties[] = "'id' can't be null";
        }
        if ($this->container['date'] === null) {
            $invalidProperties[] = "'date' can't be null";
        }
        if ($this->container['remitToParty'] === null) {
            $invalidProperties[] = "'remitToParty' can't be null";
        }
        if ($this->container['invoiceTotal'] === null) {
            $invalidProperties[] = "'invoiceTotal' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets invoiceType
     *
     * @return string
     */
    public function getInvoiceType()
    {
        return $this->container['invoiceType'];
    }

    /**
     * Sets invoiceType
     *
     * @param string $invoiceType Identifies the type of invoice.
     *
     * @return self
     */
    public function setInvoiceType($invoiceType)
    {
        $allowedValues = $this->getInvoiceTypeAllowableValues();
        if (!in_array($invoiceType, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'invoiceType', must be one of '%s'",
                    $invoiceType,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['invoiceType'] = $invoiceType;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id Unique number relating to the charges defined in this document. This will be invoice number if the document type is Invoice or CreditNote number if the document type is Credit Note. Failure to provide this reference will result in a rejection.
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets referenceNumber
     *
     * @return string|null
     */
    public function getReferenceNumber()
    {
        return $this->container['referenceNumber'];
    }

    /**
     * Sets referenceNumber
     *
     * @param string|null $referenceNumber An additional unique reference number used for regulatory or other purposes.
     *
     * @return self
     */
    public function setReferenceNumber($referenceNumber)
    {
        $this->container['referenceNumber'] = $referenceNumber;

        return $this;
    }

    /**
     * Gets date
     *
     * @return \DateTime
     */
    public function getDate()
    {
        return $this->container['date'];
    }

    /**
     * Sets date
     *
     * @param \DateTime $date Defines a date and time according to ISO8601.
     *
     * @return self
     */
    public function setDate($date)
    {
        $this->container['date'] = $date;

        return $this;
    }

    /**
     * Gets remitToParty
     *
     * @return \Webcom\Amazon\Rest\VendorInvoicesApi\Model\PartyIdentification
     */
    public function getRemitToParty()
    {
        return $this->container['remitToParty'];
    }

    /**
     * Sets remitToParty
     *
     * @param \Webcom\Amazon\Rest\VendorInvoicesApi\Model\PartyIdentification $remitToParty remitToParty
     *
     * @return self
     */
    public function setRemitToParty($remitToParty)
    {
        $this->container['remitToParty'] = $remitToParty;

        return $this;
    }

    /**
     * Gets shipToParty
     *
     * @return \Webcom\Amazon\Rest\VendorInvoicesApi\Model\PartyIdentification|null
     */
    public function getShipToParty()
    {
        return $this->container['shipToParty'];
    }

    /**
     * Sets shipToParty
     *
     * @param \Webcom\Amazon\Rest\VendorInvoicesApi\Model\PartyIdentification|null $shipToParty shipToParty
     *
     * @return self
     */
    public function setShipToParty($shipToParty)
    {
        $this->container['shipToParty'] = $shipToParty;

        return $this;
    }

    /**
     * Gets shipFromParty
     *
     * @return \Webcom\Amazon\Rest\VendorInvoicesApi\Model\PartyIdentification|null
     */
    public function getShipFromParty()
    {
        return $this->container['shipFromParty'];
    }

    /**
     * Sets shipFromParty
     *
     * @param \Webcom\Amazon\Rest\VendorInvoicesApi\Model\PartyIdentification|null $shipFromParty shipFromParty
     *
     * @return self
     */
    public function setShipFromParty($shipFromParty)
    {
        $this->container['shipFromParty'] = $shipFromParty;

        return $this;
    }

    /**
     * Gets billToParty
     *
     * @return \Webcom\Amazon\Rest\VendorInvoicesApi\Model\PartyIdentification|null
     */
    public function getBillToParty()
    {
        return $this->container['billToParty'];
    }

    /**
     * Sets billToParty
     *
     * @param \Webcom\Amazon\Rest\VendorInvoicesApi\Model\PartyIdentification|null $billToParty billToParty
     *
     * @return self
     */
    public function setBillToParty($billToParty)
    {
        $this->container['billToParty'] = $billToParty;

        return $this;
    }

    /**
     * Gets paymentTerms
     *
     * @return \Webcom\Amazon\Rest\VendorInvoicesApi\Model\PaymentTerms|null
     */
    public function getPaymentTerms()
    {
        return $this->container['paymentTerms'];
    }

    /**
     * Sets paymentTerms
     *
     * @param \Webcom\Amazon\Rest\VendorInvoicesApi\Model\PaymentTerms|null $paymentTerms paymentTerms
     *
     * @return self
     */
    public function setPaymentTerms($paymentTerms)
    {
        $this->container['paymentTerms'] = $paymentTerms;

        return $this;
    }

    /**
     * Gets invoiceTotal
     *
     * @return \Webcom\Amazon\Rest\VendorInvoicesApi\Model\Money
     */
    public function getInvoiceTotal()
    {
        return $this->container['invoiceTotal'];
    }

    /**
     * Sets invoiceTotal
     *
     * @param \Webcom\Amazon\Rest\VendorInvoicesApi\Model\Money $invoiceTotal invoiceTotal
     *
     * @return self
     */
    public function setInvoiceTotal($invoiceTotal)
    {
        $this->container['invoiceTotal'] = $invoiceTotal;

        return $this;
    }

    /**
     * Gets taxDetails
     *
     * @return \Webcom\Amazon\Rest\VendorInvoicesApi\Model\TaxDetails[]|null
     */
    public function getTaxDetails()
    {
        return $this->container['taxDetails'];
    }

    /**
     * Sets taxDetails
     *
     * @param \Webcom\Amazon\Rest\VendorInvoicesApi\Model\TaxDetails[]|null $taxDetails Total tax amount details for all line items.
     *
     * @return self
     */
    public function setTaxDetails($taxDetails)
    {
        $this->container['taxDetails'] = $taxDetails;

        return $this;
    }

    /**
     * Gets additionalDetails
     *
     * @return \Webcom\Amazon\Rest\VendorInvoicesApi\Model\AdditionalDetails[]|null
     */
    public function getAdditionalDetails()
    {
        return $this->container['additionalDetails'];
    }

    /**
     * Sets additionalDetails
     *
     * @param \Webcom\Amazon\Rest\VendorInvoicesApi\Model\AdditionalDetails[]|null $additionalDetails Additional details provided by the selling party, for tax related or other purposes.
     *
     * @return self
     */
    public function setAdditionalDetails($additionalDetails)
    {
        $this->container['additionalDetails'] = $additionalDetails;

        return $this;
    }

    /**
     * Gets chargeDetails
     *
     * @return \Webcom\Amazon\Rest\VendorInvoicesApi\Model\ChargeDetails[]|null
     */
    public function getChargeDetails()
    {
        return $this->container['chargeDetails'];
    }

    /**
     * Sets chargeDetails
     *
     * @param \Webcom\Amazon\Rest\VendorInvoicesApi\Model\ChargeDetails[]|null $chargeDetails Total charge amount details for all line items.
     *
     * @return self
     */
    public function setChargeDetails($chargeDetails)
    {
        $this->container['chargeDetails'] = $chargeDetails;

        return $this;
    }

    /**
     * Gets allowanceDetails
     *
     * @return \Webcom\Amazon\Rest\VendorInvoicesApi\Model\AllowanceDetails[]|null
     */
    public function getAllowanceDetails()
    {
        return $this->container['allowanceDetails'];
    }

    /**
     * Sets allowanceDetails
     *
     * @param \Webcom\Amazon\Rest\VendorInvoicesApi\Model\AllowanceDetails[]|null $allowanceDetails Total allowance amount details for all line items.
     *
     * @return self
     */
    public function setAllowanceDetails($allowanceDetails)
    {
        $this->container['allowanceDetails'] = $allowanceDetails;

        return $this;
    }

    /**
     * Gets items
     *
     * @return \Webcom\Amazon\Rest\VendorInvoicesApi\Model\InvoiceItem[]|null
     */
    public function getItems()
    {
        return $this->container['items'];
    }

    /**
     * Sets items
     *
     * @param \Webcom\Amazon\Rest\VendorInvoicesApi\Model\InvoiceItem[]|null $items The list of invoice items.
     *
     * @return self
     */
    public function setItems($items)
    {
        $this->container['items'] = $items;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


