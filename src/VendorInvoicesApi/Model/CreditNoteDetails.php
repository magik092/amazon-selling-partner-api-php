<?php
/**
 * CreditNoteDetails
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Webcom\Amazon\Rest\VendorInvoicesApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner API for Retail Procurement Payments
 *
 * The Selling Partner API for Retail Procurement Payments provides programmatic access to vendors payments data.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Webcom\Amazon\Rest\VendorInvoicesApi\Model;

use Webcom\Amazon\Rest\ModelInterface;
use \ArrayAccess;
use \Webcom\Amazon\Rest\ObjectSerializer;

/**
 * CreditNoteDetails Class Doc Comment
 *
 * @category Class
 * @description References required in order to process a credit note. This information is required only if InvoiceType is CreditNote.
 * @package  Webcom\Amazon\Rest\VendorInvoicesApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class CreditNoteDetails implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CreditNoteDetails';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'referenceInvoiceNumber' => 'string',
        'debitNoteNumber' => 'string',
        'returnsReferenceNumber' => 'string',
        'goodsReturnDate' => '\DateTime',
        'rmaId' => 'string',
        'coopReferenceNumber' => 'string',
        'consignorsReferenceNumber' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'referenceInvoiceNumber' => null,
        'debitNoteNumber' => null,
        'returnsReferenceNumber' => null,
        'goodsReturnDate' => 'date-time',
        'rmaId' => null,
        'coopReferenceNumber' => null,
        'consignorsReferenceNumber' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'referenceInvoiceNumber' => 'referenceInvoiceNumber',
        'debitNoteNumber' => 'debitNoteNumber',
        'returnsReferenceNumber' => 'returnsReferenceNumber',
        'goodsReturnDate' => 'goodsReturnDate',
        'rmaId' => 'rmaId',
        'coopReferenceNumber' => 'coopReferenceNumber',
        'consignorsReferenceNumber' => 'consignorsReferenceNumber'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'referenceInvoiceNumber' => 'setReferenceInvoiceNumber',
        'debitNoteNumber' => 'setDebitNoteNumber',
        'returnsReferenceNumber' => 'setReturnsReferenceNumber',
        'goodsReturnDate' => 'setGoodsReturnDate',
        'rmaId' => 'setRmaId',
        'coopReferenceNumber' => 'setCoopReferenceNumber',
        'consignorsReferenceNumber' => 'setConsignorsReferenceNumber'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'referenceInvoiceNumber' => 'getReferenceInvoiceNumber',
        'debitNoteNumber' => 'getDebitNoteNumber',
        'returnsReferenceNumber' => 'getReturnsReferenceNumber',
        'goodsReturnDate' => 'getGoodsReturnDate',
        'rmaId' => 'getRmaId',
        'coopReferenceNumber' => 'getCoopReferenceNumber',
        'consignorsReferenceNumber' => 'getConsignorsReferenceNumber'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['referenceInvoiceNumber'] = $data['referenceInvoiceNumber'] ?? null;
        $this->container['debitNoteNumber'] = $data['debitNoteNumber'] ?? null;
        $this->container['returnsReferenceNumber'] = $data['returnsReferenceNumber'] ?? null;
        $this->container['goodsReturnDate'] = $data['goodsReturnDate'] ?? null;
        $this->container['rmaId'] = $data['rmaId'] ?? null;
        $this->container['coopReferenceNumber'] = $data['coopReferenceNumber'] ?? null;
        $this->container['consignorsReferenceNumber'] = $data['consignorsReferenceNumber'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets referenceInvoiceNumber
     *
     * @return string|null
     */
    public function getReferenceInvoiceNumber()
    {
        return $this->container['referenceInvoiceNumber'];
    }

    /**
     * Sets referenceInvoiceNumber
     *
     * @param string|null $referenceInvoiceNumber Original Invoice Number when sending a credit note relating to an existing invoice. One Invoice only to be processed per Credit Note. This is mandatory for AP Credit Notes.
     *
     * @return self
     */
    public function setReferenceInvoiceNumber($referenceInvoiceNumber)
    {
        $this->container['referenceInvoiceNumber'] = $referenceInvoiceNumber;

        return $this;
    }

    /**
     * Gets debitNoteNumber
     *
     * @return string|null
     */
    public function getDebitNoteNumber()
    {
        return $this->container['debitNoteNumber'];
    }

    /**
     * Sets debitNoteNumber
     *
     * @param string|null $debitNoteNumber Debit Note Number as generated by Amazon. Recommended for Returns and COOP Credit Notes.
     *
     * @return self
     */
    public function setDebitNoteNumber($debitNoteNumber)
    {
        $this->container['debitNoteNumber'] = $debitNoteNumber;

        return $this;
    }

    /**
     * Gets returnsReferenceNumber
     *
     * @return string|null
     */
    public function getReturnsReferenceNumber()
    {
        return $this->container['returnsReferenceNumber'];
    }

    /**
     * Sets returnsReferenceNumber
     *
     * @param string|null $returnsReferenceNumber Identifies the Returns Notice Number. Mandatory for all Returns Credit Notes.
     *
     * @return self
     */
    public function setReturnsReferenceNumber($returnsReferenceNumber)
    {
        $this->container['returnsReferenceNumber'] = $returnsReferenceNumber;

        return $this;
    }

    /**
     * Gets goodsReturnDate
     *
     * @return \DateTime|null
     */
    public function getGoodsReturnDate()
    {
        return $this->container['goodsReturnDate'];
    }

    /**
     * Sets goodsReturnDate
     *
     * @param \DateTime|null $goodsReturnDate Defines a date and time according to ISO8601.
     *
     * @return self
     */
    public function setGoodsReturnDate($goodsReturnDate)
    {
        $this->container['goodsReturnDate'] = $goodsReturnDate;

        return $this;
    }

    /**
     * Gets rmaId
     *
     * @return string|null
     */
    public function getRmaId()
    {
        return $this->container['rmaId'];
    }

    /**
     * Sets rmaId
     *
     * @param string|null $rmaId Identifies the Returned Merchandise Authorization ID, if generated.
     *
     * @return self
     */
    public function setRmaId($rmaId)
    {
        $this->container['rmaId'] = $rmaId;

        return $this;
    }

    /**
     * Gets coopReferenceNumber
     *
     * @return string|null
     */
    public function getCoopReferenceNumber()
    {
        return $this->container['coopReferenceNumber'];
    }

    /**
     * Sets coopReferenceNumber
     *
     * @param string|null $coopReferenceNumber Identifies the COOP reference used for COOP agreement. Failure to provide the COOP reference number or the Debit Note number may lead to a rejection of the Credit Note.
     *
     * @return self
     */
    public function setCoopReferenceNumber($coopReferenceNumber)
    {
        $this->container['coopReferenceNumber'] = $coopReferenceNumber;

        return $this;
    }

    /**
     * Gets consignorsReferenceNumber
     *
     * @return string|null
     */
    public function getConsignorsReferenceNumber()
    {
        return $this->container['consignorsReferenceNumber'];
    }

    /**
     * Sets consignorsReferenceNumber
     *
     * @param string|null $consignorsReferenceNumber Identifies the consignor reference number (VRET number), if generated by Amazon.
     *
     * @return self
     */
    public function setConsignorsReferenceNumber($consignorsReferenceNumber)
    {
        $this->container['consignorsReferenceNumber'] = $consignorsReferenceNumber;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


