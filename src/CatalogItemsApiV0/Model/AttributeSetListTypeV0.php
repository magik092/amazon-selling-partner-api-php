<?php
/**
 * AttributeSetListTypeV0
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Webcom\Amazon\Rest\CatalogItemsApiV0
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner API for Catalog Items
 *
 * The Selling Partner API for Catalog Items helps you programmatically retrieve item details for items in the catalog.
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Webcom\Amazon\Rest\CatalogItemsApiV0\Model;

use \Webcom\Amazon\Rest\ModelInterface;
use \ArrayAccess;
use \Webcom\Amazon\Rest\ObjectSerializer;

/**
 * AttributeSetListTypeV0 Class Doc Comment
 *
 * @category Class
 * @description The attributes of the item.
 * @package  Webcom\Amazon\Rest\CatalogItemsApiV0
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class AttributeSetListTypeV0 implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AttributeSetListType';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'actor' => 'string[]',
        'artist' => 'string[]',
        'aspectRatio' => 'string',
        'audienceRating' => 'string',
        'author' => 'string[]',
        'backFinding' => 'string',
        'bandMaterialType' => 'string',
        'binding' => 'string',
        'blurayRegion' => 'string',
        'brand' => 'string',
        'ceroAgeRating' => 'string',
        'chainType' => 'string',
        'claspType' => 'string',
        'color' => 'string',
        'cpuManufacturer' => 'string',
        'cpuSpeed' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0',
        'cpuType' => 'string',
        'creator' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\CreatorTypeV0[]',
        'department' => 'string',
        'director' => 'string[]',
        'displaySize' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0',
        'edition' => 'string',
        'episodeSequence' => 'string',
        'esrbAgeRating' => 'string',
        'feature' => 'string[]',
        'flavor' => 'string',
        'format' => 'string[]',
        'gemType' => 'string[]',
        'genre' => 'string',
        'golfClubFlex' => 'string',
        'golfClubLoft' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0',
        'handOrientation' => 'string',
        'hardDiskInterface' => 'string',
        'hardDiskSize' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0',
        'hardwarePlatform' => 'string',
        'hazardousMaterialType' => 'string',
        'itemDimensions' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DimensionTypeV0',
        'isAdultProduct' => 'bool',
        'isAutographed' => 'bool',
        'isEligibleForTradeIn' => 'bool',
        'isMemorabilia' => 'bool',
        'issuesPerYear' => 'string',
        'itemPartNumber' => 'string',
        'label' => 'string',
        'languages' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\LanguageTypeV0[]',
        'legalDisclaimer' => 'string',
        'listPrice' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\PriceV0',
        'manufacturer' => 'string',
        'manufacturerMaximumAge' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0',
        'manufacturerMinimumAge' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0',
        'manufacturerPartsWarrantyDescription' => 'string',
        'materialType' => 'string[]',
        'maximumResolution' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0',
        'mediaType' => 'string[]',
        'metalStamp' => 'string',
        'metalType' => 'string',
        'model' => 'string',
        'numberOfDiscs' => 'int',
        'numberOfIssues' => 'int',
        'numberOfItems' => 'int',
        'numberOfPages' => 'int',
        'numberOfTracks' => 'int',
        'operatingSystem' => 'string[]',
        'opticalZoom' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0',
        'packageDimensions' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DimensionTypeV0',
        'packageQuantity' => 'int',
        'partNumber' => 'string',
        'pegiRating' => 'string',
        'platform' => 'string[]',
        'processorCount' => 'int',
        'productGroup' => 'string',
        'productTypeName' => 'string',
        'productTypeSubcategory' => 'string',
        'publicationDate' => 'string',
        'publisher' => 'string',
        'regionCode' => 'string',
        'releaseDate' => 'string',
        'ringSize' => 'string',
        'runningTime' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0',
        'shaftMaterial' => 'string',
        'scent' => 'string',
        'seasonSequence' => 'string',
        'seikodoProductCode' => 'string',
        'size' => 'string',
        'sizePerPearl' => 'string',
        'smallImage' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\ImageV0',
        'studio' => 'string',
        'subscriptionLength' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0',
        'systemMemorySize' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0',
        'systemMemoryType' => 'string',
        'theatricalReleaseDate' => 'string',
        'title' => 'string',
        'totalDiamondWeight' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0',
        'totalGemWeight' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0',
        'warranty' => 'string',
        'weeeTaxValue' => '\Webcom\Amazon\Rest\CatalogItemsApiV0\Model\PriceV0'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'actor' => null,
        'artist' => null,
        'aspectRatio' => null,
        'audienceRating' => null,
        'author' => null,
        'backFinding' => null,
        'bandMaterialType' => null,
        'binding' => null,
        'blurayRegion' => null,
        'brand' => null,
        'ceroAgeRating' => null,
        'chainType' => null,
        'claspType' => null,
        'color' => null,
        'cpuManufacturer' => null,
        'cpuSpeed' => null,
        'cpuType' => null,
        'creator' => null,
        'department' => null,
        'director' => null,
        'displaySize' => null,
        'edition' => null,
        'episodeSequence' => null,
        'esrbAgeRating' => null,
        'feature' => null,
        'flavor' => null,
        'format' => null,
        'gemType' => null,
        'genre' => null,
        'golfClubFlex' => null,
        'golfClubLoft' => null,
        'handOrientation' => null,
        'hardDiskInterface' => null,
        'hardDiskSize' => null,
        'hardwarePlatform' => null,
        'hazardousMaterialType' => null,
        'itemDimensions' => null,
        'isAdultProduct' => null,
        'isAutographed' => null,
        'isEligibleForTradeIn' => null,
        'isMemorabilia' => null,
        'issuesPerYear' => null,
        'itemPartNumber' => null,
        'label' => null,
        'languages' => null,
        'legalDisclaimer' => null,
        'listPrice' => null,
        'manufacturer' => null,
        'manufacturerMaximumAge' => null,
        'manufacturerMinimumAge' => null,
        'manufacturerPartsWarrantyDescription' => null,
        'materialType' => null,
        'maximumResolution' => null,
        'mediaType' => null,
        'metalStamp' => null,
        'metalType' => null,
        'model' => null,
        'numberOfDiscs' => null,
        'numberOfIssues' => null,
        'numberOfItems' => null,
        'numberOfPages' => null,
        'numberOfTracks' => null,
        'operatingSystem' => null,
        'opticalZoom' => null,
        'packageDimensions' => null,
        'packageQuantity' => null,
        'partNumber' => null,
        'pegiRating' => null,
        'platform' => null,
        'processorCount' => null,
        'productGroup' => null,
        'productTypeName' => null,
        'productTypeSubcategory' => null,
        'publicationDate' => null,
        'publisher' => null,
        'regionCode' => null,
        'releaseDate' => null,
        'ringSize' => null,
        'runningTime' => null,
        'shaftMaterial' => null,
        'scent' => null,
        'seasonSequence' => null,
        'seikodoProductCode' => null,
        'size' => null,
        'sizePerPearl' => null,
        'smallImage' => null,
        'studio' => null,
        'subscriptionLength' => null,
        'systemMemorySize' => null,
        'systemMemoryType' => null,
        'theatricalReleaseDate' => null,
        'title' => null,
        'totalDiamondWeight' => null,
        'totalGemWeight' => null,
        'warranty' => null,
        'weeeTaxValue' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'actor' => 'Actor',
        'artist' => 'Artist',
        'aspectRatio' => 'AspectRatio',
        'audienceRating' => 'AudienceRating',
        'author' => 'Author',
        'backFinding' => 'BackFinding',
        'bandMaterialType' => 'BandMaterialType',
        'binding' => 'Binding',
        'blurayRegion' => 'BlurayRegion',
        'brand' => 'Brand',
        'ceroAgeRating' => 'CeroAgeRating',
        'chainType' => 'ChainType',
        'claspType' => 'ClaspType',
        'color' => 'Color',
        'cpuManufacturer' => 'CpuManufacturer',
        'cpuSpeed' => 'CpuSpeed',
        'cpuType' => 'CpuType',
        'creator' => 'Creator',
        'department' => 'Department',
        'director' => 'Director',
        'displaySize' => 'DisplaySize',
        'edition' => 'Edition',
        'episodeSequence' => 'EpisodeSequence',
        'esrbAgeRating' => 'EsrbAgeRating',
        'feature' => 'Feature',
        'flavor' => 'Flavor',
        'format' => 'Format',
        'gemType' => 'GemType',
        'genre' => 'Genre',
        'golfClubFlex' => 'GolfClubFlex',
        'golfClubLoft' => 'GolfClubLoft',
        'handOrientation' => 'HandOrientation',
        'hardDiskInterface' => 'HardDiskInterface',
        'hardDiskSize' => 'HardDiskSize',
        'hardwarePlatform' => 'HardwarePlatform',
        'hazardousMaterialType' => 'HazardousMaterialType',
        'itemDimensions' => 'ItemDimensions',
        'isAdultProduct' => 'IsAdultProduct',
        'isAutographed' => 'IsAutographed',
        'isEligibleForTradeIn' => 'IsEligibleForTradeIn',
        'isMemorabilia' => 'IsMemorabilia',
        'issuesPerYear' => 'IssuesPerYear',
        'itemPartNumber' => 'ItemPartNumber',
        'label' => 'Label',
        'languages' => 'Languages',
        'legalDisclaimer' => 'LegalDisclaimer',
        'listPrice' => 'ListPrice',
        'manufacturer' => 'Manufacturer',
        'manufacturerMaximumAge' => 'ManufacturerMaximumAge',
        'manufacturerMinimumAge' => 'ManufacturerMinimumAge',
        'manufacturerPartsWarrantyDescription' => 'ManufacturerPartsWarrantyDescription',
        'materialType' => 'MaterialType',
        'maximumResolution' => 'MaximumResolution',
        'mediaType' => 'MediaType',
        'metalStamp' => 'MetalStamp',
        'metalType' => 'MetalType',
        'model' => 'Model',
        'numberOfDiscs' => 'NumberOfDiscs',
        'numberOfIssues' => 'NumberOfIssues',
        'numberOfItems' => 'NumberOfItems',
        'numberOfPages' => 'NumberOfPages',
        'numberOfTracks' => 'NumberOfTracks',
        'operatingSystem' => 'OperatingSystem',
        'opticalZoom' => 'OpticalZoom',
        'packageDimensions' => 'PackageDimensions',
        'packageQuantity' => 'PackageQuantity',
        'partNumber' => 'PartNumber',
        'pegiRating' => 'PegiRating',
        'platform' => 'Platform',
        'processorCount' => 'ProcessorCount',
        'productGroup' => 'ProductGroup',
        'productTypeName' => 'ProductTypeName',
        'productTypeSubcategory' => 'ProductTypeSubcategory',
        'publicationDate' => 'PublicationDate',
        'publisher' => 'Publisher',
        'regionCode' => 'RegionCode',
        'releaseDate' => 'ReleaseDate',
        'ringSize' => 'RingSize',
        'runningTime' => 'RunningTime',
        'shaftMaterial' => 'ShaftMaterial',
        'scent' => 'Scent',
        'seasonSequence' => 'SeasonSequence',
        'seikodoProductCode' => 'SeikodoProductCode',
        'size' => 'Size',
        'sizePerPearl' => 'SizePerPearl',
        'smallImage' => 'SmallImage',
        'studio' => 'Studio',
        'subscriptionLength' => 'SubscriptionLength',
        'systemMemorySize' => 'SystemMemorySize',
        'systemMemoryType' => 'SystemMemoryType',
        'theatricalReleaseDate' => 'TheatricalReleaseDate',
        'title' => 'Title',
        'totalDiamondWeight' => 'TotalDiamondWeight',
        'totalGemWeight' => 'TotalGemWeight',
        'warranty' => 'Warranty',
        'weeeTaxValue' => 'WeeeTaxValue'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'actor' => 'setActor',
        'artist' => 'setArtist',
        'aspectRatio' => 'setAspectRatio',
        'audienceRating' => 'setAudienceRating',
        'author' => 'setAuthor',
        'backFinding' => 'setBackFinding',
        'bandMaterialType' => 'setBandMaterialType',
        'binding' => 'setBinding',
        'blurayRegion' => 'setBlurayRegion',
        'brand' => 'setBrand',
        'ceroAgeRating' => 'setCeroAgeRating',
        'chainType' => 'setChainType',
        'claspType' => 'setClaspType',
        'color' => 'setColor',
        'cpuManufacturer' => 'setCpuManufacturer',
        'cpuSpeed' => 'setCpuSpeed',
        'cpuType' => 'setCpuType',
        'creator' => 'setCreator',
        'department' => 'setDepartment',
        'director' => 'setDirector',
        'displaySize' => 'setDisplaySize',
        'edition' => 'setEdition',
        'episodeSequence' => 'setEpisodeSequence',
        'esrbAgeRating' => 'setEsrbAgeRating',
        'feature' => 'setFeature',
        'flavor' => 'setFlavor',
        'format' => 'setFormat',
        'gemType' => 'setGemType',
        'genre' => 'setGenre',
        'golfClubFlex' => 'setGolfClubFlex',
        'golfClubLoft' => 'setGolfClubLoft',
        'handOrientation' => 'setHandOrientation',
        'hardDiskInterface' => 'setHardDiskInterface',
        'hardDiskSize' => 'setHardDiskSize',
        'hardwarePlatform' => 'setHardwarePlatform',
        'hazardousMaterialType' => 'setHazardousMaterialType',
        'itemDimensions' => 'setItemDimensions',
        'isAdultProduct' => 'setIsAdultProduct',
        'isAutographed' => 'setIsAutographed',
        'isEligibleForTradeIn' => 'setIsEligibleForTradeIn',
        'isMemorabilia' => 'setIsMemorabilia',
        'issuesPerYear' => 'setIssuesPerYear',
        'itemPartNumber' => 'setItemPartNumber',
        'label' => 'setLabel',
        'languages' => 'setLanguages',
        'legalDisclaimer' => 'setLegalDisclaimer',
        'listPrice' => 'setListPrice',
        'manufacturer' => 'setManufacturer',
        'manufacturerMaximumAge' => 'setManufacturerMaximumAge',
        'manufacturerMinimumAge' => 'setManufacturerMinimumAge',
        'manufacturerPartsWarrantyDescription' => 'setManufacturerPartsWarrantyDescription',
        'materialType' => 'setMaterialType',
        'maximumResolution' => 'setMaximumResolution',
        'mediaType' => 'setMediaType',
        'metalStamp' => 'setMetalStamp',
        'metalType' => 'setMetalType',
        'model' => 'setModel',
        'numberOfDiscs' => 'setNumberOfDiscs',
        'numberOfIssues' => 'setNumberOfIssues',
        'numberOfItems' => 'setNumberOfItems',
        'numberOfPages' => 'setNumberOfPages',
        'numberOfTracks' => 'setNumberOfTracks',
        'operatingSystem' => 'setOperatingSystem',
        'opticalZoom' => 'setOpticalZoom',
        'packageDimensions' => 'setPackageDimensions',
        'packageQuantity' => 'setPackageQuantity',
        'partNumber' => 'setPartNumber',
        'pegiRating' => 'setPegiRating',
        'platform' => 'setPlatform',
        'processorCount' => 'setProcessorCount',
        'productGroup' => 'setProductGroup',
        'productTypeName' => 'setProductTypeName',
        'productTypeSubcategory' => 'setProductTypeSubcategory',
        'publicationDate' => 'setPublicationDate',
        'publisher' => 'setPublisher',
        'regionCode' => 'setRegionCode',
        'releaseDate' => 'setReleaseDate',
        'ringSize' => 'setRingSize',
        'runningTime' => 'setRunningTime',
        'shaftMaterial' => 'setShaftMaterial',
        'scent' => 'setScent',
        'seasonSequence' => 'setSeasonSequence',
        'seikodoProductCode' => 'setSeikodoProductCode',
        'size' => 'setSize',
        'sizePerPearl' => 'setSizePerPearl',
        'smallImage' => 'setSmallImage',
        'studio' => 'setStudio',
        'subscriptionLength' => 'setSubscriptionLength',
        'systemMemorySize' => 'setSystemMemorySize',
        'systemMemoryType' => 'setSystemMemoryType',
        'theatricalReleaseDate' => 'setTheatricalReleaseDate',
        'title' => 'setTitle',
        'totalDiamondWeight' => 'setTotalDiamondWeight',
        'totalGemWeight' => 'setTotalGemWeight',
        'warranty' => 'setWarranty',
        'weeeTaxValue' => 'setWeeeTaxValue'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'actor' => 'getActor',
        'artist' => 'getArtist',
        'aspectRatio' => 'getAspectRatio',
        'audienceRating' => 'getAudienceRating',
        'author' => 'getAuthor',
        'backFinding' => 'getBackFinding',
        'bandMaterialType' => 'getBandMaterialType',
        'binding' => 'getBinding',
        'blurayRegion' => 'getBlurayRegion',
        'brand' => 'getBrand',
        'ceroAgeRating' => 'getCeroAgeRating',
        'chainType' => 'getChainType',
        'claspType' => 'getClaspType',
        'color' => 'getColor',
        'cpuManufacturer' => 'getCpuManufacturer',
        'cpuSpeed' => 'getCpuSpeed',
        'cpuType' => 'getCpuType',
        'creator' => 'getCreator',
        'department' => 'getDepartment',
        'director' => 'getDirector',
        'displaySize' => 'getDisplaySize',
        'edition' => 'getEdition',
        'episodeSequence' => 'getEpisodeSequence',
        'esrbAgeRating' => 'getEsrbAgeRating',
        'feature' => 'getFeature',
        'flavor' => 'getFlavor',
        'format' => 'getFormat',
        'gemType' => 'getGemType',
        'genre' => 'getGenre',
        'golfClubFlex' => 'getGolfClubFlex',
        'golfClubLoft' => 'getGolfClubLoft',
        'handOrientation' => 'getHandOrientation',
        'hardDiskInterface' => 'getHardDiskInterface',
        'hardDiskSize' => 'getHardDiskSize',
        'hardwarePlatform' => 'getHardwarePlatform',
        'hazardousMaterialType' => 'getHazardousMaterialType',
        'itemDimensions' => 'getItemDimensions',
        'isAdultProduct' => 'getIsAdultProduct',
        'isAutographed' => 'getIsAutographed',
        'isEligibleForTradeIn' => 'getIsEligibleForTradeIn',
        'isMemorabilia' => 'getIsMemorabilia',
        'issuesPerYear' => 'getIssuesPerYear',
        'itemPartNumber' => 'getItemPartNumber',
        'label' => 'getLabel',
        'languages' => 'getLanguages',
        'legalDisclaimer' => 'getLegalDisclaimer',
        'listPrice' => 'getListPrice',
        'manufacturer' => 'getManufacturer',
        'manufacturerMaximumAge' => 'getManufacturerMaximumAge',
        'manufacturerMinimumAge' => 'getManufacturerMinimumAge',
        'manufacturerPartsWarrantyDescription' => 'getManufacturerPartsWarrantyDescription',
        'materialType' => 'getMaterialType',
        'maximumResolution' => 'getMaximumResolution',
        'mediaType' => 'getMediaType',
        'metalStamp' => 'getMetalStamp',
        'metalType' => 'getMetalType',
        'model' => 'getModel',
        'numberOfDiscs' => 'getNumberOfDiscs',
        'numberOfIssues' => 'getNumberOfIssues',
        'numberOfItems' => 'getNumberOfItems',
        'numberOfPages' => 'getNumberOfPages',
        'numberOfTracks' => 'getNumberOfTracks',
        'operatingSystem' => 'getOperatingSystem',
        'opticalZoom' => 'getOpticalZoom',
        'packageDimensions' => 'getPackageDimensions',
        'packageQuantity' => 'getPackageQuantity',
        'partNumber' => 'getPartNumber',
        'pegiRating' => 'getPegiRating',
        'platform' => 'getPlatform',
        'processorCount' => 'getProcessorCount',
        'productGroup' => 'getProductGroup',
        'productTypeName' => 'getProductTypeName',
        'productTypeSubcategory' => 'getProductTypeSubcategory',
        'publicationDate' => 'getPublicationDate',
        'publisher' => 'getPublisher',
        'regionCode' => 'getRegionCode',
        'releaseDate' => 'getReleaseDate',
        'ringSize' => 'getRingSize',
        'runningTime' => 'getRunningTime',
        'shaftMaterial' => 'getShaftMaterial',
        'scent' => 'getScent',
        'seasonSequence' => 'getSeasonSequence',
        'seikodoProductCode' => 'getSeikodoProductCode',
        'size' => 'getSize',
        'sizePerPearl' => 'getSizePerPearl',
        'smallImage' => 'getSmallImage',
        'studio' => 'getStudio',
        'subscriptionLength' => 'getSubscriptionLength',
        'systemMemorySize' => 'getSystemMemorySize',
        'systemMemoryType' => 'getSystemMemoryType',
        'theatricalReleaseDate' => 'getTheatricalReleaseDate',
        'title' => 'getTitle',
        'totalDiamondWeight' => 'getTotalDiamondWeight',
        'totalGemWeight' => 'getTotalGemWeight',
        'warranty' => 'getWarranty',
        'weeeTaxValue' => 'getWeeeTaxValue'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['actor'] = $data['actor'] ?? null;
        $this->container['artist'] = $data['artist'] ?? null;
        $this->container['aspectRatio'] = $data['aspectRatio'] ?? null;
        $this->container['audienceRating'] = $data['audienceRating'] ?? null;
        $this->container['author'] = $data['author'] ?? null;
        $this->container['backFinding'] = $data['backFinding'] ?? null;
        $this->container['bandMaterialType'] = $data['bandMaterialType'] ?? null;
        $this->container['binding'] = $data['binding'] ?? null;
        $this->container['blurayRegion'] = $data['blurayRegion'] ?? null;
        $this->container['brand'] = $data['brand'] ?? null;
        $this->container['ceroAgeRating'] = $data['ceroAgeRating'] ?? null;
        $this->container['chainType'] = $data['chainType'] ?? null;
        $this->container['claspType'] = $data['claspType'] ?? null;
        $this->container['color'] = $data['color'] ?? null;
        $this->container['cpuManufacturer'] = $data['cpuManufacturer'] ?? null;
        $this->container['cpuSpeed'] = $data['cpuSpeed'] ?? null;
        $this->container['cpuType'] = $data['cpuType'] ?? null;
        $this->container['creator'] = $data['creator'] ?? null;
        $this->container['department'] = $data['department'] ?? null;
        $this->container['director'] = $data['director'] ?? null;
        $this->container['displaySize'] = $data['displaySize'] ?? null;
        $this->container['edition'] = $data['edition'] ?? null;
        $this->container['episodeSequence'] = $data['episodeSequence'] ?? null;
        $this->container['esrbAgeRating'] = $data['esrbAgeRating'] ?? null;
        $this->container['feature'] = $data['feature'] ?? null;
        $this->container['flavor'] = $data['flavor'] ?? null;
        $this->container['format'] = $data['format'] ?? null;
        $this->container['gemType'] = $data['gemType'] ?? null;
        $this->container['genre'] = $data['genre'] ?? null;
        $this->container['golfClubFlex'] = $data['golfClubFlex'] ?? null;
        $this->container['golfClubLoft'] = $data['golfClubLoft'] ?? null;
        $this->container['handOrientation'] = $data['handOrientation'] ?? null;
        $this->container['hardDiskInterface'] = $data['hardDiskInterface'] ?? null;
        $this->container['hardDiskSize'] = $data['hardDiskSize'] ?? null;
        $this->container['hardwarePlatform'] = $data['hardwarePlatform'] ?? null;
        $this->container['hazardousMaterialType'] = $data['hazardousMaterialType'] ?? null;
        $this->container['itemDimensions'] = $data['itemDimensions'] ?? null;
        $this->container['isAdultProduct'] = $data['isAdultProduct'] ?? null;
        $this->container['isAutographed'] = $data['isAutographed'] ?? null;
        $this->container['isEligibleForTradeIn'] = $data['isEligibleForTradeIn'] ?? null;
        $this->container['isMemorabilia'] = $data['isMemorabilia'] ?? null;
        $this->container['issuesPerYear'] = $data['issuesPerYear'] ?? null;
        $this->container['itemPartNumber'] = $data['itemPartNumber'] ?? null;
        $this->container['label'] = $data['label'] ?? null;
        $this->container['languages'] = $data['languages'] ?? null;
        $this->container['legalDisclaimer'] = $data['legalDisclaimer'] ?? null;
        $this->container['listPrice'] = $data['listPrice'] ?? null;
        $this->container['manufacturer'] = $data['manufacturer'] ?? null;
        $this->container['manufacturerMaximumAge'] = $data['manufacturerMaximumAge'] ?? null;
        $this->container['manufacturerMinimumAge'] = $data['manufacturerMinimumAge'] ?? null;
        $this->container['manufacturerPartsWarrantyDescription'] = $data['manufacturerPartsWarrantyDescription'] ?? null;
        $this->container['materialType'] = $data['materialType'] ?? null;
        $this->container['maximumResolution'] = $data['maximumResolution'] ?? null;
        $this->container['mediaType'] = $data['mediaType'] ?? null;
        $this->container['metalStamp'] = $data['metalStamp'] ?? null;
        $this->container['metalType'] = $data['metalType'] ?? null;
        $this->container['model'] = $data['model'] ?? null;
        $this->container['numberOfDiscs'] = $data['numberOfDiscs'] ?? null;
        $this->container['numberOfIssues'] = $data['numberOfIssues'] ?? null;
        $this->container['numberOfItems'] = $data['numberOfItems'] ?? null;
        $this->container['numberOfPages'] = $data['numberOfPages'] ?? null;
        $this->container['numberOfTracks'] = $data['numberOfTracks'] ?? null;
        $this->container['operatingSystem'] = $data['operatingSystem'] ?? null;
        $this->container['opticalZoom'] = $data['opticalZoom'] ?? null;
        $this->container['packageDimensions'] = $data['packageDimensions'] ?? null;
        $this->container['packageQuantity'] = $data['packageQuantity'] ?? null;
        $this->container['partNumber'] = $data['partNumber'] ?? null;
        $this->container['pegiRating'] = $data['pegiRating'] ?? null;
        $this->container['platform'] = $data['platform'] ?? null;
        $this->container['processorCount'] = $data['processorCount'] ?? null;
        $this->container['productGroup'] = $data['productGroup'] ?? null;
        $this->container['productTypeName'] = $data['productTypeName'] ?? null;
        $this->container['productTypeSubcategory'] = $data['productTypeSubcategory'] ?? null;
        $this->container['publicationDate'] = $data['publicationDate'] ?? null;
        $this->container['publisher'] = $data['publisher'] ?? null;
        $this->container['regionCode'] = $data['regionCode'] ?? null;
        $this->container['releaseDate'] = $data['releaseDate'] ?? null;
        $this->container['ringSize'] = $data['ringSize'] ?? null;
        $this->container['runningTime'] = $data['runningTime'] ?? null;
        $this->container['shaftMaterial'] = $data['shaftMaterial'] ?? null;
        $this->container['scent'] = $data['scent'] ?? null;
        $this->container['seasonSequence'] = $data['seasonSequence'] ?? null;
        $this->container['seikodoProductCode'] = $data['seikodoProductCode'] ?? null;
        $this->container['size'] = $data['size'] ?? null;
        $this->container['sizePerPearl'] = $data['sizePerPearl'] ?? null;
        $this->container['smallImage'] = $data['smallImage'] ?? null;
        $this->container['studio'] = $data['studio'] ?? null;
        $this->container['subscriptionLength'] = $data['subscriptionLength'] ?? null;
        $this->container['systemMemorySize'] = $data['systemMemorySize'] ?? null;
        $this->container['systemMemoryType'] = $data['systemMemoryType'] ?? null;
        $this->container['theatricalReleaseDate'] = $data['theatricalReleaseDate'] ?? null;
        $this->container['title'] = $data['title'] ?? null;
        $this->container['totalDiamondWeight'] = $data['totalDiamondWeight'] ?? null;
        $this->container['totalGemWeight'] = $data['totalGemWeight'] ?? null;
        $this->container['warranty'] = $data['warranty'] ?? null;
        $this->container['weeeTaxValue'] = $data['weeeTaxValue'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets actor
     *
     * @return string[]|null
     */
    public function getActor()
    {
        return $this->container['actor'];
    }

    /**
     * Sets actor
     *
     * @param string[]|null $actor The actor attributes of the item.
     *
     * @return self
     */
    public function setActor($actor)
    {
        $this->container['actor'] = $actor;

        return $this;
    }

    /**
     * Gets artist
     *
     * @return string[]|null
     */
    public function getArtist()
    {
        return $this->container['artist'];
    }

    /**
     * Sets artist
     *
     * @param string[]|null $artist The artist attributes of the item.
     *
     * @return self
     */
    public function setArtist($artist)
    {
        $this->container['artist'] = $artist;

        return $this;
    }

    /**
     * Gets aspectRatio
     *
     * @return string|null
     */
    public function getAspectRatio()
    {
        return $this->container['aspectRatio'];
    }

    /**
     * Sets aspectRatio
     *
     * @param string|null $aspectRatio The aspect ratio attribute of the item.
     *
     * @return self
     */
    public function setAspectRatio($aspectRatio)
    {
        $this->container['aspectRatio'] = $aspectRatio;

        return $this;
    }

    /**
     * Gets audienceRating
     *
     * @return string|null
     */
    public function getAudienceRating()
    {
        return $this->container['audienceRating'];
    }

    /**
     * Sets audienceRating
     *
     * @param string|null $audienceRating The audience rating attribute of the item.
     *
     * @return self
     */
    public function setAudienceRating($audienceRating)
    {
        $this->container['audienceRating'] = $audienceRating;

        return $this;
    }

    /**
     * Gets author
     *
     * @return string[]|null
     */
    public function getAuthor()
    {
        return $this->container['author'];
    }

    /**
     * Sets author
     *
     * @param string[]|null $author The author attributes of the item.
     *
     * @return self
     */
    public function setAuthor($author)
    {
        $this->container['author'] = $author;

        return $this;
    }

    /**
     * Gets backFinding
     *
     * @return string|null
     */
    public function getBackFinding()
    {
        return $this->container['backFinding'];
    }

    /**
     * Sets backFinding
     *
     * @param string|null $backFinding The back finding attribute of the item.
     *
     * @return self
     */
    public function setBackFinding($backFinding)
    {
        $this->container['backFinding'] = $backFinding;

        return $this;
    }

    /**
     * Gets bandMaterialType
     *
     * @return string|null
     */
    public function getBandMaterialType()
    {
        return $this->container['bandMaterialType'];
    }

    /**
     * Sets bandMaterialType
     *
     * @param string|null $bandMaterialType The band material type attribute of the item.
     *
     * @return self
     */
    public function setBandMaterialType($bandMaterialType)
    {
        $this->container['bandMaterialType'] = $bandMaterialType;

        return $this;
    }

    /**
     * Gets binding
     *
     * @return string|null
     */
    public function getBinding()
    {
        return $this->container['binding'];
    }

    /**
     * Sets binding
     *
     * @param string|null $binding The binding attribute of the item.
     *
     * @return self
     */
    public function setBinding($binding)
    {
        $this->container['binding'] = $binding;

        return $this;
    }

    /**
     * Gets blurayRegion
     *
     * @return string|null
     */
    public function getBlurayRegion()
    {
        return $this->container['blurayRegion'];
    }

    /**
     * Sets blurayRegion
     *
     * @param string|null $blurayRegion The Bluray region attribute of the item.
     *
     * @return self
     */
    public function setBlurayRegion($blurayRegion)
    {
        $this->container['blurayRegion'] = $blurayRegion;

        return $this;
    }

    /**
     * Gets brand
     *
     * @return string|null
     */
    public function getBrand()
    {
        return $this->container['brand'];
    }

    /**
     * Sets brand
     *
     * @param string|null $brand The brand attribute of the item.
     *
     * @return self
     */
    public function setBrand($brand)
    {
        $this->container['brand'] = $brand;

        return $this;
    }

    /**
     * Gets ceroAgeRating
     *
     * @return string|null
     */
    public function getCeroAgeRating()
    {
        return $this->container['ceroAgeRating'];
    }

    /**
     * Sets ceroAgeRating
     *
     * @param string|null $ceroAgeRating The CERO age rating attribute of the item.
     *
     * @return self
     */
    public function setCeroAgeRating($ceroAgeRating)
    {
        $this->container['ceroAgeRating'] = $ceroAgeRating;

        return $this;
    }

    /**
     * Gets chainType
     *
     * @return string|null
     */
    public function getChainType()
    {
        return $this->container['chainType'];
    }

    /**
     * Sets chainType
     *
     * @param string|null $chainType The chain type attribute of the item.
     *
     * @return self
     */
    public function setChainType($chainType)
    {
        $this->container['chainType'] = $chainType;

        return $this;
    }

    /**
     * Gets claspType
     *
     * @return string|null
     */
    public function getClaspType()
    {
        return $this->container['claspType'];
    }

    /**
     * Sets claspType
     *
     * @param string|null $claspType The clasp type attribute of the item.
     *
     * @return self
     */
    public function setClaspType($claspType)
    {
        $this->container['claspType'] = $claspType;

        return $this;
    }

    /**
     * Gets color
     *
     * @return string|null
     */
    public function getColor()
    {
        return $this->container['color'];
    }

    /**
     * Sets color
     *
     * @param string|null $color The color attribute of the item.
     *
     * @return self
     */
    public function setColor($color)
    {
        $this->container['color'] = $color;

        return $this;
    }

    /**
     * Gets cpuManufacturer
     *
     * @return string|null
     */
    public function getCpuManufacturer()
    {
        return $this->container['cpuManufacturer'];
    }

    /**
     * Sets cpuManufacturer
     *
     * @param string|null $cpuManufacturer The CPU manufacturer attribute of the item.
     *
     * @return self
     */
    public function setCpuManufacturer($cpuManufacturer)
    {
        $this->container['cpuManufacturer'] = $cpuManufacturer;

        return $this;
    }

    /**
     * Gets cpuSpeed
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null
     */
    public function getCpuSpeed()
    {
        return $this->container['cpuSpeed'];
    }

    /**
     * Sets cpuSpeed
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null $cpuSpeed cpuSpeed
     *
     * @return self
     */
    public function setCpuSpeed($cpuSpeed)
    {
        $this->container['cpuSpeed'] = $cpuSpeed;

        return $this;
    }

    /**
     * Gets cpuType
     *
     * @return string|null
     */
    public function getCpuType()
    {
        return $this->container['cpuType'];
    }

    /**
     * Sets cpuType
     *
     * @param string|null $cpuType The CPU type attribute of the item.
     *
     * @return self
     */
    public function setCpuType($cpuType)
    {
        $this->container['cpuType'] = $cpuType;

        return $this;
    }

    /**
     * Gets creator
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\CreatorTypeV0[]|null
     */
    public function getCreator()
    {
        return $this->container['creator'];
    }

    /**
     * Sets creator
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\CreatorTypeV0[]|null $creator The creator attributes of the item.
     *
     * @return self
     */
    public function setCreator($creator)
    {
        $this->container['creator'] = $creator;

        return $this;
    }

    /**
     * Gets department
     *
     * @return string|null
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param string|null $department The department attribute of the item.
     *
     * @return self
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets director
     *
     * @return string[]|null
     */
    public function getDirector()
    {
        return $this->container['director'];
    }

    /**
     * Sets director
     *
     * @param string[]|null $director The director attributes of the item.
     *
     * @return self
     */
    public function setDirector($director)
    {
        $this->container['director'] = $director;

        return $this;
    }

    /**
     * Gets displaySize
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null
     */
    public function getDisplaySize()
    {
        return $this->container['displaySize'];
    }

    /**
     * Sets displaySize
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null $displaySize displaySize
     *
     * @return self
     */
    public function setDisplaySize($displaySize)
    {
        $this->container['displaySize'] = $displaySize;

        return $this;
    }

    /**
     * Gets edition
     *
     * @return string|null
     */
    public function getEdition()
    {
        return $this->container['edition'];
    }

    /**
     * Sets edition
     *
     * @param string|null $edition The edition attribute of the item.
     *
     * @return self
     */
    public function setEdition($edition)
    {
        $this->container['edition'] = $edition;

        return $this;
    }

    /**
     * Gets episodeSequence
     *
     * @return string|null
     */
    public function getEpisodeSequence()
    {
        return $this->container['episodeSequence'];
    }

    /**
     * Sets episodeSequence
     *
     * @param string|null $episodeSequence The episode sequence attribute of the item.
     *
     * @return self
     */
    public function setEpisodeSequence($episodeSequence)
    {
        $this->container['episodeSequence'] = $episodeSequence;

        return $this;
    }

    /**
     * Gets esrbAgeRating
     *
     * @return string|null
     */
    public function getEsrbAgeRating()
    {
        return $this->container['esrbAgeRating'];
    }

    /**
     * Sets esrbAgeRating
     *
     * @param string|null $esrbAgeRating The ESRB age rating attribute of the item.
     *
     * @return self
     */
    public function setEsrbAgeRating($esrbAgeRating)
    {
        $this->container['esrbAgeRating'] = $esrbAgeRating;

        return $this;
    }

    /**
     * Gets feature
     *
     * @return string[]|null
     */
    public function getFeature()
    {
        return $this->container['feature'];
    }

    /**
     * Sets feature
     *
     * @param string[]|null $feature The feature attributes of the item
     *
     * @return self
     */
    public function setFeature($feature)
    {
        $this->container['feature'] = $feature;

        return $this;
    }

    /**
     * Gets flavor
     *
     * @return string|null
     */
    public function getFlavor()
    {
        return $this->container['flavor'];
    }

    /**
     * Sets flavor
     *
     * @param string|null $flavor The flavor attribute of the item.
     *
     * @return self
     */
    public function setFlavor($flavor)
    {
        $this->container['flavor'] = $flavor;

        return $this;
    }

    /**
     * Gets format
     *
     * @return string[]|null
     */
    public function getFormat()
    {
        return $this->container['format'];
    }

    /**
     * Sets format
     *
     * @param string[]|null $format The format attributes of the item.
     *
     * @return self
     */
    public function setFormat($format)
    {
        $this->container['format'] = $format;

        return $this;
    }

    /**
     * Gets gemType
     *
     * @return string[]|null
     */
    public function getGemType()
    {
        return $this->container['gemType'];
    }

    /**
     * Sets gemType
     *
     * @param string[]|null $gemType The gem type attributes of the item.
     *
     * @return self
     */
    public function setGemType($gemType)
    {
        $this->container['gemType'] = $gemType;

        return $this;
    }

    /**
     * Gets genre
     *
     * @return string|null
     */
    public function getGenre()
    {
        return $this->container['genre'];
    }

    /**
     * Sets genre
     *
     * @param string|null $genre The genre attribute of the item.
     *
     * @return self
     */
    public function setGenre($genre)
    {
        $this->container['genre'] = $genre;

        return $this;
    }

    /**
     * Gets golfClubFlex
     *
     * @return string|null
     */
    public function getGolfClubFlex()
    {
        return $this->container['golfClubFlex'];
    }

    /**
     * Sets golfClubFlex
     *
     * @param string|null $golfClubFlex The golf club flex attribute of the item.
     *
     * @return self
     */
    public function setGolfClubFlex($golfClubFlex)
    {
        $this->container['golfClubFlex'] = $golfClubFlex;

        return $this;
    }

    /**
     * Gets golfClubLoft
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null
     */
    public function getGolfClubLoft()
    {
        return $this->container['golfClubLoft'];
    }

    /**
     * Sets golfClubLoft
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null $golfClubLoft golfClubLoft
     *
     * @return self
     */
    public function setGolfClubLoft($golfClubLoft)
    {
        $this->container['golfClubLoft'] = $golfClubLoft;

        return $this;
    }

    /**
     * Gets handOrientation
     *
     * @return string|null
     */
    public function getHandOrientation()
    {
        return $this->container['handOrientation'];
    }

    /**
     * Sets handOrientation
     *
     * @param string|null $handOrientation The hand orientation attribute of the item.
     *
     * @return self
     */
    public function setHandOrientation($handOrientation)
    {
        $this->container['handOrientation'] = $handOrientation;

        return $this;
    }

    /**
     * Gets hardDiskInterface
     *
     * @return string|null
     */
    public function getHardDiskInterface()
    {
        return $this->container['hardDiskInterface'];
    }

    /**
     * Sets hardDiskInterface
     *
     * @param string|null $hardDiskInterface The hard disk interface attribute of the item.
     *
     * @return self
     */
    public function setHardDiskInterface($hardDiskInterface)
    {
        $this->container['hardDiskInterface'] = $hardDiskInterface;

        return $this;
    }

    /**
     * Gets hardDiskSize
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null
     */
    public function getHardDiskSize()
    {
        return $this->container['hardDiskSize'];
    }

    /**
     * Sets hardDiskSize
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null $hardDiskSize hardDiskSize
     *
     * @return self
     */
    public function setHardDiskSize($hardDiskSize)
    {
        $this->container['hardDiskSize'] = $hardDiskSize;

        return $this;
    }

    /**
     * Gets hardwarePlatform
     *
     * @return string|null
     */
    public function getHardwarePlatform()
    {
        return $this->container['hardwarePlatform'];
    }

    /**
     * Sets hardwarePlatform
     *
     * @param string|null $hardwarePlatform The hardware platform attribute of the item.
     *
     * @return self
     */
    public function setHardwarePlatform($hardwarePlatform)
    {
        $this->container['hardwarePlatform'] = $hardwarePlatform;

        return $this;
    }

    /**
     * Gets hazardousMaterialType
     *
     * @return string|null
     */
    public function getHazardousMaterialType()
    {
        return $this->container['hazardousMaterialType'];
    }

    /**
     * Sets hazardousMaterialType
     *
     * @param string|null $hazardousMaterialType The hazardous material type attribute of the item.
     *
     * @return self
     */
    public function setHazardousMaterialType($hazardousMaterialType)
    {
        $this->container['hazardousMaterialType'] = $hazardousMaterialType;

        return $this;
    }

    /**
     * Gets itemDimensions
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DimensionTypeV0|null
     */
    public function getItemDimensions()
    {
        return $this->container['itemDimensions'];
    }

    /**
     * Sets itemDimensions
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DimensionTypeV0|null $itemDimensions itemDimensions
     *
     * @return self
     */
    public function setItemDimensions($itemDimensions)
    {
        $this->container['itemDimensions'] = $itemDimensions;

        return $this;
    }

    /**
     * Gets isAdultProduct
     *
     * @return bool|null
     */
    public function getIsAdultProduct()
    {
        return $this->container['isAdultProduct'];
    }

    /**
     * Sets isAdultProduct
     *
     * @param bool|null $isAdultProduct The adult product attribute of the item.
     *
     * @return self
     */
    public function setIsAdultProduct($isAdultProduct)
    {
        $this->container['isAdultProduct'] = $isAdultProduct;

        return $this;
    }

    /**
     * Gets isAutographed
     *
     * @return bool|null
     */
    public function getIsAutographed()
    {
        return $this->container['isAutographed'];
    }

    /**
     * Sets isAutographed
     *
     * @param bool|null $isAutographed The autographed attribute of the item.
     *
     * @return self
     */
    public function setIsAutographed($isAutographed)
    {
        $this->container['isAutographed'] = $isAutographed;

        return $this;
    }

    /**
     * Gets isEligibleForTradeIn
     *
     * @return bool|null
     */
    public function getIsEligibleForTradeIn()
    {
        return $this->container['isEligibleForTradeIn'];
    }

    /**
     * Sets isEligibleForTradeIn
     *
     * @param bool|null $isEligibleForTradeIn The is eligible for trade in attribute of the item.
     *
     * @return self
     */
    public function setIsEligibleForTradeIn($isEligibleForTradeIn)
    {
        $this->container['isEligibleForTradeIn'] = $isEligibleForTradeIn;

        return $this;
    }

    /**
     * Gets isMemorabilia
     *
     * @return bool|null
     */
    public function getIsMemorabilia()
    {
        return $this->container['isMemorabilia'];
    }

    /**
     * Sets isMemorabilia
     *
     * @param bool|null $isMemorabilia The is memorabilia attribute of the item.
     *
     * @return self
     */
    public function setIsMemorabilia($isMemorabilia)
    {
        $this->container['isMemorabilia'] = $isMemorabilia;

        return $this;
    }

    /**
     * Gets issuesPerYear
     *
     * @return string|null
     */
    public function getIssuesPerYear()
    {
        return $this->container['issuesPerYear'];
    }

    /**
     * Sets issuesPerYear
     *
     * @param string|null $issuesPerYear The issues per year attribute of the item.
     *
     * @return self
     */
    public function setIssuesPerYear($issuesPerYear)
    {
        $this->container['issuesPerYear'] = $issuesPerYear;

        return $this;
    }

    /**
     * Gets itemPartNumber
     *
     * @return string|null
     */
    public function getItemPartNumber()
    {
        return $this->container['itemPartNumber'];
    }

    /**
     * Sets itemPartNumber
     *
     * @param string|null $itemPartNumber The item part number attribute of the item.
     *
     * @return self
     */
    public function setItemPartNumber($itemPartNumber)
    {
        $this->container['itemPartNumber'] = $itemPartNumber;

        return $this;
    }

    /**
     * Gets label
     *
     * @return string|null
     */
    public function getLabel()
    {
        return $this->container['label'];
    }

    /**
     * Sets label
     *
     * @param string|null $label The label attribute of the item.
     *
     * @return self
     */
    public function setLabel($label)
    {
        $this->container['label'] = $label;

        return $this;
    }

    /**
     * Gets languages
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\LanguageTypeV0[]|null
     */
    public function getLanguages()
    {
        return $this->container['languages'];
    }

    /**
     * Sets languages
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\LanguageTypeV0[]|null $languages The languages attribute of the item.
     *
     * @return self
     */
    public function setLanguages($languages)
    {
        $this->container['languages'] = $languages;

        return $this;
    }

    /**
     * Gets legalDisclaimer
     *
     * @return string|null
     */
    public function getLegalDisclaimer()
    {
        return $this->container['legalDisclaimer'];
    }

    /**
     * Sets legalDisclaimer
     *
     * @param string|null $legalDisclaimer The legal disclaimer attribute of the item.
     *
     * @return self
     */
    public function setLegalDisclaimer($legalDisclaimer)
    {
        $this->container['legalDisclaimer'] = $legalDisclaimer;

        return $this;
    }

    /**
     * Gets listPrice
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\PriceV0|null
     */
    public function getListPrice()
    {
        return $this->container['listPrice'];
    }

    /**
     * Sets listPrice
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\PriceV0|null $listPrice listPrice
     *
     * @return self
     */
    public function setListPrice($listPrice)
    {
        $this->container['listPrice'] = $listPrice;

        return $this;
    }

    /**
     * Gets manufacturer
     *
     * @return string|null
     */
    public function getManufacturer()
    {
        return $this->container['manufacturer'];
    }

    /**
     * Sets manufacturer
     *
     * @param string|null $manufacturer The manufacturer attribute of the item.
     *
     * @return self
     */
    public function setManufacturer($manufacturer)
    {
        $this->container['manufacturer'] = $manufacturer;

        return $this;
    }

    /**
     * Gets manufacturerMaximumAge
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null
     */
    public function getManufacturerMaximumAge()
    {
        return $this->container['manufacturerMaximumAge'];
    }

    /**
     * Sets manufacturerMaximumAge
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null $manufacturerMaximumAge manufacturerMaximumAge
     *
     * @return self
     */
    public function setManufacturerMaximumAge($manufacturerMaximumAge)
    {
        $this->container['manufacturerMaximumAge'] = $manufacturerMaximumAge;

        return $this;
    }

    /**
     * Gets manufacturerMinimumAge
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null
     */
    public function getManufacturerMinimumAge()
    {
        return $this->container['manufacturerMinimumAge'];
    }

    /**
     * Sets manufacturerMinimumAge
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null $manufacturerMinimumAge manufacturerMinimumAge
     *
     * @return self
     */
    public function setManufacturerMinimumAge($manufacturerMinimumAge)
    {
        $this->container['manufacturerMinimumAge'] = $manufacturerMinimumAge;

        return $this;
    }

    /**
     * Gets manufacturerPartsWarrantyDescription
     *
     * @return string|null
     */
    public function getManufacturerPartsWarrantyDescription()
    {
        return $this->container['manufacturerPartsWarrantyDescription'];
    }

    /**
     * Sets manufacturerPartsWarrantyDescription
     *
     * @param string|null $manufacturerPartsWarrantyDescription The manufacturer parts warranty description attribute of the item.
     *
     * @return self
     */
    public function setManufacturerPartsWarrantyDescription($manufacturerPartsWarrantyDescription)
    {
        $this->container['manufacturerPartsWarrantyDescription'] = $manufacturerPartsWarrantyDescription;

        return $this;
    }

    /**
     * Gets materialType
     *
     * @return string[]|null
     */
    public function getMaterialType()
    {
        return $this->container['materialType'];
    }

    /**
     * Sets materialType
     *
     * @param string[]|null $materialType The material type attributes of the item.
     *
     * @return self
     */
    public function setMaterialType($materialType)
    {
        $this->container['materialType'] = $materialType;

        return $this;
    }

    /**
     * Gets maximumResolution
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null
     */
    public function getMaximumResolution()
    {
        return $this->container['maximumResolution'];
    }

    /**
     * Sets maximumResolution
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null $maximumResolution maximumResolution
     *
     * @return self
     */
    public function setMaximumResolution($maximumResolution)
    {
        $this->container['maximumResolution'] = $maximumResolution;

        return $this;
    }

    /**
     * Gets mediaType
     *
     * @return string[]|null
     */
    public function getMediaType()
    {
        return $this->container['mediaType'];
    }

    /**
     * Sets mediaType
     *
     * @param string[]|null $mediaType The media type attributes of the item.
     *
     * @return self
     */
    public function setMediaType($mediaType)
    {
        $this->container['mediaType'] = $mediaType;

        return $this;
    }

    /**
     * Gets metalStamp
     *
     * @return string|null
     */
    public function getMetalStamp()
    {
        return $this->container['metalStamp'];
    }

    /**
     * Sets metalStamp
     *
     * @param string|null $metalStamp The metal stamp attribute of the item.
     *
     * @return self
     */
    public function setMetalStamp($metalStamp)
    {
        $this->container['metalStamp'] = $metalStamp;

        return $this;
    }

    /**
     * Gets metalType
     *
     * @return string|null
     */
    public function getMetalType()
    {
        return $this->container['metalType'];
    }

    /**
     * Sets metalType
     *
     * @param string|null $metalType The metal type attribute of the item.
     *
     * @return self
     */
    public function setMetalType($metalType)
    {
        $this->container['metalType'] = $metalType;

        return $this;
    }

    /**
     * Gets model
     *
     * @return string|null
     */
    public function getModel()
    {
        return $this->container['model'];
    }

    /**
     * Sets model
     *
     * @param string|null $model The model attribute of the item.
     *
     * @return self
     */
    public function setModel($model)
    {
        $this->container['model'] = $model;

        return $this;
    }

    /**
     * Gets numberOfDiscs
     *
     * @return int|null
     */
    public function getNumberOfDiscs()
    {
        return $this->container['numberOfDiscs'];
    }

    /**
     * Sets numberOfDiscs
     *
     * @param int|null $numberOfDiscs The number of discs attribute of the item.
     *
     * @return self
     */
    public function setNumberOfDiscs($numberOfDiscs)
    {
        $this->container['numberOfDiscs'] = $numberOfDiscs;

        return $this;
    }

    /**
     * Gets numberOfIssues
     *
     * @return int|null
     */
    public function getNumberOfIssues()
    {
        return $this->container['numberOfIssues'];
    }

    /**
     * Sets numberOfIssues
     *
     * @param int|null $numberOfIssues The number of issues attribute of the item.
     *
     * @return self
     */
    public function setNumberOfIssues($numberOfIssues)
    {
        $this->container['numberOfIssues'] = $numberOfIssues;

        return $this;
    }

    /**
     * Gets numberOfItems
     *
     * @return int|null
     */
    public function getNumberOfItems()
    {
        return $this->container['numberOfItems'];
    }

    /**
     * Sets numberOfItems
     *
     * @param int|null $numberOfItems The number of items attribute of the item.
     *
     * @return self
     */
    public function setNumberOfItems($numberOfItems)
    {
        $this->container['numberOfItems'] = $numberOfItems;

        return $this;
    }

    /**
     * Gets numberOfPages
     *
     * @return int|null
     */
    public function getNumberOfPages()
    {
        return $this->container['numberOfPages'];
    }

    /**
     * Sets numberOfPages
     *
     * @param int|null $numberOfPages The number of pages attribute of the item.
     *
     * @return self
     */
    public function setNumberOfPages($numberOfPages)
    {
        $this->container['numberOfPages'] = $numberOfPages;

        return $this;
    }

    /**
     * Gets numberOfTracks
     *
     * @return int|null
     */
    public function getNumberOfTracks()
    {
        return $this->container['numberOfTracks'];
    }

    /**
     * Sets numberOfTracks
     *
     * @param int|null $numberOfTracks The number of tracks attribute of the item.
     *
     * @return self
     */
    public function setNumberOfTracks($numberOfTracks)
    {
        $this->container['numberOfTracks'] = $numberOfTracks;

        return $this;
    }

    /**
     * Gets operatingSystem
     *
     * @return string[]|null
     */
    public function getOperatingSystem()
    {
        return $this->container['operatingSystem'];
    }

    /**
     * Sets operatingSystem
     *
     * @param string[]|null $operatingSystem The operating system attributes of the item.
     *
     * @return self
     */
    public function setOperatingSystem($operatingSystem)
    {
        $this->container['operatingSystem'] = $operatingSystem;

        return $this;
    }

    /**
     * Gets opticalZoom
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null
     */
    public function getOpticalZoom()
    {
        return $this->container['opticalZoom'];
    }

    /**
     * Sets opticalZoom
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null $opticalZoom opticalZoom
     *
     * @return self
     */
    public function setOpticalZoom($opticalZoom)
    {
        $this->container['opticalZoom'] = $opticalZoom;

        return $this;
    }

    /**
     * Gets packageDimensions
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DimensionTypeV0|null
     */
    public function getPackageDimensions()
    {
        return $this->container['packageDimensions'];
    }

    /**
     * Sets packageDimensions
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DimensionTypeV0|null $packageDimensions packageDimensions
     *
     * @return self
     */
    public function setPackageDimensions($packageDimensions)
    {
        $this->container['packageDimensions'] = $packageDimensions;

        return $this;
    }

    /**
     * Gets packageQuantity
     *
     * @return int|null
     */
    public function getPackageQuantity()
    {
        return $this->container['packageQuantity'];
    }

    /**
     * Sets packageQuantity
     *
     * @param int|null $packageQuantity The package quantity attribute of the item.
     *
     * @return self
     */
    public function setPackageQuantity($packageQuantity)
    {
        $this->container['packageQuantity'] = $packageQuantity;

        return $this;
    }

    /**
     * Gets partNumber
     *
     * @return string|null
     */
    public function getPartNumber()
    {
        return $this->container['partNumber'];
    }

    /**
     * Sets partNumber
     *
     * @param string|null $partNumber The part number attribute of the item.
     *
     * @return self
     */
    public function setPartNumber($partNumber)
    {
        $this->container['partNumber'] = $partNumber;

        return $this;
    }

    /**
     * Gets pegiRating
     *
     * @return string|null
     */
    public function getPegiRating()
    {
        return $this->container['pegiRating'];
    }

    /**
     * Sets pegiRating
     *
     * @param string|null $pegiRating The PEGI rating attribute of the item.
     *
     * @return self
     */
    public function setPegiRating($pegiRating)
    {
        $this->container['pegiRating'] = $pegiRating;

        return $this;
    }

    /**
     * Gets platform
     *
     * @return string[]|null
     */
    public function getPlatform()
    {
        return $this->container['platform'];
    }

    /**
     * Sets platform
     *
     * @param string[]|null $platform The platform attributes of the item.
     *
     * @return self
     */
    public function setPlatform($platform)
    {
        $this->container['platform'] = $platform;

        return $this;
    }

    /**
     * Gets processorCount
     *
     * @return int|null
     */
    public function getProcessorCount()
    {
        return $this->container['processorCount'];
    }

    /**
     * Sets processorCount
     *
     * @param int|null $processorCount The processor count attribute of the item.
     *
     * @return self
     */
    public function setProcessorCount($processorCount)
    {
        $this->container['processorCount'] = $processorCount;

        return $this;
    }

    /**
     * Gets productGroup
     *
     * @return string|null
     */
    public function getProductGroup()
    {
        return $this->container['productGroup'];
    }

    /**
     * Sets productGroup
     *
     * @param string|null $productGroup The product group attribute of the item.
     *
     * @return self
     */
    public function setProductGroup($productGroup)
    {
        $this->container['productGroup'] = $productGroup;

        return $this;
    }

    /**
     * Gets productTypeName
     *
     * @return string|null
     */
    public function getProductTypeName()
    {
        return $this->container['productTypeName'];
    }

    /**
     * Sets productTypeName
     *
     * @param string|null $productTypeName The product type name attribute of the item.
     *
     * @return self
     */
    public function setProductTypeName($productTypeName)
    {
        $this->container['productTypeName'] = $productTypeName;

        return $this;
    }

    /**
     * Gets productTypeSubcategory
     *
     * @return string|null
     */
    public function getProductTypeSubcategory()
    {
        return $this->container['productTypeSubcategory'];
    }

    /**
     * Sets productTypeSubcategory
     *
     * @param string|null $productTypeSubcategory The product type subcategory attribute of the item.
     *
     * @return self
     */
    public function setProductTypeSubcategory($productTypeSubcategory)
    {
        $this->container['productTypeSubcategory'] = $productTypeSubcategory;

        return $this;
    }

    /**
     * Gets publicationDate
     *
     * @return string|null
     */
    public function getPublicationDate()
    {
        return $this->container['publicationDate'];
    }

    /**
     * Sets publicationDate
     *
     * @param string|null $publicationDate The publication date attribute of the item.
     *
     * @return self
     */
    public function setPublicationDate($publicationDate)
    {
        $this->container['publicationDate'] = $publicationDate;

        return $this;
    }

    /**
     * Gets publisher
     *
     * @return string|null
     */
    public function getPublisher()
    {
        return $this->container['publisher'];
    }

    /**
     * Sets publisher
     *
     * @param string|null $publisher The publisher attribute of the item.
     *
     * @return self
     */
    public function setPublisher($publisher)
    {
        $this->container['publisher'] = $publisher;

        return $this;
    }

    /**
     * Gets regionCode
     *
     * @return string|null
     */
    public function getRegionCode()
    {
        return $this->container['regionCode'];
    }

    /**
     * Sets regionCode
     *
     * @param string|null $regionCode The region code attribute of the item.
     *
     * @return self
     */
    public function setRegionCode($regionCode)
    {
        $this->container['regionCode'] = $regionCode;

        return $this;
    }

    /**
     * Gets releaseDate
     *
     * @return string|null
     */
    public function getReleaseDate()
    {
        return $this->container['releaseDate'];
    }

    /**
     * Sets releaseDate
     *
     * @param string|null $releaseDate The release date attribute of the item.
     *
     * @return self
     */
    public function setReleaseDate($releaseDate)
    {
        $this->container['releaseDate'] = $releaseDate;

        return $this;
    }

    /**
     * Gets ringSize
     *
     * @return string|null
     */
    public function getRingSize()
    {
        return $this->container['ringSize'];
    }

    /**
     * Sets ringSize
     *
     * @param string|null $ringSize The ring size attribute of the item.
     *
     * @return self
     */
    public function setRingSize($ringSize)
    {
        $this->container['ringSize'] = $ringSize;

        return $this;
    }

    /**
     * Gets runningTime
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null
     */
    public function getRunningTime()
    {
        return $this->container['runningTime'];
    }

    /**
     * Sets runningTime
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null $runningTime runningTime
     *
     * @return self
     */
    public function setRunningTime($runningTime)
    {
        $this->container['runningTime'] = $runningTime;

        return $this;
    }

    /**
     * Gets shaftMaterial
     *
     * @return string|null
     */
    public function getShaftMaterial()
    {
        return $this->container['shaftMaterial'];
    }

    /**
     * Sets shaftMaterial
     *
     * @param string|null $shaftMaterial The shaft material attribute of the item.
     *
     * @return self
     */
    public function setShaftMaterial($shaftMaterial)
    {
        $this->container['shaftMaterial'] = $shaftMaterial;

        return $this;
    }

    /**
     * Gets scent
     *
     * @return string|null
     */
    public function getScent()
    {
        return $this->container['scent'];
    }

    /**
     * Sets scent
     *
     * @param string|null $scent The scent attribute of the item.
     *
     * @return self
     */
    public function setScent($scent)
    {
        $this->container['scent'] = $scent;

        return $this;
    }

    /**
     * Gets seasonSequence
     *
     * @return string|null
     */
    public function getSeasonSequence()
    {
        return $this->container['seasonSequence'];
    }

    /**
     * Sets seasonSequence
     *
     * @param string|null $seasonSequence The season sequence attribute of the item.
     *
     * @return self
     */
    public function setSeasonSequence($seasonSequence)
    {
        $this->container['seasonSequence'] = $seasonSequence;

        return $this;
    }

    /**
     * Gets seikodoProductCode
     *
     * @return string|null
     */
    public function getSeikodoProductCode()
    {
        return $this->container['seikodoProductCode'];
    }

    /**
     * Sets seikodoProductCode
     *
     * @param string|null $seikodoProductCode The Seikodo product code attribute of the item.
     *
     * @return self
     */
    public function setSeikodoProductCode($seikodoProductCode)
    {
        $this->container['seikodoProductCode'] = $seikodoProductCode;

        return $this;
    }

    /**
     * Gets size
     *
     * @return string|null
     */
    public function getSize()
    {
        return $this->container['size'];
    }

    /**
     * Sets size
     *
     * @param string|null $size The size attribute of the item.
     *
     * @return self
     */
    public function setSize($size)
    {
        $this->container['size'] = $size;

        return $this;
    }

    /**
     * Gets sizePerPearl
     *
     * @return string|null
     */
    public function getSizePerPearl()
    {
        return $this->container['sizePerPearl'];
    }

    /**
     * Sets sizePerPearl
     *
     * @param string|null $sizePerPearl The size per pearl attribute of the item.
     *
     * @return self
     */
    public function setSizePerPearl($sizePerPearl)
    {
        $this->container['sizePerPearl'] = $sizePerPearl;

        return $this;
    }

    /**
     * Gets smallImage
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\ImageV0|null
     */
    public function getSmallImage()
    {
        return $this->container['smallImage'];
    }

    /**
     * Sets smallImage
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\ImageV0|null $smallImage smallImage
     *
     * @return self
     */
    public function setSmallImage($smallImage)
    {
        $this->container['smallImage'] = $smallImage;

        return $this;
    }

    /**
     * Gets studio
     *
     * @return string|null
     */
    public function getStudio()
    {
        return $this->container['studio'];
    }

    /**
     * Sets studio
     *
     * @param string|null $studio The studio attribute of the item.
     *
     * @return self
     */
    public function setStudio($studio)
    {
        $this->container['studio'] = $studio;

        return $this;
    }

    /**
     * Gets subscriptionLength
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null
     */
    public function getSubscriptionLength()
    {
        return $this->container['subscriptionLength'];
    }

    /**
     * Sets subscriptionLength
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null $subscriptionLength subscriptionLength
     *
     * @return self
     */
    public function setSubscriptionLength($subscriptionLength)
    {
        $this->container['subscriptionLength'] = $subscriptionLength;

        return $this;
    }

    /**
     * Gets systemMemorySize
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null
     */
    public function getSystemMemorySize()
    {
        return $this->container['systemMemorySize'];
    }

    /**
     * Sets systemMemorySize
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null $systemMemorySize systemMemorySize
     *
     * @return self
     */
    public function setSystemMemorySize($systemMemorySize)
    {
        $this->container['systemMemorySize'] = $systemMemorySize;

        return $this;
    }

    /**
     * Gets systemMemoryType
     *
     * @return string|null
     */
    public function getSystemMemoryType()
    {
        return $this->container['systemMemoryType'];
    }

    /**
     * Sets systemMemoryType
     *
     * @param string|null $systemMemoryType The system memory type attribute of the item.
     *
     * @return self
     */
    public function setSystemMemoryType($systemMemoryType)
    {
        $this->container['systemMemoryType'] = $systemMemoryType;

        return $this;
    }

    /**
     * Gets theatricalReleaseDate
     *
     * @return string|null
     */
    public function getTheatricalReleaseDate()
    {
        return $this->container['theatricalReleaseDate'];
    }

    /**
     * Sets theatricalReleaseDate
     *
     * @param string|null $theatricalReleaseDate The theatrical release date attribute of the item.
     *
     * @return self
     */
    public function setTheatricalReleaseDate($theatricalReleaseDate)
    {
        $this->container['theatricalReleaseDate'] = $theatricalReleaseDate;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string|null
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string|null $title The title attribute of the item.
     *
     * @return self
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets totalDiamondWeight
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null
     */
    public function getTotalDiamondWeight()
    {
        return $this->container['totalDiamondWeight'];
    }

    /**
     * Sets totalDiamondWeight
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null $totalDiamondWeight totalDiamondWeight
     *
     * @return self
     */
    public function setTotalDiamondWeight($totalDiamondWeight)
    {
        $this->container['totalDiamondWeight'] = $totalDiamondWeight;

        return $this;
    }

    /**
     * Gets totalGemWeight
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null
     */
    public function getTotalGemWeight()
    {
        return $this->container['totalGemWeight'];
    }

    /**
     * Sets totalGemWeight
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\DecimalWithUnitsV0|null $totalGemWeight totalGemWeight
     *
     * @return self
     */
    public function setTotalGemWeight($totalGemWeight)
    {
        $this->container['totalGemWeight'] = $totalGemWeight;

        return $this;
    }

    /**
     * Gets warranty
     *
     * @return string|null
     */
    public function getWarranty()
    {
        return $this->container['warranty'];
    }

    /**
     * Sets warranty
     *
     * @param string|null $warranty The warranty attribute of the item.
     *
     * @return self
     */
    public function setWarranty($warranty)
    {
        $this->container['warranty'] = $warranty;

        return $this;
    }

    /**
     * Gets weeeTaxValue
     *
     * @return \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\PriceV0|null
     */
    public function getWeeeTaxValue()
    {
        return $this->container['weeeTaxValue'];
    }

    /**
     * Sets weeeTaxValue
     *
     * @param \Webcom\Amazon\Rest\CatalogItemsApiV0\Model\PriceV0|null $weeeTaxValue weeeTaxValue
     *
     * @return self
     */
    public function setWeeeTaxValue($weeeTaxValue)
    {
        $this->container['weeeTaxValue'] = $weeeTaxValue;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


