<?php
/**
 * AdditionalSellerInputV0
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Webcom\Amazon\Rest\MerchantFulfillmentApiV0
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner API for Merchant Fulfillment
 *
 * The Selling Partner API for Merchant Fulfillment helps you build applications that let sellers purchase shipping for non-Prime and Prime orders using Amazonâ€™s Buy Shipping Services.
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Webcom\Amazon\Rest\MerchantFulfillmentApiV0\Model;

use \Webcom\Amazon\Rest\ModelInterface;
use \ArrayAccess;
use \Webcom\Amazon\Rest\ObjectSerializer;

/**
 * AdditionalSellerInputV0 Class Doc Comment
 *
 * @category Class
 * @description Additional information required to purchase shipping.
 * @package  Webcom\Amazon\Rest\MerchantFulfillmentApiV0
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class AdditionalSellerInputV0 implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AdditionalSellerInput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'dataType' => 'string',
        'valueAsString' => 'string',
        'valueAsBoolean' => 'bool',
        'valueAsInteger' => 'int',
        'valueAsTimestamp' => '\DateTime',
        'valueAsAddress' => '\Webcom\Amazon\Rest\MerchantFulfillmentApiV0\Model\AddressV0',
        'valueAsWeight' => '\Webcom\Amazon\Rest\MerchantFulfillmentApiV0\Model\WeightV0',
        'valueAsDimension' => '\Webcom\Amazon\Rest\MerchantFulfillmentApiV0\Model\LengthV0',
        'valueAsCurrency' => '\Webcom\Amazon\Rest\MerchantFulfillmentApiV0\Model\CurrencyAmountV0'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'dataType' => null,
        'valueAsString' => null,
        'valueAsBoolean' => null,
        'valueAsInteger' => null,
        'valueAsTimestamp' => 'date-time',
        'valueAsAddress' => null,
        'valueAsWeight' => null,
        'valueAsDimension' => null,
        'valueAsCurrency' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'dataType' => 'DataType',
        'valueAsString' => 'ValueAsString',
        'valueAsBoolean' => 'ValueAsBoolean',
        'valueAsInteger' => 'ValueAsInteger',
        'valueAsTimestamp' => 'ValueAsTimestamp',
        'valueAsAddress' => 'ValueAsAddress',
        'valueAsWeight' => 'ValueAsWeight',
        'valueAsDimension' => 'ValueAsDimension',
        'valueAsCurrency' => 'ValueAsCurrency'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'dataType' => 'setDataType',
        'valueAsString' => 'setValueAsString',
        'valueAsBoolean' => 'setValueAsBoolean',
        'valueAsInteger' => 'setValueAsInteger',
        'valueAsTimestamp' => 'setValueAsTimestamp',
        'valueAsAddress' => 'setValueAsAddress',
        'valueAsWeight' => 'setValueAsWeight',
        'valueAsDimension' => 'setValueAsDimension',
        'valueAsCurrency' => 'setValueAsCurrency'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'dataType' => 'getDataType',
        'valueAsString' => 'getValueAsString',
        'valueAsBoolean' => 'getValueAsBoolean',
        'valueAsInteger' => 'getValueAsInteger',
        'valueAsTimestamp' => 'getValueAsTimestamp',
        'valueAsAddress' => 'getValueAsAddress',
        'valueAsWeight' => 'getValueAsWeight',
        'valueAsDimension' => 'getValueAsDimension',
        'valueAsCurrency' => 'getValueAsCurrency'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['dataType'] = $data['dataType'] ?? null;
        $this->container['valueAsString'] = $data['valueAsString'] ?? null;
        $this->container['valueAsBoolean'] = $data['valueAsBoolean'] ?? null;
        $this->container['valueAsInteger'] = $data['valueAsInteger'] ?? null;
        $this->container['valueAsTimestamp'] = $data['valueAsTimestamp'] ?? null;
        $this->container['valueAsAddress'] = $data['valueAsAddress'] ?? null;
        $this->container['valueAsWeight'] = $data['valueAsWeight'] ?? null;
        $this->container['valueAsDimension'] = $data['valueAsDimension'] ?? null;
        $this->container['valueAsCurrency'] = $data['valueAsCurrency'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets dataType
     *
     * @return string|null
     */
    public function getDataType()
    {
        return $this->container['dataType'];
    }

    /**
     * Sets dataType
     *
     * @param string|null $dataType The data type of the additional information.
     *
     * @return self
     */
    public function setDataType($dataType)
    {
        $this->container['dataType'] = $dataType;

        return $this;
    }

    /**
     * Gets valueAsString
     *
     * @return string|null
     */
    public function getValueAsString()
    {
        return $this->container['valueAsString'];
    }

    /**
     * Sets valueAsString
     *
     * @param string|null $valueAsString The value when the data type is string.
     *
     * @return self
     */
    public function setValueAsString($valueAsString)
    {
        $this->container['valueAsString'] = $valueAsString;

        return $this;
    }

    /**
     * Gets valueAsBoolean
     *
     * @return bool|null
     */
    public function getValueAsBoolean()
    {
        return $this->container['valueAsBoolean'];
    }

    /**
     * Sets valueAsBoolean
     *
     * @param bool|null $valueAsBoolean The value when the data type is boolean.
     *
     * @return self
     */
    public function setValueAsBoolean($valueAsBoolean)
    {
        $this->container['valueAsBoolean'] = $valueAsBoolean;

        return $this;
    }

    /**
     * Gets valueAsInteger
     *
     * @return int|null
     */
    public function getValueAsInteger()
    {
        return $this->container['valueAsInteger'];
    }

    /**
     * Sets valueAsInteger
     *
     * @param int|null $valueAsInteger The value when the data type is integer.
     *
     * @return self
     */
    public function setValueAsInteger($valueAsInteger)
    {
        $this->container['valueAsInteger'] = $valueAsInteger;

        return $this;
    }

    /**
     * Gets valueAsTimestamp
     *
     * @return \DateTime|null
     */
    public function getValueAsTimestamp()
    {
        return $this->container['valueAsTimestamp'];
    }

    /**
     * Sets valueAsTimestamp
     *
     * @param \DateTime|null $valueAsTimestamp Date-time formatted timestamp.
     *
     * @return self
     */
    public function setValueAsTimestamp($valueAsTimestamp)
    {
        $this->container['valueAsTimestamp'] = $valueAsTimestamp;

        return $this;
    }

    /**
     * Gets valueAsAddress
     *
     * @return \Webcom\Amazon\Rest\MerchantFulfillmentApiV0\Model\AddressV0|null
     */
    public function getValueAsAddress()
    {
        return $this->container['valueAsAddress'];
    }

    /**
     * Sets valueAsAddress
     *
     * @param \Webcom\Amazon\Rest\MerchantFulfillmentApiV0\Model\AddressV0|null $valueAsAddress valueAsAddress
     *
     * @return self
     */
    public function setValueAsAddress($valueAsAddress)
    {
        $this->container['valueAsAddress'] = $valueAsAddress;

        return $this;
    }

    /**
     * Gets valueAsWeight
     *
     * @return \Webcom\Amazon\Rest\MerchantFulfillmentApiV0\Model\WeightV0|null
     */
    public function getValueAsWeight()
    {
        return $this->container['valueAsWeight'];
    }

    /**
     * Sets valueAsWeight
     *
     * @param \Webcom\Amazon\Rest\MerchantFulfillmentApiV0\Model\WeightV0|null $valueAsWeight valueAsWeight
     *
     * @return self
     */
    public function setValueAsWeight($valueAsWeight)
    {
        $this->container['valueAsWeight'] = $valueAsWeight;

        return $this;
    }

    /**
     * Gets valueAsDimension
     *
     * @return \Webcom\Amazon\Rest\MerchantFulfillmentApiV0\Model\LengthV0|null
     */
    public function getValueAsDimension()
    {
        return $this->container['valueAsDimension'];
    }

    /**
     * Sets valueAsDimension
     *
     * @param \Webcom\Amazon\Rest\MerchantFulfillmentApiV0\Model\LengthV0|null $valueAsDimension valueAsDimension
     *
     * @return self
     */
    public function setValueAsDimension($valueAsDimension)
    {
        $this->container['valueAsDimension'] = $valueAsDimension;

        return $this;
    }

    /**
     * Gets valueAsCurrency
     *
     * @return \Webcom\Amazon\Rest\MerchantFulfillmentApiV0\Model\CurrencyAmountV0|null
     */
    public function getValueAsCurrency()
    {
        return $this->container['valueAsCurrency'];
    }

    /**
     * Sets valueAsCurrency
     *
     * @param \Webcom\Amazon\Rest\MerchantFulfillmentApiV0\Model\CurrencyAmountV0|null $valueAsCurrency valueAsCurrency
     *
     * @return self
     */
    public function setValueAsCurrency($valueAsCurrency)
    {
        $this->container['valueAsCurrency'] = $valueAsCurrency;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


