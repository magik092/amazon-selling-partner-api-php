<?php
/**
 * ShipmentItem
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Webcom\Amazon\Rest\ShipmentInvoicingApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner API for Shipment Invoicing
 *
 * The Selling Partner API for Shipment Invoicing helps you programmatically retrieve shipment invoice information in the Brazil marketplace for a selling partnerâ€™s Fulfillment by Amazon (FBA) orders.
 *
 * The version of the OpenAPI document: v0
 *
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Webcom\Amazon\Rest\ShipmentInvoicingApi\Model;

use Webcom\Amazon\Rest\ModelInterface;
use \ArrayAccess;
use \Webcom\Amazon\Rest\ObjectSerializer;

/**
 * ShipmentItem Class Doc Comment
 *
 * @category Class
 * @description The shipment item information required by a seller to issue a shipment invoice.
 * @package  Webcom\Amazon\Rest\ShipmentInvoicingApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class ShipmentItem implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;
    /**
     * The original name of the model.
     *
     * @var string
     */
    protected static $openAPIModelName = 'ShipmentItem';
    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @var string[]
     */
    protected static $openAPITypes = [
        'aSIN'              => 'string',
        'sellerSKU'         => 'string',
        'orderItemId'       => 'string',
        'title'             => 'string',
        'quantityOrdered'   => 'float',
        'itemPrice'         => '\Webcom\Amazon\Rest\ShipmentInvoicingApi\Model\Money',
        'shippingPrice'     => '\Webcom\Amazon\Rest\ShipmentInvoicingApi\Model\Money',
        'giftWrapPrice'     => '\Webcom\Amazon\Rest\ShipmentInvoicingApi\Model\Money',
        'shippingDiscount'  => '\Webcom\Amazon\Rest\ShipmentInvoicingApi\Model\Money',
        'promotionDiscount' => '\Webcom\Amazon\Rest\ShipmentInvoicingApi\Model\Money',
        'serialNumbers'     => 'string[]'
    ];
    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @var string[]
     * @phpstan-var array<string, string|null>
     * @psalm-var array<string, string|null>
     */
    protected static $openAPIFormats = [
        'aSIN'              => null,
        'sellerSKU'         => null,
        'orderItemId'       => null,
        'title'             => null,
        'quantityOrdered'   => null,
        'itemPrice'         => null,
        'shippingPrice'     => null,
        'giftWrapPrice'     => null,
        'shippingDiscount'  => null,
        'promotionDiscount' => null,
        'serialNumbers'     => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'aSIN'              => 'ASIN',
        'sellerSKU'         => 'SellerSKU',
        'orderItemId'       => 'OrderItemId',
        'title'             => 'Title',
        'quantityOrdered'   => 'QuantityOrdered',
        'itemPrice'         => 'ItemPrice',
        'shippingPrice'     => 'ShippingPrice',
        'giftWrapPrice'     => 'GiftWrapPrice',
        'shippingDiscount'  => 'ShippingDiscount',
        'promotionDiscount' => 'PromotionDiscount',
        'serialNumbers'     => 'SerialNumbers'
    ];
    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'aSIN'              => 'setASIN',
        'sellerSKU'         => 'setSellerSKU',
        'orderItemId'       => 'setOrderItemId',
        'title'             => 'setTitle',
        'quantityOrdered'   => 'setQuantityOrdered',
        'itemPrice'         => 'setItemPrice',
        'shippingPrice'     => 'setShippingPrice',
        'giftWrapPrice'     => 'setGiftWrapPrice',
        'shippingDiscount'  => 'setShippingDiscount',
        'promotionDiscount' => 'setPromotionDiscount',
        'serialNumbers'     => 'setSerialNumbers'
    ];
    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'aSIN'              => 'getASIN',
        'sellerSKU'         => 'getSellerSKU',
        'orderItemId'       => 'getOrderItemId',
        'title'             => 'getTitle',
        'quantityOrdered'   => 'getQuantityOrdered',
        'itemPrice'         => 'getItemPrice',
        'shippingPrice'     => 'getShippingPrice',
        'giftWrapPrice'     => 'getGiftWrapPrice',
        'shippingDiscount'  => 'getShippingDiscount',
        'promotionDiscount' => 'getPromotionDiscount',
        'serialNumbers'     => 'getSerialNumbers'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['aSIN'] = $data['aSIN'] ?? null;
        $this->container['sellerSKU'] = $data['sellerSKU'] ?? null;
        $this->container['orderItemId'] = $data['orderItemId'] ?? null;
        $this->container['title'] = $data['title'] ?? null;
        $this->container['quantityOrdered'] = $data['quantityOrdered'] ?? null;
        $this->container['itemPrice'] = $data['itemPrice'] ?? null;
        $this->container['shippingPrice'] = $data['shippingPrice'] ?? null;
        $this->container['giftWrapPrice'] = $data['giftWrapPrice'] ?? null;
        $this->container['shippingDiscount'] = $data['shippingDiscount'] ?? null;
        $this->container['promotionDiscount'] = $data['promotionDiscount'] ?? null;
        $this->container['serialNumbers'] = $data['serialNumbers'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }

    /**
     * Gets aSIN
     *
     * @return string|null
     */
    public function getASIN()
    {
        return $this->container['aSIN'];
    }

    /**
     * Sets aSIN
     *
     * @param string|null $aSIN The Amazon Standard Identification Number (ASIN) of the item.
     *
     * @return self
     */
    public function setASIN($aSIN)
    {
        $this->container['aSIN'] = $aSIN;

        return $this;
    }

    /**
     * Gets sellerSKU
     *
     * @return string|null
     */
    public function getSellerSKU()
    {
        return $this->container['sellerSKU'];
    }

    /**
     * Sets sellerSKU
     *
     * @param string|null $sellerSKU The seller SKU of the item.
     *
     * @return self
     */
    public function setSellerSKU($sellerSKU)
    {
        $this->container['sellerSKU'] = $sellerSKU;

        return $this;
    }

    /**
     * Gets orderItemId
     *
     * @return string|null
     */
    public function getOrderItemId()
    {
        return $this->container['orderItemId'];
    }

    /**
     * Sets orderItemId
     *
     * @param string|null $orderItemId The Amazon-defined identifier for the order item.
     *
     * @return self
     */
    public function setOrderItemId($orderItemId)
    {
        $this->container['orderItemId'] = $orderItemId;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string|null
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string|null $title The name of the item.
     *
     * @return self
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets quantityOrdered
     *
     * @return float|null
     */
    public function getQuantityOrdered()
    {
        return $this->container['quantityOrdered'];
    }

    /**
     * Sets quantityOrdered
     *
     * @param float|null $quantityOrdered The number of items ordered.
     *
     * @return self
     */
    public function setQuantityOrdered($quantityOrdered)
    {
        $this->container['quantityOrdered'] = $quantityOrdered;

        return $this;
    }

    /**
     * Gets itemPrice
     *
     * @return \Webcom\Amazon\Rest\ShipmentInvoicingApi\Model\Money|null
     */
    public function getItemPrice()
    {
        return $this->container['itemPrice'];
    }

    /**
     * Sets itemPrice
     *
     * @param \Webcom\Amazon\Rest\ShipmentInvoicingApi\Model\Money|null $itemPrice itemPrice
     *
     * @return self
     */
    public function setItemPrice($itemPrice)
    {
        $this->container['itemPrice'] = $itemPrice;

        return $this;
    }

    /**
     * Gets shippingPrice
     *
     * @return \Webcom\Amazon\Rest\ShipmentInvoicingApi\Model\Money|null
     */
    public function getShippingPrice()
    {
        return $this->container['shippingPrice'];
    }

    /**
     * Sets shippingPrice
     *
     * @param \Webcom\Amazon\Rest\ShipmentInvoicingApi\Model\Money|null $shippingPrice shippingPrice
     *
     * @return self
     */
    public function setShippingPrice($shippingPrice)
    {
        $this->container['shippingPrice'] = $shippingPrice;

        return $this;
    }

    /**
     * Gets giftWrapPrice
     *
     * @return \Webcom\Amazon\Rest\ShipmentInvoicingApi\Model\Money|null
     */
    public function getGiftWrapPrice()
    {
        return $this->container['giftWrapPrice'];
    }

    /**
     * Sets giftWrapPrice
     *
     * @param \Webcom\Amazon\Rest\ShipmentInvoicingApi\Model\Money|null $giftWrapPrice giftWrapPrice
     *
     * @return self
     */
    public function setGiftWrapPrice($giftWrapPrice)
    {
        $this->container['giftWrapPrice'] = $giftWrapPrice;

        return $this;
    }

    /**
     * Gets shippingDiscount
     *
     * @return \Webcom\Amazon\Rest\ShipmentInvoicingApi\Model\Money|null
     */
    public function getShippingDiscount()
    {
        return $this->container['shippingDiscount'];
    }

    /**
     * Sets shippingDiscount
     *
     * @param \Webcom\Amazon\Rest\ShipmentInvoicingApi\Model\Money|null $shippingDiscount shippingDiscount
     *
     * @return self
     */
    public function setShippingDiscount($shippingDiscount)
    {
        $this->container['shippingDiscount'] = $shippingDiscount;

        return $this;
    }

    /**
     * Gets promotionDiscount
     *
     * @return \Webcom\Amazon\Rest\ShipmentInvoicingApi\Model\Money|null
     */
    public function getPromotionDiscount()
    {
        return $this->container['promotionDiscount'];
    }

    /**
     * Sets promotionDiscount
     *
     * @param \Webcom\Amazon\Rest\ShipmentInvoicingApi\Model\Money|null $promotionDiscount promotionDiscount
     *
     * @return self
     */
    public function setPromotionDiscount($promotionDiscount)
    {
        $this->container['promotionDiscount'] = $promotionDiscount;

        return $this;
    }

    /**
     * Gets serialNumbers
     *
     * @return string[]|null
     */
    public function getSerialNumbers()
    {
        return $this->container['serialNumbers'];
    }

    /**
     * Sets serialNumbers
     *
     * @param string[]|null $serialNumbers The list of serial numbers.
     *
     * @return self
     */
    public function setSerialNumbers($serialNumbers)
    {
        $this->container['serialNumbers'] = $serialNumbers;

        return $this;
    }

    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed $value Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
        return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


