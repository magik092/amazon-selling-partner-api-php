<?php
/**
 * InboundShipment20240509
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * The Selling Partner API for Amazon Warehousing and Distribution
 *
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory.
 *
 * The version of the OpenAPI document: 2024-05-09
 *
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model;

use \Webcom\Amazon\Rest\ModelInterface;
use \ArrayAccess;
use \Webcom\Amazon\Rest\ObjectSerializer;

/**
 * InboundShipment20240509 Class Doc Comment
 *
 * @category Class
 * @description Represents an AWD inbound shipment.
 * @package  Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class InboundShipment20240509 implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;
    /**
     * The original name of the model.
     *
     * @var string
     */
    protected static $openAPIModelName = 'InboundShipment';
    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @var string[]
     */
    protected static $openAPITypes = [
        'carrierCode'                 => '\Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\CarrierCode20240509',
        'createdAt'                   => '\DateTime',
        'destinationAddress'          => '\Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\Address20240509',
        'externalReferenceId'         => 'string',
        'orderId'                     => 'string',
        'originAddress'               => '\Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\Address20240509',
        'receivedQuantity'            => '\Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\InventoryQuantity20240509[]',
        'shipBy'                      => '\DateTime',
        'shipmentContainerQuantities' => '\Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\DistributionPackageQuantity20240509[]',
        'shipmentId'                  => 'string',
        'shipmentSkuQuantities'       => '\Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\SkuQuantity20240509[]',
        'shipmentStatus'              => '\Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\InboundShipmentStatus20240509',
        'trackingId'                  => 'string',
        'updatedAt'                   => '\DateTime',
        'warehouseReferenceId'        => 'string',
    ];
    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @var string[]
     * @phpstan-var array<string, string|null>
     * @psalm-var array<string, string|null>
     */
    protected static $openAPIFormats = [
        'carrierCode'                 => null,
        'createdAt'                   => 'date-time',
        'destinationAddress'          => null,
        'externalReferenceId'         => null,
        'orderId'                     => null,
        'originAddress'               => null,
        'receivedQuantity'            => null,
        'shipBy'                      => 'date-time',
        'shipmentContainerQuantities' => null,
        'shipmentId'                  => null,
        'shipmentSkuQuantities'       => null,
        'shipmentStatus'              => null,
        'trackingId'                  => null,
        'updatedAt'                   => 'date-time',
        'warehouseReferenceId'        => null,
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'carrierCode'                 => 'carrierCode',
        'createdAt'                   => 'createdAt',
        'destinationAddress'          => 'destinationAddress',
        'externalReferenceId'         => 'externalReferenceId',
        'orderId'                     => 'orderId',
        'originAddress'               => 'originAddress',
        'receivedQuantity'            => 'receivedQuantity',
        'shipBy'                      => 'shipBy',
        'shipmentContainerQuantities' => 'shipmentContainerQuantities',
        'shipmentId'                  => 'shipmentId',
        'shipmentSkuQuantities'       => 'shipmentSkuQuantities',
        'shipmentStatus'              => 'shipmentStatus',
        'trackingId'                  => 'trackingId',
        'updatedAt'                   => 'updatedAt',
        'warehouseReferenceId'        => 'warehouseReferenceId',
    ];
    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'carrierCode'                 => 'setCarrierCode',
        'createdAt'                   => 'setCreatedAt',
        'destinationAddress'          => 'setDestinationAddress',
        'externalReferenceId'         => 'setExternalReferenceId',
        'orderId'                     => 'setOrderId',
        'originAddress'               => 'setOriginAddress',
        'receivedQuantity'            => 'setReceivedQuantity',
        'shipBy'                      => 'setShipBy',
        'shipmentContainerQuantities' => 'setShipmentContainerQuantities',
        'shipmentId'                  => 'setShipmentId',
        'shipmentSkuQuantities'       => 'setShipmentSkuQuantities',
        'shipmentStatus'              => 'setShipmentStatus',
        'trackingId'                  => 'setTrackingId',
        'updatedAt'                   => 'setUpdatedAt',
        'warehouseReferenceId'        => 'setWarehouseReferenceId',
    ];
    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'carrierCode'                 => 'getCarrierCode',
        'createdAt'                   => 'getCreatedAt',
        'destinationAddress'          => 'getDestinationAddress',
        'externalReferenceId'         => 'getExternalReferenceId',
        'orderId'                     => 'getOrderId',
        'originAddress'               => 'getOriginAddress',
        'receivedQuantity'            => 'getReceivedQuantity',
        'shipBy'                      => 'getShipBy',
        'shipmentContainerQuantities' => 'getShipmentContainerQuantities',
        'shipmentId'                  => 'getShipmentId',
        'shipmentSkuQuantities'       => 'getShipmentSkuQuantities',
        'shipmentStatus'              => 'getShipmentStatus',
        'trackingId'                  => 'getTrackingId',
        'updatedAt'                   => 'getUpdatedAt',
        'warehouseReferenceId'        => 'getWarehouseReferenceId',
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['carrierCode'] = $data['carrierCode'] ?? null;
        $this->container['createdAt'] = $data['createdAt'] ?? null;
        $this->container['destinationAddress'] = $data['destinationAddress'] ?? null;
        $this->container['externalReferenceId'] = $data['externalReferenceId'] ?? null;
        $this->container['orderId'] = $data['orderId'] ?? null;
        $this->container['originAddress'] = $data['originAddress'] ?? null;
        $this->container['receivedQuantity'] = $data['receivedQuantity'] ?? null;
        $this->container['shipBy'] = $data['shipBy'] ?? null;
        $this->container['shipmentContainerQuantities'] = $data['shipmentContainerQuantities'] ?? null;
        $this->container['shipmentId'] = $data['shipmentId'] ?? null;
        $this->container['shipmentSkuQuantities'] = $data['shipmentSkuQuantities'] ?? null;
        $this->container['shipmentStatus'] = $data['shipmentStatus'] ?? null;
        $this->container['trackingId'] = $data['trackingId'] ?? null;
        $this->container['updatedAt'] = $data['updatedAt'] ?? null;
        $this->container['warehouseReferenceId'] = $data['warehouseReferenceId'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['destinationAddress'] === null) {
            $invalidProperties[] = "'destinationAddress' can't be null";
        }
        if ($this->container['orderId'] === null) {
            $invalidProperties[] = "'orderId' can't be null";
        }
        if ((mb_strlen($this->container['orderId']) < 1)) {
            $invalidProperties[] = "invalid value for 'orderId', the character length must be bigger than or equal to 1.";
        }

        if ($this->container['originAddress'] === null) {
            $invalidProperties[] = "'originAddress' can't be null";
        }
        if ($this->container['shipmentContainerQuantities'] === null) {
            $invalidProperties[] = "'shipmentContainerQuantities' can't be null";
        }
        if ($this->container['shipmentId'] === null) {
            $invalidProperties[] = "'shipmentId' can't be null";
        }
        if ((mb_strlen($this->container['shipmentId']) < 1)) {
            $invalidProperties[] = "invalid value for 'shipmentId', the character length must be bigger than or equal to 1.";
        }

        if ($this->container['shipmentStatus'] === null) {
            $invalidProperties[] = "'shipmentStatus' can't be null";
        }
        if (!is_null($this->container['trackingId']) && (mb_strlen($this->container['trackingId']) < 1)) {
            $invalidProperties[] = "invalid value for 'trackingId', the character length must be bigger than or equal to 1.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }

    /**
     * Gets carrierCode
     *
     * @return \Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\CarrierCode20240509|null
     */
    public function getCarrierCode()
    {
        return $this->container['carrierCode'];
    }

    /**
     * Sets carrierCode
     *
     * @param \Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\CarrierCode20240509|null $carrierCode carrierCode
     *
     * @return self
     */
    public function setCarrierCode($carrierCode)
    {
        $this->container['carrierCode'] = $carrierCode;

        return $this;
    }

    /**
     * Gets createdAt
     *
     * @return \DateTime|null
     */
    public function getCreatedAt()
    {
        return $this->container['createdAt'];
    }

    /**
     * Sets createdAt
     *
     * @param \DateTime|null $createdAt Timestamp when the shipment was created. The date is returned in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     *
     * @return self
     */
    public function setCreatedAt($createdAt)
    {
        $this->container['createdAt'] = $createdAt;

        return $this;
    }

    /**
     * Gets destinationAddress
     *
     * @return \Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\Address20240509
     */
    public function getDestinationAddress()
    {
        return $this->container['destinationAddress'];
    }

    /**
     * Sets destinationAddress
     *
     * @param \Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\Address20240509 $destinationAddress destinationAddress
     *
     * @return self
     */
    public function setDestinationAddress($destinationAddress)
    {
        $this->container['destinationAddress'] = $destinationAddress;

        return $this;
    }

    /**
     * Gets externalReferenceId
     *
     * @return string|null
     */
    public function getExternalReferenceId()
    {
        return $this->container['externalReferenceId'];
    }

    /**
     * Sets externalReferenceId
     *
     * @param string|null $externalReferenceId Client-provided reference ID that can correlate this shipment to client resources. For example, to map this shipment to an internal bookkeeping order record.
     *
     * @return self
     */
    public function setExternalReferenceId($externalReferenceId)
    {
        $this->container['externalReferenceId'] = $externalReferenceId;

        return $this;
    }

    /**
     * Gets orderId
     *
     * @return string
     */
    public function getOrderId()
    {
        return $this->container['orderId'];
    }

    /**
     * Sets orderId
     *
     * @param string $orderId The AWD inbound order ID that this inbound shipment belongs to.
     *
     * @return self
     */
    public function setOrderId($orderId)
    {
        if ((mb_strlen($orderId) < 1)) {
            throw new \InvalidArgumentException('invalid length for $orderId when calling InboundShipment20240509., must be bigger than or equal to 1.');
        }

        $this->container['orderId'] = $orderId;

        return $this;
    }

    /**
     * Gets originAddress
     *
     * @return \Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\Address20240509
     */
    public function getOriginAddress()
    {
        return $this->container['originAddress'];
    }

    /**
     * Sets originAddress
     *
     * @param \Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\Address20240509 $originAddress originAddress
     *
     * @return self
     */
    public function setOriginAddress($originAddress)
    {
        $this->container['originAddress'] = $originAddress;

        return $this;
    }

    /**
     * Gets receivedQuantity
     *
     * @return \Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\InventoryQuantity20240509[]|null
     */
    public function getReceivedQuantity()
    {
        return $this->container['receivedQuantity'];
    }

    /**
     * Sets receivedQuantity
     *
     * @param \Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\InventoryQuantity20240509[]|null $receivedQuantity Quantity received (at the receiving end) as part of this shipment.
     *
     * @return self
     */
    public function setReceivedQuantity($receivedQuantity)
    {
        $this->container['receivedQuantity'] = $receivedQuantity;

        return $this;
    }

    /**
     * Gets shipBy
     *
     * @return \DateTime|null
     */
    public function getShipBy()
    {
        return $this->container['shipBy'];
    }

    /**
     * Sets shipBy
     *
     * @param \DateTime|null $shipBy Timestamp when the shipment will be shipped.
     *
     * @return self
     */
    public function setShipBy($shipBy)
    {
        $this->container['shipBy'] = $shipBy;

        return $this;
    }

    /**
     * Gets shipmentContainerQuantities
     *
     * @return \Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\DistributionPackageQuantity20240509[]
     */
    public function getShipmentContainerQuantities()
    {
        return $this->container['shipmentContainerQuantities'];
    }

    /**
     * Sets shipmentContainerQuantities
     *
     * @param \Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\DistributionPackageQuantity20240509[] $shipmentContainerQuantities Packages that are part of this shipment.
     *
     * @return self
     */
    public function setShipmentContainerQuantities($shipmentContainerQuantities)
    {
        $this->container['shipmentContainerQuantities'] = $shipmentContainerQuantities;

        return $this;
    }

    /**
     * Gets shipmentId
     *
     * @return string
     */
    public function getShipmentId()
    {
        return $this->container['shipmentId'];
    }

    /**
     * Sets shipmentId
     *
     * @param string $shipmentId Unique shipment ID.
     *
     * @return self
     */
    public function setShipmentId($shipmentId)
    {
        if ((mb_strlen($shipmentId) < 1)) {
            throw new \InvalidArgumentException('invalid length for $shipmentId when calling InboundShipment20240509., must be bigger than or equal to 1.');
        }

        $this->container['shipmentId'] = $shipmentId;

        return $this;
    }

    /**
     * Gets shipmentSkuQuantities
     *
     * @return \Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\SkuQuantity20240509[]|null
     */
    public function getShipmentSkuQuantities()
    {
        return $this->container['shipmentSkuQuantities'];
    }

    /**
     * Sets shipmentSkuQuantities
     *
     * @param \Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\SkuQuantity20240509[]|null $shipmentSkuQuantities Quantity details at SKU level for the shipment. This attribute will only appear if the skuQuantities parameter in the request is set to SHOW.
     *
     * @return self
     */
    public function setShipmentSkuQuantities($shipmentSkuQuantities)
    {
        $this->container['shipmentSkuQuantities'] = $shipmentSkuQuantities;

        return $this;
    }

    /**
     * Gets shipmentStatus
     *
     * @return \Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\InboundShipmentStatus20240509
     */
    public function getShipmentStatus()
    {
        return $this->container['shipmentStatus'];
    }

    /**
     * Sets shipmentStatus
     *
     * @param \Webcom\Amazon\Rest\AmazonWarehousingAndDistribution20240509\Model\InboundShipmentStatus20240509 $shipmentStatus shipmentStatus
     *
     * @return self
     */
    public function setShipmentStatus($shipmentStatus)
    {
        $this->container['shipmentStatus'] = $shipmentStatus;

        return $this;
    }

    /**
     * Gets trackingId
     *
     * @return string|null
     */
    public function getTrackingId()
    {
        return $this->container['trackingId'];
    }

    /**
     * Sets trackingId
     *
     * @param string|null $trackingId Carrier-unique tracking ID for this shipment.
     *
     * @return self
     */
    public function setTrackingId($trackingId)
    {
        if (!is_null($trackingId) && (mb_strlen($trackingId) < 1)) {
            throw new \InvalidArgumentException('invalid length for $trackingId when calling InboundShipment20240509., must be bigger than or equal to 1.');
        }

        $this->container['trackingId'] = $trackingId;

        return $this;
    }

    /**
     * Gets updatedAt
     *
     * @return \DateTime|null
     */
    public function getUpdatedAt()
    {
        return $this->container['updatedAt'];
    }

    /**
     * Sets updatedAt
     *
     * @param \DateTime|null $updatedAt Timestamp when the shipment was updated. The date is returned in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     *
     * @return self
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->container['updatedAt'] = $updatedAt;

        return $this;
    }

    /**
     * Gets warehouseReferenceId
     *
     * @return string|null
     */
    public function getWarehouseReferenceId()
    {
        return $this->container['warehouseReferenceId'];
    }

    /**
     * Sets warehouseReferenceId
     *
     * @param string|null $warehouseReferenceId An AWD-provided reference ID that you can use to interact with the warehouse. For example, a carrier appointment booking.
     *
     * @return self
     */
    public function setWarehouseReferenceId($warehouseReferenceId)
    {
        $this->container['warehouseReferenceId'] = $warehouseReferenceId;

        return $this;
    }

    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed $value Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
        return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


