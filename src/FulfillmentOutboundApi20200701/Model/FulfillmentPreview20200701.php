<?php
/**
 * FulfillmentPreview20200701
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Webcom\Amazon\Rest\FulfillmentOutboundApi20200701
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner APIs for Fulfillment Outbound
 *
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model;

use \Webcom\Amazon\Rest\ModelInterface;
use \ArrayAccess;
use \Webcom\Amazon\Rest\ObjectSerializer;

/**
 * FulfillmentPreview20200701 Class Doc Comment
 *
 * @category Class
 * @description Information about a fulfillment order preview, including delivery and fee information based on shipping method.
 * @package  Webcom\Amazon\Rest\FulfillmentOutboundApi20200701
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class FulfillmentPreview20200701 implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'FulfillmentPreview';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'shippingSpeedCategory' => '\Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\ShippingSpeedCategory20200701',
        'scheduledDeliveryInfo' => '\Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\ScheduledDeliveryInfo20200701',
        'isFulfillable' => 'bool',
        'isCODCapable' => 'bool',
        'estimatedShippingWeight' => '\Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\Weight20200701',
        'estimatedFees' => '\Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\Fee20200701[]',
        'fulfillmentPreviewShipments' => '\Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\FulfillmentPreviewShipment20200701[]',
        'unfulfillablePreviewItems' => '\Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\UnfulfillablePreviewItem20200701[]',
        'orderUnfulfillableReasons' => 'string[]',
        'marketplaceId' => 'string',
        'featureConstraints' => '\Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\FeatureSettings20200701[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'shippingSpeedCategory' => null,
        'scheduledDeliveryInfo' => null,
        'isFulfillable' => null,
        'isCODCapable' => null,
        'estimatedShippingWeight' => null,
        'estimatedFees' => null,
        'fulfillmentPreviewShipments' => null,
        'unfulfillablePreviewItems' => null,
        'orderUnfulfillableReasons' => null,
        'marketplaceId' => null,
        'featureConstraints' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'shippingSpeedCategory' => 'shippingSpeedCategory',
        'scheduledDeliveryInfo' => 'scheduledDeliveryInfo',
        'isFulfillable' => 'isFulfillable',
        'isCODCapable' => 'isCODCapable',
        'estimatedShippingWeight' => 'estimatedShippingWeight',
        'estimatedFees' => 'estimatedFees',
        'fulfillmentPreviewShipments' => 'fulfillmentPreviewShipments',
        'unfulfillablePreviewItems' => 'unfulfillablePreviewItems',
        'orderUnfulfillableReasons' => 'orderUnfulfillableReasons',
        'marketplaceId' => 'marketplaceId',
        'featureConstraints' => 'featureConstraints'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'shippingSpeedCategory' => 'setShippingSpeedCategory',
        'scheduledDeliveryInfo' => 'setScheduledDeliveryInfo',
        'isFulfillable' => 'setIsFulfillable',
        'isCODCapable' => 'setIsCODCapable',
        'estimatedShippingWeight' => 'setEstimatedShippingWeight',
        'estimatedFees' => 'setEstimatedFees',
        'fulfillmentPreviewShipments' => 'setFulfillmentPreviewShipments',
        'unfulfillablePreviewItems' => 'setUnfulfillablePreviewItems',
        'orderUnfulfillableReasons' => 'setOrderUnfulfillableReasons',
        'marketplaceId' => 'setMarketplaceId',
        'featureConstraints' => 'setFeatureConstraints'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'shippingSpeedCategory' => 'getShippingSpeedCategory',
        'scheduledDeliveryInfo' => 'getScheduledDeliveryInfo',
        'isFulfillable' => 'getIsFulfillable',
        'isCODCapable' => 'getIsCODCapable',
        'estimatedShippingWeight' => 'getEstimatedShippingWeight',
        'estimatedFees' => 'getEstimatedFees',
        'fulfillmentPreviewShipments' => 'getFulfillmentPreviewShipments',
        'unfulfillablePreviewItems' => 'getUnfulfillablePreviewItems',
        'orderUnfulfillableReasons' => 'getOrderUnfulfillableReasons',
        'marketplaceId' => 'getMarketplaceId',
        'featureConstraints' => 'getFeatureConstraints'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['shippingSpeedCategory'] = $data['shippingSpeedCategory'] ?? null;
        $this->container['scheduledDeliveryInfo'] = $data['scheduledDeliveryInfo'] ?? null;
        $this->container['isFulfillable'] = $data['isFulfillable'] ?? null;
        $this->container['isCODCapable'] = $data['isCODCapable'] ?? null;
        $this->container['estimatedShippingWeight'] = $data['estimatedShippingWeight'] ?? null;
        $this->container['estimatedFees'] = $data['estimatedFees'] ?? null;
        $this->container['fulfillmentPreviewShipments'] = $data['fulfillmentPreviewShipments'] ?? null;
        $this->container['unfulfillablePreviewItems'] = $data['unfulfillablePreviewItems'] ?? null;
        $this->container['orderUnfulfillableReasons'] = $data['orderUnfulfillableReasons'] ?? null;
        $this->container['marketplaceId'] = $data['marketplaceId'] ?? null;
        $this->container['featureConstraints'] = $data['featureConstraints'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['shippingSpeedCategory'] === null) {
            $invalidProperties[] = "'shippingSpeedCategory' can't be null";
        }
        if ($this->container['isFulfillable'] === null) {
            $invalidProperties[] = "'isFulfillable' can't be null";
        }
        if ($this->container['isCODCapable'] === null) {
            $invalidProperties[] = "'isCODCapable' can't be null";
        }
        if ($this->container['marketplaceId'] === null) {
            $invalidProperties[] = "'marketplaceId' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets shippingSpeedCategory
     *
     * @return \Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\ShippingSpeedCategory20200701
     */
    public function getShippingSpeedCategory()
    {
        return $this->container['shippingSpeedCategory'];
    }

    /**
     * Sets shippingSpeedCategory
     *
     * @param \Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\ShippingSpeedCategory20200701 $shippingSpeedCategory shippingSpeedCategory
     *
     * @return self
     */
    public function setShippingSpeedCategory($shippingSpeedCategory)
    {
        $this->container['shippingSpeedCategory'] = $shippingSpeedCategory;

        return $this;
    }

    /**
     * Gets scheduledDeliveryInfo
     *
     * @return \Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\ScheduledDeliveryInfo20200701|null
     */
    public function getScheduledDeliveryInfo()
    {
        return $this->container['scheduledDeliveryInfo'];
    }

    /**
     * Sets scheduledDeliveryInfo
     *
     * @param \Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\ScheduledDeliveryInfo20200701|null $scheduledDeliveryInfo scheduledDeliveryInfo
     *
     * @return self
     */
    public function setScheduledDeliveryInfo($scheduledDeliveryInfo)
    {
        $this->container['scheduledDeliveryInfo'] = $scheduledDeliveryInfo;

        return $this;
    }

    /**
     * Gets isFulfillable
     *
     * @return bool
     */
    public function getIsFulfillable()
    {
        return $this->container['isFulfillable'];
    }

    /**
     * Sets isFulfillable
     *
     * @param bool $isFulfillable When true, this fulfillment order preview is fulfillable.
     *
     * @return self
     */
    public function setIsFulfillable($isFulfillable)
    {
        $this->container['isFulfillable'] = $isFulfillable;

        return $this;
    }

    /**
     * Gets isCODCapable
     *
     * @return bool
     */
    public function getIsCODCapable()
    {
        return $this->container['isCODCapable'];
    }

    /**
     * Sets isCODCapable
     *
     * @param bool $isCODCapable When true, this fulfillment order preview is for COD (Cash On Delivery).
     *
     * @return self
     */
    public function setIsCODCapable($isCODCapable)
    {
        $this->container['isCODCapable'] = $isCODCapable;

        return $this;
    }

    /**
     * Gets estimatedShippingWeight
     *
     * @return \Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\Weight20200701|null
     */
    public function getEstimatedShippingWeight()
    {
        return $this->container['estimatedShippingWeight'];
    }

    /**
     * Sets estimatedShippingWeight
     *
     * @param \Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\Weight20200701|null $estimatedShippingWeight estimatedShippingWeight
     *
     * @return self
     */
    public function setEstimatedShippingWeight($estimatedShippingWeight)
    {
        $this->container['estimatedShippingWeight'] = $estimatedShippingWeight;

        return $this;
    }

    /**
     * Gets estimatedFees
     *
     * @return \Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\Fee20200701[]|null
     */
    public function getEstimatedFees()
    {
        return $this->container['estimatedFees'];
    }

    /**
     * Sets estimatedFees
     *
     * @param \Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\Fee20200701[]|null $estimatedFees An array of fee type and cost pairs.
     *
     * @return self
     */
    public function setEstimatedFees($estimatedFees)
    {
        $this->container['estimatedFees'] = $estimatedFees;

        return $this;
    }

    /**
     * Gets fulfillmentPreviewShipments
     *
     * @return \Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\FulfillmentPreviewShipment20200701[]|null
     */
    public function getFulfillmentPreviewShipments()
    {
        return $this->container['fulfillmentPreviewShipments'];
    }

    /**
     * Sets fulfillmentPreviewShipments
     *
     * @param \Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\FulfillmentPreviewShipment20200701[]|null $fulfillmentPreviewShipments An array of fulfillment preview shipment information.
     *
     * @return self
     */
    public function setFulfillmentPreviewShipments($fulfillmentPreviewShipments)
    {
        $this->container['fulfillmentPreviewShipments'] = $fulfillmentPreviewShipments;

        return $this;
    }

    /**
     * Gets unfulfillablePreviewItems
     *
     * @return \Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\UnfulfillablePreviewItem20200701[]|null
     */
    public function getUnfulfillablePreviewItems()
    {
        return $this->container['unfulfillablePreviewItems'];
    }

    /**
     * Sets unfulfillablePreviewItems
     *
     * @param \Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\UnfulfillablePreviewItem20200701[]|null $unfulfillablePreviewItems An array of unfulfillable preview item information.
     *
     * @return self
     */
    public function setUnfulfillablePreviewItems($unfulfillablePreviewItems)
    {
        $this->container['unfulfillablePreviewItems'] = $unfulfillablePreviewItems;

        return $this;
    }

    /**
     * Gets orderUnfulfillableReasons
     *
     * @return string[]|null
     */
    public function getOrderUnfulfillableReasons()
    {
        return $this->container['orderUnfulfillableReasons'];
    }

    /**
     * Sets orderUnfulfillableReasons
     *
     * @param string[]|null $orderUnfulfillableReasons String list
     *
     * @return self
     */
    public function setOrderUnfulfillableReasons($orderUnfulfillableReasons)
    {
        $this->container['orderUnfulfillableReasons'] = $orderUnfulfillableReasons;

        return $this;
    }

    /**
     * Gets marketplaceId
     *
     * @return string
     */
    public function getMarketplaceId()
    {
        return $this->container['marketplaceId'];
    }

    /**
     * Sets marketplaceId
     *
     * @param string $marketplaceId The marketplace the fulfillment order is placed against.
     *
     * @return self
     */
    public function setMarketplaceId($marketplaceId)
    {
        $this->container['marketplaceId'] = $marketplaceId;

        return $this;
    }

    /**
     * Gets featureConstraints
     *
     * @return \Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\FeatureSettings20200701[]|null
     */
    public function getFeatureConstraints()
    {
        return $this->container['featureConstraints'];
    }

    /**
     * Sets featureConstraints
     *
     * @param \Webcom\Amazon\Rest\FulfillmentOutboundApi20200701\Model\FeatureSettings20200701[]|null $featureConstraints A list of features and their fulfillment policies to apply to the order.
     *
     * @return self
     */
    public function setFeatureConstraints($featureConstraints)
    {
        $this->container['featureConstraints'] = $featureConstraints;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


