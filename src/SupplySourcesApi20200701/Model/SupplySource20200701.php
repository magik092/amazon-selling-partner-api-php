<?php
/**
 * SupplySource20200701
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Webcom\Amazon\Rest\SupplySourcesApi20200701
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner API for Supply Sources
 *
 * Manage configurations and capabilities of seller supply sources.
 *
 * The version of the OpenAPI document: 2020-07-01
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Webcom\Amazon\Rest\SupplySourcesApi20200701\Model;

use \Webcom\Amazon\Rest\ModelInterface;
use \ArrayAccess;
use \Webcom\Amazon\Rest\ObjectSerializer;

/**
 * SupplySource20200701 Class Doc Comment
 *
 * @category Class
 * @description The supply source details, including configurations and capabilities.
 * @package  Webcom\Amazon\Rest\SupplySourcesApi20200701
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class SupplySource20200701 implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'SupplySource';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'supplySourceId' => 'string',
        'supplySourceCode' => 'string',
        'alias' => 'string',
        'status' => '\Webcom\Amazon\Rest\SupplySourcesApi20200701\Model\SupplySourceStatusReadOnly20200701',
        'address' => '\Webcom\Amazon\Rest\SupplySourcesApi20200701\Model\Address20200701',
        'configuration' => '\Webcom\Amazon\Rest\SupplySourcesApi20200701\Model\SupplySourceConfiguration20200701',
        'capabilities' => '\Webcom\Amazon\Rest\SupplySourcesApi20200701\Model\SupplySourceCapabilities20200701',
        'createdAt' => 'string',
        'updatedAt' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'supplySourceId' => null,
        'supplySourceCode' => null,
        'alias' => null,
        'status' => null,
        'address' => null,
        'configuration' => null,
        'capabilities' => null,
        'createdAt' => null,
        'updatedAt' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'supplySourceId' => 'supplySourceId',
        'supplySourceCode' => 'supplySourceCode',
        'alias' => 'alias',
        'status' => 'status',
        'address' => 'address',
        'configuration' => 'configuration',
        'capabilities' => 'capabilities',
        'createdAt' => 'createdAt',
        'updatedAt' => 'updatedAt'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'supplySourceId' => 'setSupplySourceId',
        'supplySourceCode' => 'setSupplySourceCode',
        'alias' => 'setAlias',
        'status' => 'setStatus',
        'address' => 'setAddress',
        'configuration' => 'setConfiguration',
        'capabilities' => 'setCapabilities',
        'createdAt' => 'setCreatedAt',
        'updatedAt' => 'setUpdatedAt'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'supplySourceId' => 'getSupplySourceId',
        'supplySourceCode' => 'getSupplySourceCode',
        'alias' => 'getAlias',
        'status' => 'getStatus',
        'address' => 'getAddress',
        'configuration' => 'getConfiguration',
        'capabilities' => 'getCapabilities',
        'createdAt' => 'getCreatedAt',
        'updatedAt' => 'getUpdatedAt'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['supplySourceId'] = $data['supplySourceId'] ?? null;
        $this->container['supplySourceCode'] = $data['supplySourceCode'] ?? null;
        $this->container['alias'] = $data['alias'] ?? null;
        $this->container['status'] = $data['status'] ?? null;
        $this->container['address'] = $data['address'] ?? null;
        $this->container['configuration'] = $data['configuration'] ?? null;
        $this->container['capabilities'] = $data['capabilities'] ?? null;
        $this->container['createdAt'] = $data['createdAt'] ?? null;
        $this->container['updatedAt'] = $data['updatedAt'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets supplySourceId
     *
     * @return string|null
     */
    public function getSupplySourceId()
    {
        return $this->container['supplySourceId'];
    }

    /**
     * Sets supplySourceId
     *
     * @param string|null $supplySourceId An Amazon generated unique supply source ID.
     *
     * @return self
     */
    public function setSupplySourceId($supplySourceId)
    {
        $this->container['supplySourceId'] = $supplySourceId;

        return $this;
    }

    /**
     * Gets supplySourceCode
     *
     * @return string|null
     */
    public function getSupplySourceCode()
    {
        return $this->container['supplySourceCode'];
    }

    /**
     * Sets supplySourceCode
     *
     * @param string|null $supplySourceCode The seller-provided unique supply source code.
     *
     * @return self
     */
    public function setSupplySourceCode($supplySourceCode)
    {
        $this->container['supplySourceCode'] = $supplySourceCode;

        return $this;
    }

    /**
     * Gets alias
     *
     * @return string|null
     */
    public function getAlias()
    {
        return $this->container['alias'];
    }

    /**
     * Sets alias
     *
     * @param string|null $alias The custom alias for this supply source
     *
     * @return self
     */
    public function setAlias($alias)
    {
        $this->container['alias'] = $alias;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Webcom\Amazon\Rest\SupplySourcesApi20200701\Model\SupplySourceStatusReadOnly20200701|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Webcom\Amazon\Rest\SupplySourcesApi20200701\Model\SupplySourceStatusReadOnly20200701|null $status status
     *
     * @return self
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets address
     *
     * @return \Webcom\Amazon\Rest\SupplySourcesApi20200701\Model\Address20200701|null
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param \Webcom\Amazon\Rest\SupplySourcesApi20200701\Model\Address20200701|null $address address
     *
     * @return self
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets configuration
     *
     * @return \Webcom\Amazon\Rest\SupplySourcesApi20200701\Model\SupplySourceConfiguration20200701|null
     */
    public function getConfiguration()
    {
        return $this->container['configuration'];
    }

    /**
     * Sets configuration
     *
     * @param \Webcom\Amazon\Rest\SupplySourcesApi20200701\Model\SupplySourceConfiguration20200701|null $configuration configuration
     *
     * @return self
     */
    public function setConfiguration($configuration)
    {
        $this->container['configuration'] = $configuration;

        return $this;
    }

    /**
     * Gets capabilities
     *
     * @return \Webcom\Amazon\Rest\SupplySourcesApi20200701\Model\SupplySourceCapabilities20200701|null
     */
    public function getCapabilities()
    {
        return $this->container['capabilities'];
    }

    /**
     * Sets capabilities
     *
     * @param \Webcom\Amazon\Rest\SupplySourcesApi20200701\Model\SupplySourceCapabilities20200701|null $capabilities capabilities
     *
     * @return self
     */
    public function setCapabilities($capabilities)
    {
        $this->container['capabilities'] = $capabilities;

        return $this;
    }

    /**
     * Gets createdAt
     *
     * @return string|null
     */
    public function getCreatedAt()
    {
        return $this->container['createdAt'];
    }

    /**
     * Sets createdAt
     *
     * @param string|null $createdAt A date and time in the rfc3339 format.
     *
     * @return self
     */
    public function setCreatedAt($createdAt)
    {
        $this->container['createdAt'] = $createdAt;

        return $this;
    }

    /**
     * Gets updatedAt
     *
     * @return string|null
     */
    public function getUpdatedAt()
    {
        return $this->container['updatedAt'];
    }

    /**
     * Sets updatedAt
     *
     * @param string|null $updatedAt A date and time in the rfc3339 format.
     *
     * @return self
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->container['updatedAt'] = $updatedAt;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


