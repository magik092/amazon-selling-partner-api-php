<?php
/**
 * ShippingService
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Webcom\Amazon\Rest\MerchantFulfillmentApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner API for Merchant Fulfillment
 *
 * The Selling Partner API for Merchant Fulfillment helps you build applications that let sellers purchase shipping for non-Prime and Prime orders using Amazonâ€™s Buy Shipping Services.
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Webcom\Amazon\Rest\MerchantFulfillmentApi\Model;

use \Webcom\Amazon\Rest\ModelInterface;
use \ArrayAccess;
use \Webcom\Amazon\Rest\ObjectSerializer;

/**
 * ShippingService Class Doc Comment
 *
 * @category Class
 * @description A shipping service offer made by a carrier.
 * @package  Webcom\Amazon\Rest\MerchantFulfillmentApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class ShippingService implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ShippingService';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'shippingServiceName' => 'string',
        'carrierName' => 'string',
        'shippingServiceId' => 'string',
        'shippingServiceOfferId' => 'string',
        'shipDate' => '\DateTime',
        'earliestEstimatedDeliveryDate' => '\DateTime',
        'latestEstimatedDeliveryDate' => '\DateTime',
        'rate' => '\Webcom\Amazon\Rest\MerchantFulfillmentApi\Model\CurrencyAmount',
        'shippingServiceOptions' => '\Webcom\Amazon\Rest\MerchantFulfillmentApi\Model\ShippingServiceOptions',
        'availableShippingServiceOptions' => '\Webcom\Amazon\Rest\MerchantFulfillmentApi\Model\AvailableShippingServiceOptions',
        'availableLabelFormats' => '\Webcom\Amazon\Rest\MerchantFulfillmentApi\Model\LabelFormat[]',
        'availableFormatOptionsForLabel' => '\Webcom\Amazon\Rest\MerchantFulfillmentApi\Model\LabelFormatOption[]',
        'requiresAdditionalSellerInputs' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'shippingServiceName' => null,
        'carrierName' => null,
        'shippingServiceId' => null,
        'shippingServiceOfferId' => null,
        'shipDate' => 'date-time',
        'earliestEstimatedDeliveryDate' => 'date-time',
        'latestEstimatedDeliveryDate' => 'date-time',
        'rate' => null,
        'shippingServiceOptions' => null,
        'availableShippingServiceOptions' => null,
        'availableLabelFormats' => null,
        'availableFormatOptionsForLabel' => null,
        'requiresAdditionalSellerInputs' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'shippingServiceName' => 'ShippingServiceName',
        'carrierName' => 'CarrierName',
        'shippingServiceId' => 'ShippingServiceId',
        'shippingServiceOfferId' => 'ShippingServiceOfferId',
        'shipDate' => 'ShipDate',
        'earliestEstimatedDeliveryDate' => 'EarliestEstimatedDeliveryDate',
        'latestEstimatedDeliveryDate' => 'LatestEstimatedDeliveryDate',
        'rate' => 'Rate',
        'shippingServiceOptions' => 'ShippingServiceOptions',
        'availableShippingServiceOptions' => 'AvailableShippingServiceOptions',
        'availableLabelFormats' => 'AvailableLabelFormats',
        'availableFormatOptionsForLabel' => 'AvailableFormatOptionsForLabel',
        'requiresAdditionalSellerInputs' => 'RequiresAdditionalSellerInputs'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'shippingServiceName' => 'setShippingServiceName',
        'carrierName' => 'setCarrierName',
        'shippingServiceId' => 'setShippingServiceId',
        'shippingServiceOfferId' => 'setShippingServiceOfferId',
        'shipDate' => 'setShipDate',
        'earliestEstimatedDeliveryDate' => 'setEarliestEstimatedDeliveryDate',
        'latestEstimatedDeliveryDate' => 'setLatestEstimatedDeliveryDate',
        'rate' => 'setRate',
        'shippingServiceOptions' => 'setShippingServiceOptions',
        'availableShippingServiceOptions' => 'setAvailableShippingServiceOptions',
        'availableLabelFormats' => 'setAvailableLabelFormats',
        'availableFormatOptionsForLabel' => 'setAvailableFormatOptionsForLabel',
        'requiresAdditionalSellerInputs' => 'setRequiresAdditionalSellerInputs'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'shippingServiceName' => 'getShippingServiceName',
        'carrierName' => 'getCarrierName',
        'shippingServiceId' => 'getShippingServiceId',
        'shippingServiceOfferId' => 'getShippingServiceOfferId',
        'shipDate' => 'getShipDate',
        'earliestEstimatedDeliveryDate' => 'getEarliestEstimatedDeliveryDate',
        'latestEstimatedDeliveryDate' => 'getLatestEstimatedDeliveryDate',
        'rate' => 'getRate',
        'shippingServiceOptions' => 'getShippingServiceOptions',
        'availableShippingServiceOptions' => 'getAvailableShippingServiceOptions',
        'availableLabelFormats' => 'getAvailableLabelFormats',
        'availableFormatOptionsForLabel' => 'getAvailableFormatOptionsForLabel',
        'requiresAdditionalSellerInputs' => 'getRequiresAdditionalSellerInputs'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['shippingServiceName'] = $data['shippingServiceName'] ?? null;
        $this->container['carrierName'] = $data['carrierName'] ?? null;
        $this->container['shippingServiceId'] = $data['shippingServiceId'] ?? null;
        $this->container['shippingServiceOfferId'] = $data['shippingServiceOfferId'] ?? null;
        $this->container['shipDate'] = $data['shipDate'] ?? null;
        $this->container['earliestEstimatedDeliveryDate'] = $data['earliestEstimatedDeliveryDate'] ?? null;
        $this->container['latestEstimatedDeliveryDate'] = $data['latestEstimatedDeliveryDate'] ?? null;
        $this->container['rate'] = $data['rate'] ?? null;
        $this->container['shippingServiceOptions'] = $data['shippingServiceOptions'] ?? null;
        $this->container['availableShippingServiceOptions'] = $data['availableShippingServiceOptions'] ?? null;
        $this->container['availableLabelFormats'] = $data['availableLabelFormats'] ?? null;
        $this->container['availableFormatOptionsForLabel'] = $data['availableFormatOptionsForLabel'] ?? null;
        $this->container['requiresAdditionalSellerInputs'] = $data['requiresAdditionalSellerInputs'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['shippingServiceName'] === null) {
            $invalidProperties[] = "'shippingServiceName' can't be null";
        }
        if ($this->container['carrierName'] === null) {
            $invalidProperties[] = "'carrierName' can't be null";
        }
        if ($this->container['shippingServiceId'] === null) {
            $invalidProperties[] = "'shippingServiceId' can't be null";
        }
        if ($this->container['shippingServiceOfferId'] === null) {
            $invalidProperties[] = "'shippingServiceOfferId' can't be null";
        }
        if ($this->container['shipDate'] === null) {
            $invalidProperties[] = "'shipDate' can't be null";
        }
        if ($this->container['rate'] === null) {
            $invalidProperties[] = "'rate' can't be null";
        }
        if ($this->container['shippingServiceOptions'] === null) {
            $invalidProperties[] = "'shippingServiceOptions' can't be null";
        }
        if ($this->container['requiresAdditionalSellerInputs'] === null) {
            $invalidProperties[] = "'requiresAdditionalSellerInputs' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets shippingServiceName
     *
     * @return string
     */
    public function getShippingServiceName()
    {
        return $this->container['shippingServiceName'];
    }

    /**
     * Sets shippingServiceName
     *
     * @param string $shippingServiceName A plain text representation of a carrier's shipping service. For example, \"UPS Ground\" or \"FedEx Standard Overnight\".
     *
     * @return self
     */
    public function setShippingServiceName($shippingServiceName)
    {
        $this->container['shippingServiceName'] = $shippingServiceName;

        return $this;
    }

    /**
     * Gets carrierName
     *
     * @return string
     */
    public function getCarrierName()
    {
        return $this->container['carrierName'];
    }

    /**
     * Sets carrierName
     *
     * @param string $carrierName The name of the carrier.
     *
     * @return self
     */
    public function setCarrierName($carrierName)
    {
        $this->container['carrierName'] = $carrierName;

        return $this;
    }

    /**
     * Gets shippingServiceId
     *
     * @return string
     */
    public function getShippingServiceId()
    {
        return $this->container['shippingServiceId'];
    }

    /**
     * Sets shippingServiceId
     *
     * @param string $shippingServiceId An Amazon-defined shipping service identifier.
     *
     * @return self
     */
    public function setShippingServiceId($shippingServiceId)
    {
        $this->container['shippingServiceId'] = $shippingServiceId;

        return $this;
    }

    /**
     * Gets shippingServiceOfferId
     *
     * @return string
     */
    public function getShippingServiceOfferId()
    {
        return $this->container['shippingServiceOfferId'];
    }

    /**
     * Sets shippingServiceOfferId
     *
     * @param string $shippingServiceOfferId An Amazon-defined shipping service offer identifier.
     *
     * @return self
     */
    public function setShippingServiceOfferId($shippingServiceOfferId)
    {
        $this->container['shippingServiceOfferId'] = $shippingServiceOfferId;

        return $this;
    }

    /**
     * Gets shipDate
     *
     * @return \DateTime
     */
    public function getShipDate()
    {
        return $this->container['shipDate'];
    }

    /**
     * Sets shipDate
     *
     * @param \DateTime $shipDate shipDate
     *
     * @return self
     */
    public function setShipDate($shipDate)
    {
        $this->container['shipDate'] = $shipDate;

        return $this;
    }

    /**
     * Gets earliestEstimatedDeliveryDate
     *
     * @return \DateTime|null
     */
    public function getEarliestEstimatedDeliveryDate()
    {
        return $this->container['earliestEstimatedDeliveryDate'];
    }

    /**
     * Sets earliestEstimatedDeliveryDate
     *
     * @param \DateTime|null $earliestEstimatedDeliveryDate earliestEstimatedDeliveryDate
     *
     * @return self
     */
    public function setEarliestEstimatedDeliveryDate($earliestEstimatedDeliveryDate)
    {
        $this->container['earliestEstimatedDeliveryDate'] = $earliestEstimatedDeliveryDate;

        return $this;
    }

    /**
     * Gets latestEstimatedDeliveryDate
     *
     * @return \DateTime|null
     */
    public function getLatestEstimatedDeliveryDate()
    {
        return $this->container['latestEstimatedDeliveryDate'];
    }

    /**
     * Sets latestEstimatedDeliveryDate
     *
     * @param \DateTime|null $latestEstimatedDeliveryDate latestEstimatedDeliveryDate
     *
     * @return self
     */
    public function setLatestEstimatedDeliveryDate($latestEstimatedDeliveryDate)
    {
        $this->container['latestEstimatedDeliveryDate'] = $latestEstimatedDeliveryDate;

        return $this;
    }

    /**
     * Gets rate
     *
     * @return \Webcom\Amazon\Rest\MerchantFulfillmentApi\Model\CurrencyAmount
     */
    public function getRate()
    {
        return $this->container['rate'];
    }

    /**
     * Sets rate
     *
     * @param \Webcom\Amazon\Rest\MerchantFulfillmentApi\Model\CurrencyAmount $rate rate
     *
     * @return self
     */
    public function setRate($rate)
    {
        $this->container['rate'] = $rate;

        return $this;
    }

    /**
     * Gets shippingServiceOptions
     *
     * @return \Webcom\Amazon\Rest\MerchantFulfillmentApi\Model\ShippingServiceOptions
     */
    public function getShippingServiceOptions()
    {
        return $this->container['shippingServiceOptions'];
    }

    /**
     * Sets shippingServiceOptions
     *
     * @param \Webcom\Amazon\Rest\MerchantFulfillmentApi\Model\ShippingServiceOptions $shippingServiceOptions shippingServiceOptions
     *
     * @return self
     */
    public function setShippingServiceOptions($shippingServiceOptions)
    {
        $this->container['shippingServiceOptions'] = $shippingServiceOptions;

        return $this;
    }

    /**
     * Gets availableShippingServiceOptions
     *
     * @return \Webcom\Amazon\Rest\MerchantFulfillmentApi\Model\AvailableShippingServiceOptions|null
     */
    public function getAvailableShippingServiceOptions()
    {
        return $this->container['availableShippingServiceOptions'];
    }

    /**
     * Sets availableShippingServiceOptions
     *
     * @param \Webcom\Amazon\Rest\MerchantFulfillmentApi\Model\AvailableShippingServiceOptions|null $availableShippingServiceOptions availableShippingServiceOptions
     *
     * @return self
     */
    public function setAvailableShippingServiceOptions($availableShippingServiceOptions)
    {
        $this->container['availableShippingServiceOptions'] = $availableShippingServiceOptions;

        return $this;
    }

    /**
     * Gets availableLabelFormats
     *
     * @return \Webcom\Amazon\Rest\MerchantFulfillmentApi\Model\LabelFormat[]|null
     */
    public function getAvailableLabelFormats()
    {
        return $this->container['availableLabelFormats'];
    }

    /**
     * Sets availableLabelFormats
     *
     * @param \Webcom\Amazon\Rest\MerchantFulfillmentApi\Model\LabelFormat[]|null $availableLabelFormats List of label formats.
     *
     * @return self
     */
    public function setAvailableLabelFormats($availableLabelFormats)
    {
        $this->container['availableLabelFormats'] = $availableLabelFormats;

        return $this;
    }

    /**
     * Gets availableFormatOptionsForLabel
     *
     * @return \Webcom\Amazon\Rest\MerchantFulfillmentApi\Model\LabelFormatOption[]|null
     */
    public function getAvailableFormatOptionsForLabel()
    {
        return $this->container['availableFormatOptionsForLabel'];
    }

    /**
     * Sets availableFormatOptionsForLabel
     *
     * @param \Webcom\Amazon\Rest\MerchantFulfillmentApi\Model\LabelFormatOption[]|null $availableFormatOptionsForLabel The available label formats.
     *
     * @return self
     */
    public function setAvailableFormatOptionsForLabel($availableFormatOptionsForLabel)
    {
        $this->container['availableFormatOptionsForLabel'] = $availableFormatOptionsForLabel;

        return $this;
    }

    /**
     * Gets requiresAdditionalSellerInputs
     *
     * @return bool
     */
    public function getRequiresAdditionalSellerInputs()
    {
        return $this->container['requiresAdditionalSellerInputs'];
    }

    /**
     * Sets requiresAdditionalSellerInputs
     *
     * @param bool $requiresAdditionalSellerInputs When true, additional seller inputs are required.
     *
     * @return self
     */
    public function setRequiresAdditionalSellerInputs($requiresAdditionalSellerInputs)
    {
        $this->container['requiresAdditionalSellerInputs'] = $requiresAdditionalSellerInputs;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


