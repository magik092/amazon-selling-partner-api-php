<?php
/**
 * InvoiceItemV1
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Webcom\Amazon\Rest\VendorDirectFulfillmentPaymentsApiV1
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner API for Direct Fulfillment Payments
 *
 * The Selling Partner API for Direct Fulfillment Payments provides programmatic access to a direct fulfillment vendor's invoice data.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Webcom\Amazon\Rest\VendorDirectFulfillmentPaymentsApiV1\Model;

use \Webcom\Amazon\Rest\ModelInterface;
use \ArrayAccess;
use \Webcom\Amazon\Rest\ObjectSerializer;

/**
 * InvoiceItemV1 Class Doc Comment
 *
 * @category Class
 * @description Details of the invoice items.
 * @package  Webcom\Amazon\Rest\VendorDirectFulfillmentPaymentsApiV1
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class InvoiceItemV1 implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'InvoiceItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'itemSequenceNumber' => 'string',
        'buyerProductIdentifier' => 'string',
        'vendorProductIdentifier' => 'string',
        'invoicedQuantity' => '\Webcom\Amazon\Rest\VendorDirectFulfillmentPaymentsApiV1\Model\ItemQuantityV1',
        'netCost' => '\Webcom\Amazon\Rest\VendorDirectFulfillmentPaymentsApiV1\Model\MoneyV1',
        'purchaseOrderNumber' => 'string',
        'vendorOrderNumber' => 'string',
        'hsnCode' => 'string',
        'taxDetails' => '\Webcom\Amazon\Rest\VendorDirectFulfillmentPaymentsApiV1\Model\TaxDetailV1[]',
        'chargeDetails' => '\Webcom\Amazon\Rest\VendorDirectFulfillmentPaymentsApiV1\Model\ChargeDetailsV1[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'itemSequenceNumber' => null,
        'buyerProductIdentifier' => null,
        'vendorProductIdentifier' => null,
        'invoicedQuantity' => null,
        'netCost' => null,
        'purchaseOrderNumber' => null,
        'vendorOrderNumber' => null,
        'hsnCode' => null,
        'taxDetails' => null,
        'chargeDetails' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'itemSequenceNumber' => 'itemSequenceNumber',
        'buyerProductIdentifier' => 'buyerProductIdentifier',
        'vendorProductIdentifier' => 'vendorProductIdentifier',
        'invoicedQuantity' => 'invoicedQuantity',
        'netCost' => 'netCost',
        'purchaseOrderNumber' => 'purchaseOrderNumber',
        'vendorOrderNumber' => 'vendorOrderNumber',
        'hsnCode' => 'hsnCode',
        'taxDetails' => 'taxDetails',
        'chargeDetails' => 'chargeDetails'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'itemSequenceNumber' => 'setItemSequenceNumber',
        'buyerProductIdentifier' => 'setBuyerProductIdentifier',
        'vendorProductIdentifier' => 'setVendorProductIdentifier',
        'invoicedQuantity' => 'setInvoicedQuantity',
        'netCost' => 'setNetCost',
        'purchaseOrderNumber' => 'setPurchaseOrderNumber',
        'vendorOrderNumber' => 'setVendorOrderNumber',
        'hsnCode' => 'setHsnCode',
        'taxDetails' => 'setTaxDetails',
        'chargeDetails' => 'setChargeDetails'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'itemSequenceNumber' => 'getItemSequenceNumber',
        'buyerProductIdentifier' => 'getBuyerProductIdentifier',
        'vendorProductIdentifier' => 'getVendorProductIdentifier',
        'invoicedQuantity' => 'getInvoicedQuantity',
        'netCost' => 'getNetCost',
        'purchaseOrderNumber' => 'getPurchaseOrderNumber',
        'vendorOrderNumber' => 'getVendorOrderNumber',
        'hsnCode' => 'getHsnCode',
        'taxDetails' => 'getTaxDetails',
        'chargeDetails' => 'getChargeDetails'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['itemSequenceNumber'] = $data['itemSequenceNumber'] ?? null;
        $this->container['buyerProductIdentifier'] = $data['buyerProductIdentifier'] ?? null;
        $this->container['vendorProductIdentifier'] = $data['vendorProductIdentifier'] ?? null;
        $this->container['invoicedQuantity'] = $data['invoicedQuantity'] ?? null;
        $this->container['netCost'] = $data['netCost'] ?? null;
        $this->container['purchaseOrderNumber'] = $data['purchaseOrderNumber'] ?? null;
        $this->container['vendorOrderNumber'] = $data['vendorOrderNumber'] ?? null;
        $this->container['hsnCode'] = $data['hsnCode'] ?? null;
        $this->container['taxDetails'] = $data['taxDetails'] ?? null;
        $this->container['chargeDetails'] = $data['chargeDetails'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['itemSequenceNumber'] === null) {
            $invalidProperties[] = "'itemSequenceNumber' can't be null";
        }
        if ($this->container['invoicedQuantity'] === null) {
            $invalidProperties[] = "'invoicedQuantity' can't be null";
        }
        if ($this->container['netCost'] === null) {
            $invalidProperties[] = "'netCost' can't be null";
        }
        if ($this->container['purchaseOrderNumber'] === null) {
            $invalidProperties[] = "'purchaseOrderNumber' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets itemSequenceNumber
     *
     * @return string
     */
    public function getItemSequenceNumber()
    {
        return $this->container['itemSequenceNumber'];
    }

    /**
     * Sets itemSequenceNumber
     *
     * @param string $itemSequenceNumber Numbering of the item on the purchase order. The first item will be 1, the second 2, and so on.
     *
     * @return self
     */
    public function setItemSequenceNumber($itemSequenceNumber)
    {
        $this->container['itemSequenceNumber'] = $itemSequenceNumber;

        return $this;
    }

    /**
     * Gets buyerProductIdentifier
     *
     * @return string|null
     */
    public function getBuyerProductIdentifier()
    {
        return $this->container['buyerProductIdentifier'];
    }

    /**
     * Sets buyerProductIdentifier
     *
     * @param string|null $buyerProductIdentifier Buyer's standard identification number (ASIN) of an item.
     *
     * @return self
     */
    public function setBuyerProductIdentifier($buyerProductIdentifier)
    {
        $this->container['buyerProductIdentifier'] = $buyerProductIdentifier;

        return $this;
    }

    /**
     * Gets vendorProductIdentifier
     *
     * @return string|null
     */
    public function getVendorProductIdentifier()
    {
        return $this->container['vendorProductIdentifier'];
    }

    /**
     * Sets vendorProductIdentifier
     *
     * @param string|null $vendorProductIdentifier The vendor selected product identification of the item.
     *
     * @return self
     */
    public function setVendorProductIdentifier($vendorProductIdentifier)
    {
        $this->container['vendorProductIdentifier'] = $vendorProductIdentifier;

        return $this;
    }

    /**
     * Gets invoicedQuantity
     *
     * @return \Webcom\Amazon\Rest\VendorDirectFulfillmentPaymentsApiV1\Model\ItemQuantityV1
     */
    public function getInvoicedQuantity()
    {
        return $this->container['invoicedQuantity'];
    }

    /**
     * Sets invoicedQuantity
     *
     * @param \Webcom\Amazon\Rest\VendorDirectFulfillmentPaymentsApiV1\Model\ItemQuantityV1 $invoicedQuantity invoicedQuantity
     *
     * @return self
     */
    public function setInvoicedQuantity($invoicedQuantity)
    {
        $this->container['invoicedQuantity'] = $invoicedQuantity;

        return $this;
    }

    /**
     * Gets netCost
     *
     * @return \Webcom\Amazon\Rest\VendorDirectFulfillmentPaymentsApiV1\Model\MoneyV1
     */
    public function getNetCost()
    {
        return $this->container['netCost'];
    }

    /**
     * Sets netCost
     *
     * @param \Webcom\Amazon\Rest\VendorDirectFulfillmentPaymentsApiV1\Model\MoneyV1 $netCost netCost
     *
     * @return self
     */
    public function setNetCost($netCost)
    {
        $this->container['netCost'] = $netCost;

        return $this;
    }

    /**
     * Gets purchaseOrderNumber
     *
     * @return string
     */
    public function getPurchaseOrderNumber()
    {
        return $this->container['purchaseOrderNumber'];
    }

    /**
     * Sets purchaseOrderNumber
     *
     * @param string $purchaseOrderNumber The purchase order number for this order. Formatting Notes: 8-character alpha-numeric code.
     *
     * @return self
     */
    public function setPurchaseOrderNumber($purchaseOrderNumber)
    {
        $this->container['purchaseOrderNumber'] = $purchaseOrderNumber;

        return $this;
    }

    /**
     * Gets vendorOrderNumber
     *
     * @return string|null
     */
    public function getVendorOrderNumber()
    {
        return $this->container['vendorOrderNumber'];
    }

    /**
     * Sets vendorOrderNumber
     *
     * @param string|null $vendorOrderNumber The vendor's order number for this order.
     *
     * @return self
     */
    public function setVendorOrderNumber($vendorOrderNumber)
    {
        $this->container['vendorOrderNumber'] = $vendorOrderNumber;

        return $this;
    }

    /**
     * Gets hsnCode
     *
     * @return string|null
     */
    public function getHsnCode()
    {
        return $this->container['hsnCode'];
    }

    /**
     * Sets hsnCode
     *
     * @param string|null $hsnCode Harmonized System of Nomenclature (HSN) tax code. The HSN number cannot contain alphabets.
     *
     * @return self
     */
    public function setHsnCode($hsnCode)
    {
        $this->container['hsnCode'] = $hsnCode;

        return $this;
    }

    /**
     * Gets taxDetails
     *
     * @return \Webcom\Amazon\Rest\VendorDirectFulfillmentPaymentsApiV1\Model\TaxDetailV1[]|null
     */
    public function getTaxDetails()
    {
        return $this->container['taxDetails'];
    }

    /**
     * Sets taxDetails
     *
     * @param \Webcom\Amazon\Rest\VendorDirectFulfillmentPaymentsApiV1\Model\TaxDetailV1[]|null $taxDetails Individual tax details per line item.
     *
     * @return self
     */
    public function setTaxDetails($taxDetails)
    {
        $this->container['taxDetails'] = $taxDetails;

        return $this;
    }

    /**
     * Gets chargeDetails
     *
     * @return \Webcom\Amazon\Rest\VendorDirectFulfillmentPaymentsApiV1\Model\ChargeDetailsV1[]|null
     */
    public function getChargeDetails()
    {
        return $this->container['chargeDetails'];
    }

    /**
     * Sets chargeDetails
     *
     * @param \Webcom\Amazon\Rest\VendorDirectFulfillmentPaymentsApiV1\Model\ChargeDetailsV1[]|null $chargeDetails Individual charge details per line item.
     *
     * @return self
     */
    public function setChargeDetails($chargeDetails)
    {
        $this->container['chargeDetails'] = $chargeDetails;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


