<?php
/**
 * Export20240619
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Webcom\Amazon\Rest\InvoicesApi20240619
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * The Selling Partner API for Invoices.
 *
 * Use the Selling Partner API for Invoices to retrieve and manage invoice-related operations, which can help selling partners manage their bookkeeping processes.
 *
 * The version of the OpenAPI document: 2024-06-19
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Webcom\Amazon\Rest\InvoicesApi20240619\Model;

use \Webcom\Amazon\Rest\ModelInterface;
use \ArrayAccess;
use \Webcom\Amazon\Rest\ObjectSerializer;

/**
 * Export20240619 Class Doc Comment
 *
 * @category Class
 * @description Detailed information about the export.
 * @package  Webcom\Amazon\Rest\InvoicesApi20240619
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class Export20240619 implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Export';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'errorMessage' => 'string',
        'exportId' => 'string',
        'generateExportFinishedAt' => '\DateTime',
        'generateExportStartedAt' => '\DateTime',
        'invoicesDocumentIds' => 'string[]',
        'status' => '\Webcom\Amazon\Rest\InvoicesApi20240619\Model\ExportStatus20240619'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'errorMessage' => null,
        'exportId' => null,
        'generateExportFinishedAt' => 'date-time',
        'generateExportStartedAt' => 'date-time',
        'invoicesDocumentIds' => null,
        'status' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'errorMessage' => 'errorMessage',
        'exportId' => 'exportId',
        'generateExportFinishedAt' => 'generateExportFinishedAt',
        'generateExportStartedAt' => 'generateExportStartedAt',
        'invoicesDocumentIds' => 'invoicesDocumentIds',
        'status' => 'status'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'errorMessage' => 'setErrorMessage',
        'exportId' => 'setExportId',
        'generateExportFinishedAt' => 'setGenerateExportFinishedAt',
        'generateExportStartedAt' => 'setGenerateExportStartedAt',
        'invoicesDocumentIds' => 'setInvoicesDocumentIds',
        'status' => 'setStatus'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'errorMessage' => 'getErrorMessage',
        'exportId' => 'getExportId',
        'generateExportFinishedAt' => 'getGenerateExportFinishedAt',
        'generateExportStartedAt' => 'getGenerateExportStartedAt',
        'invoicesDocumentIds' => 'getInvoicesDocumentIds',
        'status' => 'getStatus'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['errorMessage'] = $data['errorMessage'] ?? null;
        $this->container['exportId'] = $data['exportId'] ?? null;
        $this->container['generateExportFinishedAt'] = $data['generateExportFinishedAt'] ?? null;
        $this->container['generateExportStartedAt'] = $data['generateExportStartedAt'] ?? null;
        $this->container['invoicesDocumentIds'] = $data['invoicesDocumentIds'] ?? null;
        $this->container['status'] = $data['status'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets errorMessage
     *
     * @return string|null
     */
    public function getErrorMessage()
    {
        return $this->container['errorMessage'];
    }

    /**
     * Sets errorMessage
     *
     * @param string|null $errorMessage When the export generation fails, this attribute contains a description of the error.
     *
     * @return self
     */
    public function setErrorMessage($errorMessage)
    {
        $this->container['errorMessage'] = $errorMessage;

        return $this;
    }

    /**
     * Gets exportId
     *
     * @return string|null
     */
    public function getExportId()
    {
        return $this->container['exportId'];
    }

    /**
     * Sets exportId
     *
     * @param string|null $exportId The export identifier.
     *
     * @return self
     */
    public function setExportId($exportId)
    {
        $this->container['exportId'] = $exportId;

        return $this;
    }

    /**
     * Gets generateExportFinishedAt
     *
     * @return \DateTime|null
     */
    public function getGenerateExportFinishedAt()
    {
        return $this->container['generateExportFinishedAt'];
    }

    /**
     * Sets generateExportFinishedAt
     *
     * @param \DateTime|null $generateExportFinishedAt The date and time when the export generation finished. Vales are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
     *
     * @return self
     */
    public function setGenerateExportFinishedAt($generateExportFinishedAt)
    {
        $this->container['generateExportFinishedAt'] = $generateExportFinishedAt;

        return $this;
    }

    /**
     * Gets generateExportStartedAt
     *
     * @return \DateTime|null
     */
    public function getGenerateExportStartedAt()
    {
        return $this->container['generateExportStartedAt'];
    }

    /**
     * Sets generateExportStartedAt
     *
     * @param \DateTime|null $generateExportStartedAt The date and time when the export generation started. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
     *
     * @return self
     */
    public function setGenerateExportStartedAt($generateExportStartedAt)
    {
        $this->container['generateExportStartedAt'] = $generateExportStartedAt;

        return $this;
    }

    /**
     * Gets invoicesDocumentIds
     *
     * @return string[]|null
     */
    public function getInvoicesDocumentIds()
    {
        return $this->container['invoicesDocumentIds'];
    }

    /**
     * Sets invoicesDocumentIds
     *
     * @param string[]|null $invoicesDocumentIds The identifier for the export documents. To get the information required to retrieve the export document's contents, pass each ID in the `getInvoicesDocument` operation.  This list is empty until the status is `DONE`.
     *
     * @return self
     */
    public function setInvoicesDocumentIds($invoicesDocumentIds)
    {
        $this->container['invoicesDocumentIds'] = $invoicesDocumentIds;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Webcom\Amazon\Rest\InvoicesApi20240619\Model\ExportStatus20240619|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Webcom\Amazon\Rest\InvoicesApi20240619\Model\ExportStatus20240619|null $status status
     *
     * @return self
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


